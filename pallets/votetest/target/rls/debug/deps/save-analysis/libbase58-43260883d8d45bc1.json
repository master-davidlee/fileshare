{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","base58","/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=43260883d8d45bc1","-C","extra-filename=-43260883d8d45bc1","--out-dir","/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libbase58-43260883d8d45bc1.rmeta"},"prelude":{"crate_id":{"name":"base58","disambiguator":[16777386067770725910,11698301221143548428]},"crate_root":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src","external_crates":[{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}}],"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":0,"byte_end":6477,"line_start":1,"line_end":227,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":0,"byte_end":6477,"line_start":1,"line_end":227,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":19},{"krate":0,"index":30},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":13}],"decl_id":null,"docs":" Base58-to-text encoding","sig":null,"attributes":[{"value":"! Base58-to-text encoding","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":28,"byte_end":31,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Based on https://github.com/trezor/trezor-crypto/blob/master/base58.c","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":32,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! commit hash: c6e7d37","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":106,"byte_end":130,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"! works only up to 128 bytes","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":131,"byte_end":161,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":20},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":902,"byte_end":924,"line_start":24,"line_end":24,"column_start":2,"column_end":24},"name":"InvalidBase58Character","qualname":"::FromBase58Error::InvalidBase58Character","value":"FromBase58Error::InvalidBase58Character(char, usize)","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" The input contained a character which is not a part of the base58 format.\n","sig":null,"attributes":[{"value":"/ The input contained a character which is not a part of the base58 format.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":823,"byte_end":900,"line_start":23,"line_end":23,"column_start":2,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":24},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":975,"byte_end":994,"line_start":26,"line_end":26,"column_start":2,"column_end":21},"name":"InvalidBase58Length","qualname":"::FromBase58Error::InvalidBase58Length","value":"FromBase58Error::InvalidBase58Length","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" The input had invalid length.\n","sig":null,"attributes":[{"value":"/ The input had invalid length.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":940,"byte_end":973,"line_start":25,"line_end":25,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":19},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":804,"byte_end":819,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"name":"FromBase58Error","qualname":"::FromBase58Error","value":"FromBase58Error::{InvalidBase58Character, InvalidBase58Length}","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":24}],"decl_id":null,"docs":" Errors that can occur when decoding base58 encoded string.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when decoding base58 encoded string.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":704,"byte_end":766,"line_start":20,"line_end":20,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":5},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1070,"byte_end":1078,"line_start":30,"line_end":30,"column_start":11,"column_end":19},"name":"ToBase58","qualname":"::ToBase58","value":"ToBase58","parent":null,"children":[{"krate":0,"index":6}],"decl_id":null,"docs":" A trait for converting a value to base58 encoded string.\n","sig":null,"attributes":[{"value":"/ A trait for converting a value to base58 encoded string.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":999,"byte_end":1059,"line_start":29,"line_end":29,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1164,"byte_end":1173,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"to_base58","qualname":"::ToBase58::to_base58","value":"fn (&self) -> String","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Converts a value of `self` to a base58 value, returning the owned string.\n","sig":null,"attributes":[{"value":"/ Converts a value of `self` to a base58 value, returning the owned string.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1082,"byte_end":1159,"line_start":31,"line_end":31,"column_start":2,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1255,"byte_end":1265,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromBase58","qualname":"::FromBase58","value":"FromBase58","parent":null,"children":[{"krate":0,"index":8}],"decl_id":null,"docs":" A trait for converting base58 encoded values.\n","sig":null,"attributes":[{"value":"/ A trait for converting base58 encoded values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1195,"byte_end":1244,"line_start":35,"line_end":35,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1391,"byte_end":1402,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"from_base58","qualname":"::FromBase58::from_base58","value":"fn (&self) -> Result<Vec<u8>, FromBase58Error>","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Convert a value of `self`, interpreted as base58 encoded data, into an owned vector of bytes, returning a vector.\n","sig":null,"attributes":[{"value":"/ Convert a value of `self`, interpreted as base58 encoded data, into an owned vector of bytes, returning a vector.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/base58-0.1.0/src/lib.rs","byte_start":1269,"byte_end":1386,"line_start":37,"line_end":37,"column_start":2,"column_end":119}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}