{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_state_machine","--edition=2018","/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=fe01307b60f1adcd","-C","extra-filename=-fe01307b60f1adcd","--out-dir","/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","--extern","hash_db=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libhash_db-0c264603c81309b4.rmeta","--extern","log=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/liblog-0cfc9f3120ac6e4a.rmeta","--extern","num_traits=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libnum_traits-c30dd237327482c2.rmeta","--extern","codec=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparity_scale_codec-f846fd866e90eb5c.rmeta","--extern","parking_lot=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparking_lot-e0419b59a318d878.rmeta","--extern","rand=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/librand-71f2f10ee6923e63.rmeta","--extern","sp_core=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_core-9055fb2270914a2d.rmeta","--extern","sp_externalities=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_externalities-320c4461a6281f53.rmeta","--extern","sp_panic_handler=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_panic_handler-87ce5acfc63a6939.rmeta","--extern","sp_trie=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_trie-8b533129c153bbff.rmeta","--extern","trie_db=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libtrie_db-fbe9ffc2d87029f2.rmeta","--extern","trie_root=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libtrie_root-a35521fa573851a7.rmeta","--cap-lints","allow","-L","native=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/build/clear_on_drop-a23791235c119df6/out","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_state_machine-fe01307b60f1adcd.rmeta"},"prelude":{"crate_id":{"name":"sp_state_machine","disambiguator":[698521374749418897,10707581595686833401]},"crate_root":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src","external_crates":[{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":15,"id":{"name":"log","disambiguator":[9335353625162574946,15944831640773690670]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":17,"id":{"name":"hash_db","disambiguator":[9792644969574235955,776104945287127595]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[15638882894901664300,15938776292720705477]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[379814399442547304,17581532101419470896]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":20,"id":{"name":"arrayvec","disambiguator":[1332372460335241694,11021197825096612758]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[3640415380441394815,6311138287404375443]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":22,"id":{"name":"serde","disambiguator":[13481768320746797087,7282555180186658229]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":23,"id":{"name":"serde_derive","disambiguator":[14214070500933581380,3624999802238555216]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":24,"id":{"name":"sp_core","disambiguator":[17683045494970980731,13559405023477717555]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":25,"id":{"name":"sp_debug_derive","disambiguator":[13522996333100151204,9314162219563761913]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":26,"id":{"name":"impl_serde","disambiguator":[8980924363609643778,8190912899161023955]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":27,"id":{"name":"blake2_rfc","disambiguator":[13425746585612006076,3893349097137814390]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":28,"id":{"name":"arrayvec","disambiguator":[8980556773631144340,1530384929258256254]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":29,"id":{"name":"nodrop","disambiguator":[15580487097472407489,16164216452101372544]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":30,"id":{"name":"constant_time_eq","disambiguator":[7513921960350961442,6826608885349661575]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":31,"id":{"name":"sha2","disambiguator":[2087999941899417202,8652755061219861371]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":32,"id":{"name":"block_buffer","disambiguator":[13746670423446533395,10291558624333589947]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":33,"id":{"name":"byteorder","disambiguator":[8554857055557278435,8958170879440380952]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":34,"id":{"name":"block_padding","disambiguator":[15921479850100810545,9304032769572156234]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":35,"id":{"name":"byte_tools","disambiguator":[16878705203460379785,8432621841611626380]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":36,"id":{"name":"generic_array","disambiguator":[961146259118279585,2903465428615636575]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":37,"id":{"name":"typenum","disambiguator":[10535840393202809930,23112338360262232]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":38,"id":{"name":"fake_simd","disambiguator":[10163378265795300682,3429049470422498345]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":39,"id":{"name":"opaque_debug","disambiguator":[542094102041843082,10502796311115957597]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":40,"id":{"name":"digest","disambiguator":[6126133259670863194,4625233068246866504]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":41,"id":{"name":"tiny_keccak","disambiguator":[16657255994201729273,15749590166371444127]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":42,"id":{"name":"crunchy","disambiguator":[8492468043868098796,9147562601699587076]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":43,"id":{"name":"twox_hash","disambiguator":[14103234801566248918,11854203410743868499]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","num":44,"id":{"name":"rand","disambiguator":[14852911624231536199,4329007306221210672]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":45,"id":{"name":"rand_core","disambiguator":[8541689899428407495,4972805062826425925]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":46,"id":{"name":"getrandom","disambiguator":[13618700189715949314,16365477718892601647]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":47,"id":{"name":"libc","disambiguator":[15850054303935087509,2172107276946414463]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":48,"id":{"name":"rand_chacha","disambiguator":[5821611541543872135,256988615729141104]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":49,"id":{"name":"ppv_lite86","disambiguator":[2483357076725709498,12969028423603202931]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":50,"id":{"name":"rand_pcg","disambiguator":[1329119161985853472,9189108109752656620]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":51,"id":{"name":"sp_std","disambiguator":[11276958021017479825,16325732417868216137]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","num":52,"id":{"name":"parking_lot","disambiguator":[4077664270008470479,11966793794786088639]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":53,"id":{"name":"lock_api","disambiguator":[2863804777762583869,14799884867851676310]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":54,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":55,"id":{"name":"parking_lot_core","disambiguator":[10023082735607659909,12352998360333487442]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":56,"id":{"name":"smallvec","disambiguator":[4204636050770628742,12614792987383810951]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":57,"id":{"name":"regex","disambiguator":[14198027042281804208,86081918665039131]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":58,"id":{"name":"aho_corasick","disambiguator":[6163840134106157642,11678023651240554382]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":59,"id":{"name":"memchr","disambiguator":[1600158827687491313,9258850746937660075]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":60,"id":{"name":"regex_syntax","disambiguator":[6585461900833040906,12117303110178991079]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":61,"id":{"name":"thread_local","disambiguator":[6963393236790488947,14544403037844186749]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":62,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":63,"id":{"name":"base58","disambiguator":[16777386067770725910,11698301221143548428]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":64,"id":{"name":"zeroize","disambiguator":[8419538233743450039,4463467074577268889]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":65,"id":{"name":"zeroize_derive","disambiguator":[2444816796196962847,17316197202642986580]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":66,"id":{"name":"sp_runtime_interface","disambiguator":[682286166039121589,14525474089550891235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":67,"id":{"name":"sp_wasm_interface","disambiguator":[8675793106772160261,13785408035542529938]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":68,"id":{"name":"impl_trait_for_tuples","disambiguator":[11683877044574956040,7740304785833687617]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":69,"id":{"name":"wasmi","disambiguator":[2416228699110756094,1766770583142414386]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":70,"id":{"name":"memory_units","disambiguator":[14678550925423856477,13054517670253120849]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":71,"id":{"name":"parity_wasm","disambiguator":[1554235133951985503,17351528177382477681]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":72,"id":{"name":"wasmi_validation","disambiguator":[16639948640573147516,6276059922634634811]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":73,"id":{"name":"num_rational","disambiguator":[6975831310803048684,9911959382833982500]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":74,"id":{"name":"num_bigint","disambiguator":[12568277182492191496,17615354144430726922]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":75,"id":{"name":"num_integer","disambiguator":[6615314100295200538,6263506198981215227]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build.rs","num":76,"id":{"name":"num_traits","disambiguator":[17866579788280904889,8893385662677143502]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":77,"id":{"name":"sp_tracing","disambiguator":[11438562976580646038,3002446573349231072]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":78,"id":{"name":"tracing","disambiguator":[13479947174673550820,4133118777693013263]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":79,"id":{"name":"tracing_core","disambiguator":[12837523844224698924,229843443816219795]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":80,"id":{"name":"tracing_attributes","disambiguator":[2263492286649080348,13111413153421272784]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":81,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[10297837370306352563,17721521789272836432]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":82,"id":{"name":"sp_externalities","disambiguator":[13735059725287377343,7074722714493672266]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":83,"id":{"name":"sp_storage","disambiguator":[8388726998902642419,5566405698735839699]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":84,"id":{"name":"ref_cast","disambiguator":[14927837505420523305,6271955165879955941]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":85,"id":{"name":"ref_cast_impl","disambiguator":[4388911118607149955,14232018770742587068]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":86,"id":{"name":"impl_serde","disambiguator":[4240565461243128030,16964821940194849107]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":87,"id":{"name":"environmental","disambiguator":[4327085142237264898,15570963526468317845]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":88,"id":{"name":"primitive_types","disambiguator":[2776970764958629400,18334998628678477911]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":89,"id":{"name":"fixed_hash","disambiguator":[14470681025450579457,6662852255323844967]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":90,"id":{"name":"static_assertions","disambiguator":[2878701793821026304,16986476632016046768]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":91,"id":{"name":"rustc_hex","disambiguator":[10434719161438519964,14346445293922435357]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":92,"id":{"name":"uint","disambiguator":[16452983131080529725,17838387769575104159]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":93,"id":{"name":"impl_codec","disambiguator":[10299275643052968783,3017370659095368483]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":94,"id":{"name":"substrate_bip39","disambiguator":[16026320640443918052,13713051357735189700]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":95,"id":{"name":"hmac","disambiguator":[11460341029875594496,1906197491684850741]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":96,"id":{"name":"crypto_mac","disambiguator":[8320459484509458636,4799276508247752895]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":97,"id":{"name":"subtle","disambiguator":[8535025202508457436,17708549248523872086]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":98,"id":{"name":"pbkdf2","disambiguator":[4851686168477502927,14028351777984925782]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":99,"id":{"name":"schnorrkel","disambiguator":[16900468384019694665,10044191511765835896]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":100,"id":{"name":"arrayref","disambiguator":[16829708543304003037,4144275909003046035]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":101,"id":{"name":"curve25519_dalek","disambiguator":[16644072626332759431,10277902055030964482]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":102,"id":{"name":"subtle","disambiguator":[10234490685617874908,7684466441341660066]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":103,"id":{"name":"merlin","disambiguator":[7121650087445607272,2582201859466345986]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":104,"id":{"name":"keccak","disambiguator":[11472536135153304124,6639515317597576426]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":105,"id":{"name":"bip39","disambiguator":[17568215238128443509,8359727043341043963]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":106,"id":{"name":"failure","disambiguator":[16123704538531388289,16892100019265791353]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":107,"id":{"name":"failure_derive","disambiguator":[3132760448282680033,18074464896337337867]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":108,"id":{"name":"backtrace","disambiguator":[18134607837615136743,9446271803075368385]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":109,"id":{"name":"rustc_demangle","disambiguator":[5146049380465956145,771809060488072883]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":110,"id":{"name":"addr2line","disambiguator":[4367394800532784875,14916486106589456017]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":111,"id":{"name":"gimli","disambiguator":[2365300210788396002,3502160938625290209]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":112,"id":{"name":"object","disambiguator":[14105361202928525417,13644467560032816245]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":113,"id":{"name":"rustc_hash","disambiguator":[642462796696129389,1517420890865137522]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":114,"id":{"name":"once_cell","disambiguator":[9949018888993973705,561490500926270181]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":115,"id":{"name":"unicode_normalization","disambiguator":[5970646019162551857,17803897583820378264]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":116,"id":{"name":"secp256k1","disambiguator":[8656482482167472749,13898755881770913524]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":117,"id":{"name":"hmac_drbg","disambiguator":[1089521263031708807,8798061245638132398]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":118,"id":{"name":"hash256_std_hasher","disambiguator":[5964121242482212794,15478076518551278946]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":119,"id":{"name":"futures","disambiguator":[6054638481473170312,13203952068894848752]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":120,"id":{"name":"futures_core","disambiguator":[11059587244940335782,9444176274970569630]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":121,"id":{"name":"futures_util","disambiguator":[2297583133361674607,515887674582286629]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":122,"id":{"name":"pin_utils","disambiguator":[3395662280469368698,5400338344872609158]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":123,"id":{"name":"proc_macro_hack","disambiguator":[11648198905521943211,17157862379242527653]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":124,"id":{"name":"futures_task","disambiguator":[3375057385569108956,3660099607051496066]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":125,"id":{"name":"futures_sink","disambiguator":[11970731802322653413,20414178876719527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":126,"id":{"name":"pin_project","disambiguator":[8927595869626226213,3154285897060979768]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":127,"id":{"name":"pin_project_internal","disambiguator":[8120037564058734458,5789199392772687002]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":128,"id":{"name":"futures_channel","disambiguator":[13337516612303749283,16221296507189771847]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":129,"id":{"name":"slab","disambiguator":[4729543071339994363,11740316045407999008]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":130,"id":{"name":"futures_io","disambiguator":[14784988759255588471,7048209535732240470]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":131,"id":{"name":"futures_macro","disambiguator":[13580139449298337526,18153847132449885543]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":132,"id":{"name":"proc_macro_nested","disambiguator":[325458717225558210,1907731413471412174]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":133,"id":{"name":"futures_executor","disambiguator":[393111632237910805,16437123074104340741]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":134,"id":{"name":"num_cpus","disambiguator":[3634483020136970562,12375898465086858394]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":135,"id":{"name":"parity_util_mem","disambiguator":[3673319352374838710,9109263036345257279]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":136,"id":{"name":"parity_util_mem_derive","disambiguator":[16094718766684562609,9112552796339687964]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":137,"id":{"name":"derive_more","disambiguator":[13664702256915482174,18424806257437289619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":138,"id":{"name":"hex","disambiguator":[18431432733982247784,9665997700775139809]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":139,"id":{"name":"ed25519_dalek","disambiguator":[6077726820243101941,623554713352160653]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","num":140,"id":{"name":"clear_on_drop","disambiguator":[17664436509209251898,11479650557223418245]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":141,"id":{"name":"sp_trie","disambiguator":[10248385436001548364,13201773522252176679]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":142,"id":{"name":"trie_db","disambiguator":[14058592916532296697,15101355858841735982]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":143,"id":{"name":"hashbrown","disambiguator":[10607846963804169666,8224092687569940531]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":144,"id":{"name":"ahash","disambiguator":[7836108867056887213,9815184329433061515]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":145,"id":{"name":"const_random","disambiguator":[4215802248038723435,8585138714700839987]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":146,"id":{"name":"const_random_macro","disambiguator":[17458909312445488312,12242545549692467389]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":147,"id":{"name":"trie_root","disambiguator":[14527925958066830872,5108783250952835176]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","num":148,"id":{"name":"memory_db","disambiguator":[8751240236175815197,15856563000382176854]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","num":149,"id":{"name":"sp_panic_handler","disambiguator":[9035826821212920039,325693535763843033]}}],"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":36192,"line_start":18,"line_end":1309,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":141,"index":256},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1381,"byte_end":1387,"line_start":47,"line_end":47,"column_start":32,"column_end":38},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":141,"index":261},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1389,"byte_end":1398,"line_start":47,"line_end":47,"column_start":40,"column_end":49},"alias_span":null,"name":"TrieDBMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":141,"index":442},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1401,"byte_end":1413,"line_start":47,"line_end":47,"column_start":52,"column_end":64},"alias_span":null,"name":"StorageProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":142,"index":1303},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1415,"byte_end":1422,"line_start":47,"line_end":47,"column_start":66,"column_end":73},"alias_span":null,"name":"TrieMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":142,"index":1244},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1424,"byte_end":1431,"line_start":47,"line_end":47,"column_start":75,"column_end":82},"alias_span":null,"name":"DBValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":141,"index":238},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1433,"byte_end":1441,"line_start":47,"line_end":47,"column_start":84,"column_end":92},"alias_span":null,"name":"MemoryDB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":914},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1461,"byte_end":1478,"line_start":48,"line_end":48,"column_start":18,"column_end":35},"alias_span":null,"name":"TestExternalities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2115},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1495,"byte_end":1513,"line_start":49,"line_end":49,"column_start":16,"column_end":34},"alias_span":null,"name":"BasicExternalities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2184},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1535,"byte_end":1556,"line_start":50,"line_end":50,"column_start":21,"column_end":42},"alias_span":null,"name":"ReadOnlyExternalities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1591},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1558,"byte_end":1570,"line_start":50,"line_end":50,"column_start":44,"column_end":56},"alias_span":null,"name":"InspectState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1586,"byte_end":1589,"line_start":51,"line_end":51,"column_start":14,"column_end":17},"alias_span":null,"name":"Ext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1608,"byte_end":1615,"line_start":52,"line_end":52,"column_start":18,"column_end":25},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1642,"byte_end":1655,"line_start":54,"line_end":54,"column_start":2,"column_end":15},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1659,"byte_end":1683,"line_start":54,"line_end":54,"column_start":19,"column_end":43},"name":"ChangesTrieAnchorBlockId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1686,"byte_end":1691,"line_start":55,"line_end":55,"column_start":2,"column_end":7},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1695,"byte_end":1711,"line_start":55,"line_end":55,"column_start":11,"column_end":27},"name":"ChangesTrieState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1714,"byte_end":1721,"line_start":56,"line_end":56,"column_start":2,"column_end":9},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1725,"byte_end":1743,"line_start":56,"line_end":56,"column_start":13,"column_end":31},"name":"ChangesTrieStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":685},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1746,"byte_end":1758,"line_start":57,"line_end":57,"column_start":2,"column_end":14},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1762,"byte_end":1785,"line_start":57,"line_end":57,"column_start":18,"column_end":41},"name":"ChangesTrieRootsStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1788,"byte_end":1803,"line_start":58,"line_end":58,"column_start":2,"column_end":17},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1807,"byte_end":1833,"line_start":58,"line_end":58,"column_start":21,"column_end":47},"name":"InMemoryChangesTrieStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1836,"byte_end":1846,"line_start":59,"line_end":59,"column_start":2,"column_end":12},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1850,"byte_end":1871,"line_start":59,"line_end":59,"column_start":16,"column_end":37},"name":"ChangesTrieBuildCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1830},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1874,"byte_end":1885,"line_start":60,"line_end":60,"column_start":2,"column_end":13},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1889,"byte_end":1911,"line_start":60,"line_end":60,"column_start":17,"column_end":39},"name":"ChangesTrieCacheAction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1914,"byte_end":1932,"line_start":61,"line_end":61,"column_start":2,"column_end":20},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1936,"byte_end":1965,"line_start":61,"line_end":61,"column_start":24,"column_end":53},"name":"ChangesTrieConfigurationRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1968,"byte_end":1979,"line_start":62,"line_end":62,"column_start":2,"column_end":13},"alias_span":null,"name":"key_changes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1981,"byte_end":1998,"line_start":62,"line_end":62,"column_start":15,"column_end":32},"alias_span":null,"name":"key_changes_proof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2001,"byte_end":2024,"line_start":63,"line_end":63,"column_start":2,"column_end":25},"alias_span":null,"name":"key_changes_proof_check","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2026,"byte_end":2057,"line_start":63,"line_end":63,"column_start":27,"column_end":58},"alias_span":null,"name":"key_changes_proof_check_with_db","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2060,"byte_end":2065,"line_start":64,"line_end":64,"column_start":2,"column_end":7},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2069,"byte_end":2088,"line_start":64,"line_end":64,"column_start":11,"column_end":30},"name":"prune_changes_tries","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2091,"byte_end":2105,"line_start":65,"line_end":65,"column_start":2,"column_end":16},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2109,"byte_end":2136,"line_start":65,"line_end":65,"column_start":20,"column_end":47},"name":"disabled_changes_trie_state","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2139,"byte_end":2150,"line_start":66,"line_end":66,"column_start":2,"column_end":13},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2154,"byte_end":2176,"line_start":66,"line_end":66,"column_start":17,"column_end":39},"name":"ChangesTrieBlockNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2120},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2211,"byte_end":2227,"line_start":69,"line_end":69,"column_start":2,"column_end":18},"alias_span":null,"name":"OverlayedChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2229,"byte_end":2243,"line_start":69,"line_end":69,"column_start":20,"column_end":34},"alias_span":null,"name":"StorageChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2245,"byte_end":2268,"line_start":69,"line_end":69,"column_start":36,"column_end":59},"alias_span":null,"name":"StorageTransactionCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2270,"byte_end":2280,"line_start":69,"line_end":69,"column_start":61,"column_end":71},"alias_span":null,"name":"StorageKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2282,"byte_end":2294,"line_start":69,"line_end":69,"column_start":73,"column_end":85},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2297,"byte_end":2314,"line_start":70,"line_end":70,"column_start":2,"column_end":19},"alias_span":null,"name":"StorageCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2316,"byte_end":2338,"line_start":70,"line_end":70,"column_start":21,"column_end":43},"alias_span":null,"name":"ChildStorageCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2371,"byte_end":2397,"line_start":73,"line_end":73,"column_start":2,"column_end":28},"alias_span":null,"name":"create_proof_check_backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2399,"byte_end":2412,"line_start":73,"line_end":73,"column_start":30,"column_end":43},"alias_span":null,"name":"ProofRecorder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2414,"byte_end":2428,"line_start":73,"line_end":73,"column_start":45,"column_end":59},"alias_span":null,"name":"ProvingBackend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1256},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2430,"byte_end":2452,"line_start":73,"line_end":73,"column_start":61,"column_end":83},"alias_span":null,"name":"ProvingBackendRecorder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2488,"byte_end":2506,"line_start":75,"line_end":75,"column_start":32,"column_end":50},"alias_span":null,"name":"TrieBackendStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1449},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2508,"byte_end":2515,"line_start":75,"line_end":75,"column_start":52,"column_end":59},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1367},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2540,"byte_end":2551,"line_start":76,"line_end":76,"column_start":23,"column_end":34},"alias_span":null,"name":"TrieBackend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2569,"byte_end":2574,"line_start":77,"line_end":77,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2074},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2576,"byte_end":2590,"line_start":77,"line_end":77,"column_start":24,"column_end":38},"alias_span":null,"name":"ExecutionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2620,"byte_end":2630,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"alias_span":null,"name":"new_in_mem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2158},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2648,"byte_end":2657,"line_start":79,"line_end":79,"column_start":17,"column_end":26},"alias_span":null,"name":"UsageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2149},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2659,"byte_end":2668,"line_start":79,"line_end":79,"column_start":28,"column_end":37},"alias_span":null,"name":"UsageUnit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2670,"byte_end":2687,"line_start":79,"line_end":79,"column_start":39,"column_end":56},"alias_span":null,"name":"StateMachineStats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":1772},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2715,"byte_end":2729,"line_start":80,"line_end":80,"column_start":26,"column_end":40},"alias_span":null,"name":"CloneableSpawn","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":36192,"line_start":18,"line_end":1309,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":152},{"krate":0,"index":205},{"krate":0,"index":735},{"krate":0,"index":742},{"krate":0,"index":882},{"krate":0,"index":964},{"krate":0,"index":1051},{"krate":0,"index":1219},{"krate":0,"index":1339},{"krate":0,"index":1418},{"krate":0,"index":1562},{"krate":0,"index":1575},{"krate":0,"index":1645},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1676},{"krate":0,"index":1684},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":2195},{"krate":0,"index":2214},{"krate":0,"index":2212},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2204},{"krate":0,"index":2215},{"krate":0,"index":2222},{"krate":0,"index":2220},{"krate":0,"index":2224},{"krate":0,"index":2236},{"krate":0,"index":1713},{"krate":0,"index":1717},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1748},{"krate":0,"index":1755},{"krate":0,"index":1779},{"krate":0,"index":1785},{"krate":0,"index":1790},{"krate":0,"index":1794},{"krate":0,"index":1798},{"krate":0,"index":1803},{"krate":0,"index":1808},{"krate":0,"index":1813},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1827}],"decl_id":null,"docs":" Substrate state machine implementation.\n","sig":null,"attributes":[{"value":"! Substrate state machine implementation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":731,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":37},{"krate":0,"index":44},{"krate":0,"index":95},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":145}],"decl_id":null,"docs":" State machine backends. These manage the code and storage of contracts.\n","sig":null,"attributes":[{"value":"! State machine backends. These manage the code and storage of contracts.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":36880,"byte_end":36955,"line_start":18,"line_end":18,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37388,"byte_end":37395,"line_start":33,"line_end":33,"column_start":11,"column_end":18},"name":"Backend","qualname":"::backend::Backend","value":"Backend<H: Hasher>: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" A state backend is used to read state data and can have changes committed\n to it.","sig":null,"attributes":[{"value":"/ A state backend is used to read state data and can have changes committed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37227,"byte_end":37304,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ to it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37305,"byte_end":37315,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37316,"byte_end":37319,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The clone operation (if implemented) should be cheap.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37320,"byte_end":37377,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37487,"byte_end":37492,"line_start":35,"line_end":35,"column_start":7,"column_end":12},"name":"Error","qualname":"::backend::Backend::Error","value":"type Error: super::Error;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" An error type when fetching data is not possible.\n","sig":null,"attributes":[{"value":"/ An error type when fetching data is not possible.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37427,"byte_end":37480,"line_start":34,"line_end":34,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37564,"byte_end":37575,"line_start":38,"line_end":38,"column_start":7,"column_end":18},"name":"Transaction","qualname":"::backend::Backend::Transaction","value":"type Transaction: Consolidate + Default + Send;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Storage changes to be applied if committing\n","sig":null,"attributes":[{"value":"/ Storage changes to be applied if committing","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37510,"byte_end":37557,"line_start":37,"line_end":37,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37649,"byte_end":37667,"line_start":41,"line_end":41,"column_start":7,"column_end":25},"name":"TrieBackendStorage","qualname":"::backend::Backend::TrieBackendStorage","value":"type TrieBackendStorage: TrieBackendStorage<H>;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Type of trie backend storage.\n","sig":null,"attributes":[{"value":"/ Type of trie backend storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37609,"byte_end":37642,"line_start":40,"line_end":40,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37760,"byte_end":37767,"line_start":44,"line_end":44,"column_start":5,"column_end":12},"name":"storage","qualname":"::backend::Backend::storage","value":"fn (&self, key: &[u8]) -> Result<Option<StorageValue>, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get keyed storage or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed storage or None if there is nothing associated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37694,"byte_end":37755,"line_start":43,"line_end":43,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37912,"byte_end":37924,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"storage_hash","qualname":"::backend::Backend::storage_hash","value":"fn (&self, key: &[u8]) -> Result<Option<H::Out>, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get keyed storage value hash or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed storage value hash or None if there is nothing associated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37835,"byte_end":37907,"line_start":46,"line_end":46,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38114,"byte_end":38127,"line_start":52,"line_end":52,"column_start":5,"column_end":18},"name":"child_storage","qualname":"::backend::Backend::child_storage","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Result<Option<StorageValue>, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get keyed child storage or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed child storage or None if there is nothing associated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38042,"byte_end":38109,"line_start":51,"line_end":51,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38312,"byte_end":38330,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"child_storage_hash","qualname":"::backend::Backend::child_storage_hash","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Result<Option<H::Out>, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get child keyed storage value hash or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get child keyed storage value hash or None if there is nothing associated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38229,"byte_end":38307,"line_start":58,"line_end":58,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38541,"byte_end":38555,"line_start":68,"line_end":68,"column_start":5,"column_end":19},"name":"exists_storage","qualname":"::backend::Backend::exists_storage","value":"fn (&self, key: &[u8]) -> Result<bool, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" true if a key exists in storage.\n","sig":null,"attributes":[{"value":"/ true if a key exists in storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38500,"byte_end":38536,"line_start":67,"line_end":67,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38693,"byte_end":38713,"line_start":73,"line_end":73,"column_start":5,"column_end":25},"name":"exists_child_storage","qualname":"::backend::Backend::exists_child_storage","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Result<bool, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" true if a key exists in child storage.\n","sig":null,"attributes":[{"value":"/ true if a key exists in child storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38646,"byte_end":38688,"line_start":72,"line_end":72,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38950,"byte_end":38966,"line_start":82,"line_end":82,"column_start":5,"column_end":21},"name":"next_storage_key","qualname":"::backend::Backend::next_storage_key","value":"fn (&self, key: &[u8]) -> Result<Option<StorageKey>, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Return the next key in storage in lexicographic order or `None` if there is no value.\n","sig":null,"attributes":[{"value":"/ Return the next key in storage in lexicographic order or `None` if there is no value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":38856,"byte_end":38945,"line_start":81,"line_end":81,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39132,"byte_end":39154,"line_start":85,"line_end":85,"column_start":5,"column_end":27},"name":"next_child_storage_key","qualname":"::backend::Backend::next_child_storage_key","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Result<Option<StorageKey>, Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Return the next key in child storage in lexicographic order or `None` if there is no value.\n","sig":null,"attributes":[{"value":"/ Return the next key in child storage in lexicographic order or `None` if there is no value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39032,"byte_end":39127,"line_start":84,"line_end":84,"column_start":2,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39341,"byte_end":39366,"line_start":92,"line_end":92,"column_start":5,"column_end":30},"name":"for_keys_in_child_storage","qualname":"::backend::Backend::for_keys_in_child_storage","value":"fn <F> (&self, child_info: &ChildInfo, f: F) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Retrieve all entries keys of child storage and call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of child storage and call `f` for each of those keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39253,"byte_end":39336,"line_start":91,"line_end":91,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39544,"byte_end":39564,"line_start":100,"line_end":100,"column_start":5,"column_end":25},"name":"for_keys_with_prefix","qualname":"::backend::Backend::for_keys_with_prefix","value":"fn <F> (&self, prefix: &[u8], mut f: F) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Retrieve all entries keys which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys which start with the given prefix and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39434,"byte_end":39501,"line_start":98,"line_end":98,"column_start":2,"column_end":69}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39503,"byte_end":39539,"line_start":99,"line_end":99,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39801,"byte_end":39827,"line_start":106,"line_end":106,"column_start":5,"column_end":31},"name":"for_key_values_with_prefix","qualname":"::backend::Backend::for_key_values_with_prefix","value":"fn <F> (&self, prefix: &[u8], f: F) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Retrieve all entries keys and values of which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys and values of which start with the given prefix and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39677,"byte_end":39758,"line_start":104,"line_end":104,"column_start":2,"column_end":83}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39760,"byte_end":39796,"line_start":105,"line_end":105,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40000,"byte_end":40026,"line_start":111,"line_end":111,"column_start":5,"column_end":31},"name":"for_child_keys_with_prefix","qualname":"::backend::Backend::for_child_keys_with_prefix","value":"fn <F> (&self, child_info: &ChildInfo, prefix: &[u8], f: F) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Retrieve all child entries keys which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all child entries keys which start with the given prefix and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39884,"byte_end":39957,"line_start":109,"line_end":109,"column_start":2,"column_end":75}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":39959,"byte_end":39995,"line_start":110,"line_end":110,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40314,"byte_end":40326,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"storage_root","qualname":"::backend::Backend::storage_root","value":"fn <'a> (&self, delta: impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>) -> (H::Out, Self::Transaction)","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Calculate the storage root, with given delta over what is already stored in\n the backend, and produce a \"transaction\" that can be used to commit.\n Does not include child storage updates.\n","sig":null,"attributes":[{"value":"/ Calculate the storage root, with given delta over what is already stored in","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40111,"byte_end":40190,"line_start":118,"line_end":118,"column_start":2,"column_end":81}},{"value":"/ the backend, and produce a \"transaction\" that can be used to commit.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40192,"byte_end":40264,"line_start":119,"line_end":119,"column_start":2,"column_end":74}},{"value":"/ Does not include child storage updates.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40266,"byte_end":40309,"line_start":120,"line_end":120,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40703,"byte_end":40721,"line_start":129,"line_end":129,"column_start":5,"column_end":23},"name":"child_storage_root","qualname":"::backend::Backend::child_storage_root","value":"fn <'a> (&self, child_info: &ChildInfo, delta: impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>) -> (H::Out, bool, Self::Transaction)","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Calculate the child storage root, with given delta over what is already stored in\n the backend, and produce a \"transaction\" that can be used to commit. The second argument\n is true if child storage root equals default storage root.\n","sig":null,"attributes":[{"value":"/ Calculate the child storage root, with given delta over what is already stored in","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40455,"byte_end":40540,"line_start":126,"line_end":126,"column_start":2,"column_end":87}},{"value":"/ the backend, and produce a \"transaction\" that can be used to commit. The second argument","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40542,"byte_end":40634,"line_start":127,"line_end":127,"column_start":2,"column_end":94}},{"value":"/ is true if child storage root equals default storage root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40636,"byte_end":40698,"line_start":128,"line_end":128,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40926,"byte_end":40931,"line_start":136,"line_end":136,"column_start":5,"column_end":10},"name":"pairs","qualname":"::backend::Backend::pairs","value":"fn (&self) -> Vec<(StorageKey, StorageValue)>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get all key/value pairs into a Vec.\n","sig":null,"attributes":[{"value":"/ Get all key/value pairs into a Vec.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40882,"byte_end":40921,"line_start":135,"line_end":135,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41016,"byte_end":41020,"line_start":139,"line_end":139,"column_start":5,"column_end":9},"name":"keys","qualname":"::backend::Backend::keys","value":"fn (&self, prefix: &[u8]) -> Vec<StorageKey>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get all keys with given prefix\n","sig":null,"attributes":[{"value":"/ Get all keys with given prefix","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":40977,"byte_end":41011,"line_start":138,"line_end":138,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41222,"byte_end":41232,"line_start":146,"line_end":146,"column_start":5,"column_end":15},"name":"child_keys","qualname":"::backend::Backend::child_keys","value":"fn (&self, child_info: &ChildInfo, prefix: &[u8]) -> Vec<StorageKey>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get all keys of child storage with given prefix\n","sig":null,"attributes":[{"value":"/ Get all keys of child storage with given prefix","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41166,"byte_end":41217,"line_start":145,"line_end":145,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41469,"byte_end":41484,"line_start":157,"line_end":157,"column_start":5,"column_end":20},"name":"as_trie_backend","qualname":"::backend::Backend::as_trie_backend","value":"fn (&mut self) -> Option<&TrieBackend<Self::TrieBackendStorage, H>>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Try convert into trie backend.\n","sig":null,"attributes":[{"value":"/ Try convert into trie backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41430,"byte_end":41464,"line_start":156,"line_end":156,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41762,"byte_end":41779,"line_start":164,"line_end":164,"column_start":5,"column_end":22},"name":"full_storage_root","qualname":"::backend::Backend::full_storage_root","value":"fn <'a> (&self, delta: impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>, child_deltas:\n    impl Iterator<Item =\n    (&'a ChildInfo, impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>) -> (H::Out, Self::Transaction)","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Calculate the storage root, with given delta over what is already stored\n in the backend, and produce a \"transaction\" that can be used to commit.\n Does include child storage updates.\n","sig":null,"attributes":[{"value":"/ Calculate the storage root, with given delta over what is already stored","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41563,"byte_end":41639,"line_start":161,"line_end":161,"column_start":2,"column_end":78}},{"value":"/ in the backend, and produce a \"transaction\" that can be used to commit.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41641,"byte_end":41716,"line_start":162,"line_end":162,"column_start":2,"column_end":77}},{"value":"/ Does include child storage updates.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":41718,"byte_end":41757,"line_start":163,"line_end":163,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":42944,"byte_end":42966,"line_start":201,"line_end":201,"column_start":5,"column_end":27},"name":"register_overlay_stats","qualname":"::backend::Backend::register_overlay_stats","value":"fn (&mut self, _stats: &crate::stats::StateMachineStats) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Register stats from overlay of state machine.","sig":null,"attributes":[{"value":"/ Register stats from overlay of state machine.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":42846,"byte_end":42895,"line_start":198,"line_end":198,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":42897,"byte_end":42900,"line_start":199,"line_end":199,"column_start":2,"column_end":5}},{"value":"/ By default nothing is registered.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":42902,"byte_end":42939,"line_start":200,"line_end":200,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43210,"byte_end":43220,"line_start":207,"line_end":207,"column_start":5,"column_end":15},"name":"usage_info","qualname":"::backend::Backend::usage_info","value":"fn (&self) -> UsageInfo","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Query backend usage statistics (i/o, memory)","sig":null,"attributes":[{"value":"/ Query backend usage statistics (i/o, memory)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43023,"byte_end":43071,"line_start":203,"line_end":203,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43073,"byte_end":43076,"line_start":204,"line_end":204,"column_start":2,"column_end":5}},{"value":"/ Not all implementations are expected to be able to do this. In the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43078,"byte_end":43148,"line_start":205,"line_end":205,"column_start":2,"column_end":72}},{"value":"/ case when they don't, empty statistics is returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43150,"byte_end":43205,"line_start":206,"line_end":206,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43277,"byte_end":43281,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"wipe","qualname":"::backend::Backend::wipe","value":"fn (&self) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Wipe the state database.\n","sig":null,"attributes":[{"value":"/ Wipe the state database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43244,"byte_end":43272,"line_start":209,"line_end":209,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43387,"byte_end":43393,"line_start":215,"line_end":215,"column_start":5,"column_end":11},"name":"commit","qualname":"::backend::Backend::commit","value":"fn (&self, _: H::Out, _: Self::Transaction) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Commit given transaction to storage.\n","sig":null,"attributes":[{"value":"/ Commit given transaction to storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":43342,"byte_end":43382,"line_start":214,"line_end":214,"column_start":2,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45516,"byte_end":45527,"line_start":301,"line_end":301,"column_start":11,"column_end":22},"name":"Consolidate","qualname":"::backend::Consolidate","value":"Consolidate","parent":null,"children":[{"krate":0,"index":124}],"decl_id":null,"docs":" Trait that allows consolidate two transactions together.\n","sig":null,"attributes":[{"value":"/ Trait that allows consolidate two transactions together.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45445,"byte_end":45505,"line_start":300,"line_end":300,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45578,"byte_end":45589,"line_start":303,"line_end":303,"column_start":5,"column_end":16},"name":"consolidate","qualname":"::backend::Consolidate::consolidate","value":"fn (&mut self, other: Self) -> ()","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Consolidate two transactions into one.\n","sig":null,"attributes":[{"value":"/ Consolidate two transactions into one.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45531,"byte_end":45573,"line_start":302,"line_end":302,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":46704,"byte_end":46722,"line_start":351,"line_end":351,"column_start":12,"column_end":30},"name":"BackendRuntimeCode","qualname":"::backend::BackendRuntimeCode","value":"BackendRuntimeCode {  }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":" Wrapper to create a [`RuntimeCode`] from a type that implements [`Backend`].\n","sig":null,"attributes":[{"value":"/ Wrapper to create a [`RuntimeCode`] from a type that implements [`Backend`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":46612,"byte_end":46692,"line_start":350,"line_end":350,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":47182,"byte_end":47185,"line_start":366,"line_end":366,"column_start":9,"column_end":12},"name":"new","qualname":"<BackendRuntimeCode>::new","value":"fn (backend: &'a B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":47147,"byte_end":47173,"line_start":365,"line_end":365,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":47353,"byte_end":47365,"line_start":374,"line_end":374,"column_start":9,"column_end":21},"name":"runtime_code","qualname":"<BackendRuntimeCode>::runtime_code","value":"fn (&self) -> Result<RuntimeCode, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the [`RuntimeCode`] build from the wrapped `backend`.\n","sig":null,"attributes":[{"value":"/ Return the [`RuntimeCode`] build from the wrapped `backend`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":47280,"byte_end":47344,"line_start":373,"line_end":373,"column_start":2,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":49494,"byte_end":49504,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"new_in_mem","qualname":"::in_memory_backend::new_in_mem","value":"fn <H> () -> TrieBackend<MemoryDB<H>, H>","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty instance of in-memory backend.\n","sig":null,"attributes":[{"value":"/ Create a new empty instance of in-memory backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":49433,"byte_end":49486,"line_start":61,"line_end":61,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":49844,"byte_end":49850,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"name":"update","qualname":"<TrieBackend<MemoryDB<H>, H>>::update","value":"fn <T> (&self, changes: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the state, with applied updates\n","sig":null,"attributes":[{"value":"/ Copy the state, with applied updates","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":49795,"byte_end":49835,"line_start":76,"line_end":76,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":50072,"byte_end":50078,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"insert","qualname":"<TrieBackend<MemoryDB<H>, H>>::insert","value":"fn <T> (&mut self, changes: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert values into backend trie.\n","sig":null,"attributes":[{"value":"/ Insert values into backend trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":50027,"byte_end":50063,"line_start":88,"line_end":88,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51073,"byte_end":51087,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"name":"update_backend","qualname":"<TrieBackend<MemoryDB<H>, H>>::update_backend","value":"fn (&self, root: H::Out, changes: MemoryDB<H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge trie nodes into this backend.\n","sig":null,"attributes":[{"value":"/ Merge trie nodes into this backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51025,"byte_end":51064,"line_start":123,"line_end":123,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51303,"byte_end":51305,"line_start":131,"line_end":131,"column_start":9,"column_end":11},"name":"eq","qualname":"<TrieBackend<MemoryDB<H>, H>>::eq","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare with another in-memory backend.\n","sig":null,"attributes":[{"value":"/ Compare with another in-memory backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51251,"byte_end":51294,"line_start":130,"line_end":130,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99334,"byte_end":99344,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"BuildCache","qualname":"::changes_trie::build_cache::BuildCache","value":"BuildCache {  }","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" Changes trie build cache.","sig":null,"attributes":[{"value":"/ Changes trie build cache.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":98659,"byte_end":98688,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":98689,"byte_end":98692,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Helps to avoid read of changes tries from the database when digest trie","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":98693,"byte_end":98768,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ is built. It holds changed keys for every block (indexed by changes trie","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":98769,"byte_end":98845,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ root) that could be referenced by future digest items. For digest entries","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":98846,"byte_end":98923,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ it also holds keys covered by this digest. Entries for top level digests","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":98924,"byte_end":99000,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ are never created, because they'll never be used to build other digests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99001,"byte_end":99077,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99078,"byte_end":99081,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Entries are pruned from the cache once digest block that is using this entry","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99082,"byte_end":99162,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ is inserted (because digest block will includes all keys from this entry).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99163,"byte_end":99241,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ When there's a fork, entries are pruned when first changes trie is inserted.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99242,"byte_end":99322,"line_start":35,"line_end":35,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":100079,"byte_end":100093,"line_start":50,"line_end":50,"column_start":2,"column_end":16},"name":"CacheBuildData","qualname":"::changes_trie::build_cache::CacheAction::CacheBuildData","value":"CacheAction::CacheBuildData(CachedBuildData<H, N>)","parent":{"krate":0,"index":1830},"children":[],"decl_id":null,"docs":" Cache data that has been collected when CT has been built.\n","sig":null,"attributes":[{"value":"/ Cache data that has been collected when CT has been built.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":100015,"byte_end":100077,"line_start":49,"line_end":49,"column_start":2,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1836},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":100163,"byte_end":100168,"line_start":52,"line_end":52,"column_start":2,"column_end":7},"name":"Clear","qualname":"::changes_trie::build_cache::CacheAction::Clear","value":"CacheAction::Clear","parent":{"krate":0,"index":1830},"children":[],"decl_id":null,"docs":" Clear cache from all existing entries.\n","sig":null,"attributes":[{"value":"/ Clear cache from all existing entries.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":100119,"byte_end":100161,"line_start":51,"line_end":51,"column_start":2,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":1830},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99994,"byte_end":100005,"line_start":48,"line_end":48,"column_start":10,"column_end":21},"name":"CacheAction","qualname":"::changes_trie::build_cache::CacheAction","value":"CacheAction::{CacheBuildData, Clear}","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1836}],"decl_id":null,"docs":" The action to perform when block-with-changes-trie is imported.\n","sig":null,"attributes":[{"value":"/ The action to perform when block-with-changes-trie is imported.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":99889,"byte_end":99956,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":100276,"byte_end":100291,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"CachedBuildData","qualname":"::changes_trie::build_cache::CachedBuildData","value":"CachedBuildData {  }","parent":null,"children":[{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856}],"decl_id":null,"docs":" The data that has been cached during changes trie building.\n","sig":null,"attributes":[{"value":"/ The data that has been cached during changes trie building.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":100173,"byte_end":100236,"line_start":55,"line_end":55,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101165,"byte_end":101168,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"name":"new","qualname":"<BuildCache<H, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new changes trie build cache.\n","sig":null,"attributes":[{"value":"/ Create new changes trie build cache.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101116,"byte_end":101156,"line_start":85,"line_end":85,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101344,"byte_end":101347,"line_start":94,"line_end":94,"column_start":9,"column_end":12},"name":"get","qualname":"<BuildCache<H, N>>::get","value":"fn (&self, root: &H) -> Option<&HashMap<Option<PrefixedStorageKey>, HashSet<StorageKey>>>","parent":null,"children":[],"decl_id":null,"docs":" Get cached changed keys for changes trie with given root.\n","sig":null,"attributes":[{"value":"/ Get cached changed keys for changes trie with given root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101274,"byte_end":101335,"line_start":93,"line_end":93,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101611,"byte_end":101628,"line_start":100,"line_end":100,"column_start":9,"column_end":26},"name":"with_changed_keys","qualname":"<BuildCache<H, N>>::with_changed_keys","value":"fn (&self, root: &H, functor:\n    &mut dyn FnMut(&HashMap<Option<PrefixedStorageKey>, HashSet<StorageKey>>)) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Execute given functor with cached entry for given block.\n Returns true if the functor has been called and false otherwise.\n","sig":null,"attributes":[{"value":"/ Execute given functor with cached entry for given block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101472,"byte_end":101532,"line_start":98,"line_end":98,"column_start":2,"column_end":62}},{"value":"/ Returns true if the functor has been called and false otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101534,"byte_end":101602,"line_start":99,"line_end":99,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101921,"byte_end":101928,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"perform","qualname":"<BuildCache<H, N>>::perform","value":"fn (&mut self, action: CacheAction<H, N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert data into cache.\n","sig":null,"attributes":[{"value":"/ Insert data into cache.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101885,"byte_end":101912,"line_start":114,"line_end":114,"column_start":2,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":371},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":121711,"byte_end":121722,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"key_changes","qualname":"::changes_trie::changes_iterator::key_changes","value":"fn <'a, H, Number> (config: ConfigurationRange<'a, Number>, storage: &'a dyn Storage<H, Number>, begin: Number, end: &'a AnchorBlockId<H::Out, Number>, max: Number, storage_key: Option<&'a PrefixedStorageKey>, key: &'a [u8]) -> Result<DrilldownIterator<'a, H, Number>, String>","parent":null,"children":[],"decl_id":null,"docs":" Return changes of given key at given blocks range.\n `max` is the number of best known block.\n Changes are returned in descending order (i.e. last block comes first).\n","sig":null,"attributes":[{"value":"/ Return changes of given key at given blocks range.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":121528,"byte_end":121582,"line_start":36,"line_end":36,"column_start":1,"column_end":55}},{"value":"/ `max` is the number of best known block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":121583,"byte_end":121627,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/ Changes are returned in descending order (i.e. last block comes first).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":121628,"byte_end":121703,"line_start":38,"line_end":38,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":375},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":122682,"byte_end":122699,"line_start":78,"line_end":78,"column_start":8,"column_end":25},"name":"key_changes_proof","qualname":"::changes_trie::changes_iterator::key_changes_proof","value":"fn <'a, H, Number> (config: ConfigurationRange<'a, Number>, storage: &dyn Storage<H, Number>, begin: Number, end: &AnchorBlockId<H::Out, Number>, max: Number, storage_key: Option<&PrefixedStorageKey>, key: &[u8]) -> Result<Vec<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Returns proof of changes of given key at given blocks range.\n `max` is the number of best known block.\n","sig":null,"attributes":[{"value":"/ Returns proof of changes of given key at given blocks range.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":122565,"byte_end":122629,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ `max` is the number of best known block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":122630,"byte_end":122674,"line_start":77,"line_end":77,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":123902,"byte_end":123925,"line_start":125,"line_end":125,"column_start":8,"column_end":31},"name":"key_changes_proof_check","qualname":"::changes_trie::changes_iterator::key_changes_proof_check","value":"fn <'a, H, Number> (config: ConfigurationRange<'a, Number>, roots_storage: &dyn RootsStorage<H, Number>, proof: Vec<Vec<u8>>, begin: Number, end: &AnchorBlockId<H::Out, Number>, max: Number, storage_key: Option<&PrefixedStorageKey>, key: &[u8]) -> Result<Vec<(Number, u32)>, String>","parent":null,"children":[],"decl_id":null,"docs":" Check key changes proof and return changes of the key at given blocks range.\n `max` is the number of best known block.\n Changes are returned in descending order (i.e. last block comes first).\n","sig":null,"attributes":[{"value":"/ Check key changes proof and return changes of the key at given blocks range.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":123693,"byte_end":123773,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ `max` is the number of best known block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":123774,"byte_end":123818,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/ Changes are returned in descending order (i.e. last block comes first).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":123819,"byte_end":123894,"line_start":124,"line_end":124,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":383},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":124510,"byte_end":124541,"line_start":148,"line_end":148,"column_start":8,"column_end":39},"name":"key_changes_proof_check_with_db","qualname":"::changes_trie::changes_iterator::key_changes_proof_check_with_db","value":"fn <'a, H, Number> (config: ConfigurationRange<'a, Number>, roots_storage: &dyn RootsStorage<H, Number>, proof_db: &InMemoryStorage<H, Number>, begin: Number, end: &AnchorBlockId<H::Out, Number>, max: Number, storage_key: Option<&PrefixedStorageKey>, key: &[u8]) -> Result<Vec<(Number, u32)>, String>","parent":null,"children":[],"decl_id":null,"docs":" Similar to the `key_changes_proof_check` function, but works with prepared proof storage.\n","sig":null,"attributes":[{"value":"/ Similar to the `key_changes_proof_check` function, but works with prepared proof storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":124409,"byte_end":124502,"line_start":147,"line_end":147,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":421},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129783,"byte_end":129800,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"DrilldownIterator","qualname":"::changes_trie::changes_iterator::DrilldownIterator","value":"DrilldownIterator {  }","parent":null,"children":[{"krate":0,"index":425}],"decl_id":null,"docs":" Exploring drilldown operator.\n","sig":null,"attributes":[{"value":"/ Exploring drilldown operator.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129738,"byte_end":129771,"line_start":311,"line_end":311,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":524},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/prune.rs","byte_start":148108,"byte_end":148113,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"prune","qualname":"::changes_trie::prune::prune","value":"fn <H, Number, F> (storage: &dyn Storage<H, Number>, first: Number, last: Number, current_block: &AnchorBlockId<H::Out, Number>, mut remove_trie_node: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prune obsolete changes tries. Pruning happens at the same block, where highest\n level digest is created. Pruning guarantees to save changes tries for last\n `min_blocks_to_keep` blocks. We only prune changes tries at `max_digest_interval`\n ranges.\n","sig":null,"attributes":[{"value":"/ Prune obsolete changes tries. Pruning happens at the same block, where highest","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/prune.rs","byte_start":147841,"byte_end":147923,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ level digest is created. Pruning guarantees to save changes tries for last","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/prune.rs","byte_start":147924,"byte_end":148002,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ `min_blocks_to_keep` blocks. We only prune changes tries at `max_digest_interval`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/prune.rs","byte_start":148003,"byte_end":148088,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ ranges.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/prune.rs","byte_start":148089,"byte_end":148100,"line_start":34,"line_end":34,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":154303,"byte_end":154318,"line_start":38,"line_end":38,"column_start":12,"column_end":27},"name":"InMemoryStorage","qualname":"::changes_trie::storage::InMemoryStorage","value":"InMemoryStorage {  }","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" In-memory implementation of changes trie storage.\n","sig":null,"attributes":[{"value":"/ In-memory implementation of changes trie storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":154238,"byte_end":154291,"line_start":37,"line_end":37,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":154917,"byte_end":154924,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"with_db","qualname":"<InMemoryStorage<H, Number>>::with_db","value":"fn (mdb: MemoryDB<H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates storage from given in-memory database.\n","sig":null,"attributes":[{"value":"/ Creates storage from given in-memory database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":154858,"byte_end":154908,"line_start":55,"line_end":55,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155136,"byte_end":155139,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"new","qualname":"<InMemoryStorage<H, Number>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates storage with empty database.\n","sig":null,"attributes":[{"value":"/ Creates storage with empty database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155087,"byte_end":155127,"line_start":66,"line_end":66,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155239,"byte_end":155249,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"name":"with_proof","qualname":"<InMemoryStorage<H, Number>>::with_proof","value":"fn (proof: Vec<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates storage with given proof.\n","sig":null,"attributes":[{"value":"/ Creates storage with given proof.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155193,"byte_end":155230,"line_start":71,"line_end":71,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155492,"byte_end":155501,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"name":"cache_mut","qualname":"<InMemoryStorage<H, Number>>::cache_mut","value":"fn (&mut self) -> &mut BuildCache<H::Out, Number>","parent":null,"children":[],"decl_id":null,"docs":" Get mutable cache reference.\n","sig":null,"attributes":[{"value":"/ Get mutable cache reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155451,"byte_end":155483,"line_start":82,"line_end":82,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155623,"byte_end":155634,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"name":"with_blocks","qualname":"<InMemoryStorage<H, Number>>::with_blocks","value":"fn (blocks: Vec<(Number, H::Out)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the storage with given blocks.\n","sig":null,"attributes":[{"value":"/ Create the storage with given blocks.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":155573,"byte_end":155614,"line_start":87,"line_end":87,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":157485,"byte_end":157491,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"insert","qualname":"<InMemoryStorage<H, Number>>::insert","value":"fn (&self, block: Number, changes_trie_root: H::Out, trie: MemoryDB<H>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert changes trie for given block.\n","sig":null,"attributes":[{"value":"/ Insert changes trie for given block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":157436,"byte_end":157476,"line_start":158,"line_end":158,"column_start":2,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":675},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57811,"byte_end":57822,"line_start":92,"line_end":92,"column_start":11,"column_end":22},"name":"BlockNumber","qualname":"::changes_trie::BlockNumber","value":"BlockNumber: Send + Sync + 'static + std::fmt::Display + Clone + From<u32> + TryInto<u32> +\nOne + Zero + PartialEq + Ord + std::hash::Hash + std::ops::Add<Self, Output =\nSelf> + ::std::ops::Sub<Self, Output = Self> + std::ops::Mul<Self, Output =\nSelf> + ::std::ops::Div<Self, Output = Self> + std::ops::Rem<Self, Output =\nSelf> + std::ops::AddAssign<Self> + num_traits::CheckedMul +\nnum_traits::CheckedSub + Decode + Encode","parent":null,"children":[],"decl_id":null,"docs":" Requirements for block number that can be used with changes tries.\n","sig":null,"attributes":[{"value":"/ Requirements for block number that can be used with changes tries.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57730,"byte_end":57800,"line_start":91,"line_end":91,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58795,"byte_end":58808,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"AnchorBlockId","qualname":"::changes_trie::AnchorBlockId","value":"AnchorBlockId { hash, number }","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059}],"decl_id":null,"docs":" Block identifier that could be used to determine fork of this block.\n","sig":null,"attributes":[{"value":"/ Block identifier that could be used to determine fork of this block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58694,"byte_end":58766,"line_start":122,"line_end":122,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58885,"byte_end":58889,"line_start":126,"line_end":126,"column_start":6,"column_end":10},"name":"hash","qualname":"::changes_trie::AnchorBlockId::hash","value":"Hash","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":" Hash of this block.\n","sig":null,"attributes":[{"value":"/ Hash of this block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58856,"byte_end":58879,"line_start":125,"line_end":125,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58929,"byte_end":58935,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"name":"number","qualname":"::changes_trie::AnchorBlockId::number","value":"Number","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":" Number of this block.\n","sig":null,"attributes":[{"value":"/ Number of this block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58898,"byte_end":58923,"line_start":127,"line_end":127,"column_start":2,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58998,"byte_end":59003,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"State","qualname":"::changes_trie::State","value":"State { config, zero, storage }","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" Changes tries state at some block.\n","sig":null,"attributes":[{"value":"/ Changes tries state at some block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58948,"byte_end":58986,"line_start":131,"line_end":131,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":682},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59076,"byte_end":59082,"line_start":134,"line_end":134,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::State::config","value":"sp_core::changes_trie::ChangesTrieConfiguration","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Configuration that is active at given block.\n","sig":null,"attributes":[{"value":"/ Configuration that is active at given block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59022,"byte_end":59070,"line_start":133,"line_end":133,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":683},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59338,"byte_end":59342,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::State::zero","value":"Number","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Configuration activation block number. Zero if it is the first configuration on the chain,\n or number of the block that have emit NewConfiguration signal (thus activating configuration\n starting from the **next** block).\n","sig":null,"attributes":[{"value":"/ Configuration activation block number. Zero if it is the first configuration on the chain,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59100,"byte_end":59194,"line_start":135,"line_end":135,"column_start":2,"column_end":96}},{"value":"/ or number of the block that have emit NewConfiguration signal (thus activating configuration","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59196,"byte_end":59292,"line_start":136,"line_end":136,"column_start":2,"column_end":98}},{"value":"/ starting from the **next** block).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59294,"byte_end":59332,"line_start":137,"line_end":137,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":684},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59406,"byte_end":59413,"line_start":140,"line_end":140,"column_start":6,"column_end":13},"name":"storage","qualname":"::changes_trie::State::storage","value":"&'a (dyn changes_trie::Storage<H, Number> + 'a)","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Underlying changes tries storage reference.\n","sig":null,"attributes":[{"value":"/ Underlying changes tries storage reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59353,"byte_end":59400,"line_start":139,"line_end":139,"column_start":2,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":685},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59528,"byte_end":59540,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"RootsStorage","qualname":"::changes_trie::RootsStorage","value":"RootsStorage<H: Hasher, Number: BlockNumber>: Send + Sync","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" Changes trie storage. Provides access to trie roots and trie nodes.\n","sig":null,"attributes":[{"value":"/ Changes trie storage. Provides access to trie roots and trie nodes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59446,"byte_end":59517,"line_start":143,"line_end":143,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59636,"byte_end":59648,"line_start":146,"line_end":146,"column_start":5,"column_end":17},"name":"build_anchor","qualname":"::changes_trie::RootsStorage::build_anchor","value":"fn (&self, hash: H::Out) -> Result<AnchorBlockId<H::Out, Number>, String>","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Resolve hash of the block into anchor.\n","sig":null,"attributes":[{"value":"/ Resolve hash of the block into anchor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59589,"byte_end":59631,"line_start":145,"line_end":145,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59888,"byte_end":59892,"line_start":149,"line_end":149,"column_start":5,"column_end":9},"name":"root","qualname":"::changes_trie::RootsStorage::root","value":"fn (&self, anchor: &AnchorBlockId<H::Out, Number>, block: Number) -> Result<Option<H::Out>, String>","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":" Get changes trie root for the block with given number which is an ancestor (or the block\n itself) of the anchor_block (i.e. anchor_block.number >= block).\n","sig":null,"attributes":[{"value":"/ Get changes trie root for the block with given number which is an ancestor (or the block","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59721,"byte_end":59813,"line_start":147,"line_end":147,"column_start":2,"column_end":94}},{"value":"/ itself) of the anchor_block (i.e. anchor_block.number >= block).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59815,"byte_end":59883,"line_start":148,"line_end":148,"column_start":2,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":690},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60075,"byte_end":60082,"line_start":153,"line_end":153,"column_start":11,"column_end":18},"name":"Storage","qualname":"::changes_trie::Storage","value":"Storage<H: Hasher, Number: BlockNumber>: RootsStorage<H, Number>","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695}],"decl_id":null,"docs":" Changes trie storage. Provides access to trie roots and trie nodes.\n","sig":null,"attributes":[{"value":"/ Changes trie storage. Provides access to trie roots and trie nodes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59993,"byte_end":60064,"line_start":152,"line_end":152,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60204,"byte_end":60220,"line_start":155,"line_end":155,"column_start":5,"column_end":21},"name":"as_roots_storage","qualname":"::changes_trie::Storage::as_roots_storage","value":"fn (&self) -> &dyn RootsStorage<H, Number>","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Casts from self reference to RootsStorage reference.\n","sig":null,"attributes":[{"value":"/ Casts from self reference to RootsStorage reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60143,"byte_end":60199,"line_start":154,"line_end":154,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60422,"byte_end":60446,"line_start":158,"line_end":158,"column_start":5,"column_end":29},"name":"with_cached_changed_keys","qualname":"::changes_trie::Storage::with_cached_changed_keys","value":"fn (&self, root: &H::Out, functor:\n    &mut dyn FnMut(&HashMap<Option<PrefixedStorageKey>, HashSet<StorageKey>>)) -> bool","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Execute given functor with cached entry for given trie root.\n Returns true if the functor has been called (cache entry exists) and false otherwise.\n","sig":null,"attributes":[{"value":"/ Execute given functor with cached entry for given trie root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60262,"byte_end":60326,"line_start":156,"line_end":156,"column_start":2,"column_end":66}},{"value":"/ Returns true if the functor has been called (cache entry exists) and false otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60328,"byte_end":60417,"line_start":157,"line_end":157,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60598,"byte_end":60601,"line_start":164,"line_end":164,"column_start":5,"column_end":8},"name":"get","qualname":"::changes_trie::Storage::get","value":"fn (&self, key: &H::Out, prefix: Prefix) -> Result<Option<DBValue>, String>","parent":{"krate":0,"index":690},"children":[],"decl_id":null,"docs":" Get a trie node.\n","sig":null,"attributes":[{"value":"/ Get a trie node.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60573,"byte_end":60593,"line_start":163,"line_end":163,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2064},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61280,"byte_end":61298,"line_start":183,"line_end":183,"column_start":12,"column_end":30},"name":"ConfigurationRange","qualname":"::changes_trie::ConfigurationRange","value":"ConfigurationRange { config, zero, end }","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069}],"decl_id":null,"docs":" Blocks range where configuration has been constant.\n","sig":null,"attributes":[{"value":"/ Blocks range where configuration has been constant.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61196,"byte_end":61251,"line_start":181,"line_end":181,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2067},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61340,"byte_end":61346,"line_start":185,"line_end":185,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::ConfigurationRange::config","value":"&'a sp_core::changes_trie::ChangesTrieConfiguration","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Active configuration.\n","sig":null,"attributes":[{"value":"/ Active configuration.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61309,"byte_end":61334,"line_start":184,"line_end":184,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2068},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61469,"byte_end":61473,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::ConfigurationRange::zero","value":"N","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Zero block of this configuration. The configuration is active starting from the next block.\n","sig":null,"attributes":[{"value":"/ Zero block of this configuration. The configuration is active starting from the next block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61368,"byte_end":61463,"line_start":186,"line_end":186,"column_start":2,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":2069},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61579,"byte_end":61582,"line_start":189,"line_end":189,"column_start":6,"column_end":9},"name":"end","qualname":"::changes_trie::ConfigurationRange::end","value":"std::option::Option<N>","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" End block of this configuration. It is the last block where configuration has been active.\n","sig":null,"attributes":[{"value":"/ End block of this configuration. It is the last block where configuration has been active.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61479,"byte_end":61573,"line_start":188,"line_end":188,"column_start":2,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61698,"byte_end":61701,"line_start":194,"line_end":194,"column_start":9,"column_end":12},"name":"new","qualname":"<State>::new","value":"fn (config: Configuration, zero: Number, storage: &'a dyn Storage<H, Number>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create state with given config and storage.\n","sig":null,"attributes":[{"value":"/ Create state with given config and storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61642,"byte_end":61689,"line_start":193,"line_end":193,"column_start":2,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":719},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":62098,"byte_end":62112,"line_start":218,"line_end":218,"column_start":8,"column_end":22},"name":"disabled_state","qualname":"::changes_trie::disabled_state","value":"fn <'a, H, Number> () -> Option<State<'a, H, Number>>","parent":null,"children":[],"decl_id":null,"docs":" Create state where changes tries are disabled.\n","sig":null,"attributes":[{"value":"/ Create state where changes tries are disabled.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":62040,"byte_end":62090,"line_start":217,"line_end":217,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":737},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169398,"byte_end":169403,"line_start":25,"line_end":25,"column_start":11,"column_end":16},"name":"Error","qualname":"::error::Error","value":"Error: 'static + fmt::Debug + fmt::Display + Send","parent":null,"children":[],"decl_id":null,"docs":" State Machine Error bound.","sig":null,"attributes":[{"value":"/ State Machine Error bound.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169281,"byte_end":169311,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169312,"byte_end":169315,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This should reflect Wasm error type bound for future compatibility.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169316,"byte_end":169387,"line_start":24,"line_end":24,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2075},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169884,"byte_end":169891,"line_start":37,"line_end":37,"column_start":2,"column_end":9},"name":"Backend","qualname":"::error::ExecutionError::Backend","value":"ExecutionError::Backend(String)","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Backend error.\n","sig":null,"attributes":[{"value":"/ Backend error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169864,"byte_end":169882,"line_start":36,"line_end":36,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169993,"byte_end":170014,"line_start":39,"line_end":39,"column_start":2,"column_end":23},"name":"CodeEntryDoesNotExist","qualname":"::error::ExecutionError::CodeEntryDoesNotExist","value":"ExecutionError::CodeEntryDoesNotExist","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" The entry `:code` doesn't exist in storage so there's no way we can execute anything.\n","sig":null,"attributes":[{"value":"/ The entry `:code` doesn't exist in storage so there's no way we can execute anything.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169902,"byte_end":169991,"line_start":38,"line_end":38,"column_start":2,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":170087,"byte_end":170108,"line_start":41,"line_end":41,"column_start":2,"column_end":23},"name":"UnableToGenerateProof","qualname":"::error::ExecutionError::UnableToGenerateProof","value":"ExecutionError::UnableToGenerateProof","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Backend is incompatible with execution proof generation process.\n","sig":null,"attributes":[{"value":"/ Backend is incompatible with execution proof generation process.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":170017,"byte_end":170085,"line_start":40,"line_end":40,"column_start":2,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2082},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":170141,"byte_end":170153,"line_start":43,"line_end":43,"column_start":2,"column_end":14},"name":"InvalidProof","qualname":"::error::ExecutionError::InvalidProof","value":"ExecutionError::InvalidProof","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Invalid execution proof.\n","sig":null,"attributes":[{"value":"/ Invalid execution proof.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":170111,"byte_end":170139,"line_start":42,"line_end":42,"column_start":2,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2074},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169846,"byte_end":169860,"line_start":35,"line_end":35,"column_start":10,"column_end":24},"name":"ExecutionError","qualname":"::error::ExecutionError","value":"ExecutionError::{Backend, CodeEntryDoesNotExist, UnableToGenerateProof, InvalidProof}","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082}],"decl_id":null,"docs":" Externalities Error.","sig":null,"attributes":[{"value":"/ Externalities Error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169520,"byte_end":169544,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169545,"byte_end":169548,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Externalities are not really allowed to have errors, since it's assumed that dependent code","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169549,"byte_end":169644,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/ would not be executed unless externalities were available. This is included for completeness,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169645,"byte_end":169742,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ and as a transition away from the pre-existing framework.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169743,"byte_end":169804,"line_start":33,"line_end":33,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":172545,"byte_end":172548,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"Ext","qualname":"::ext::Ext","value":"Ext { id }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"decl_id":null,"docs":" Wraps a read-only backend, call executor, and current overlayed changes.\n","sig":null,"attributes":[{"value":"/ Wraps a read-only backend, call executor, and current overlayed changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":172457,"byte_end":172533,"line_start":70,"line_end":70,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":796},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":173155,"byte_end":173157,"line_start":88,"line_end":88,"column_start":6,"column_end":8},"name":"id","qualname":"::ext::Ext::id","value":"u16","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Pseudo-unique id used for tracing.\n","sig":null,"attributes":[{"value":"/ Pseudo-unique id used for tracing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":173111,"byte_end":173149,"line_start":87,"line_end":87,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":173553,"byte_end":173556,"line_start":104,"line_end":104,"column_start":9,"column_end":12},"name":"new","qualname":"<Ext>::new","value":"fn (overlay: &'a mut OverlayedChanges, offchain_overlay: &'a mut OffchainOverlayedChanges, storage_transaction_cache:\n    &'a mut StorageTransactionCache<B::Transaction, H, N>, backend: &'a B, changes_trie_state: Option<ChangesTrieState<'a, H, N>>, extensions: Option<&'a mut Extensions>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ext` from overlayed changes and read-only backend\n","sig":null,"attributes":[{"value":"/ Create a new `Ext` from overlayed changes and read-only backend","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":173477,"byte_end":173544,"line_start":103,"line_end":103,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":174352,"byte_end":174380,"line_start":132,"line_end":132,"column_start":9,"column_end":37},"name":"get_offchain_storage_changes","qualname":"<Ext>::get_offchain_storage_changes","value":"fn (&self) -> &OffchainOverlayedChanges","parent":null,"children":[],"decl_id":null,"docs":" Read only accessor for the scheduled overlay changes.\n","sig":null,"attributes":[{"value":"/ Read only accessor for the scheduled overlay changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":174286,"byte_end":174343,"line_start":131,"line_end":131,"column_start":2,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":198622,"byte_end":198639,"line_start":44,"line_end":44,"column_start":12,"column_end":29},"name":"TestExternalities","qualname":"::testing::TestExternalities","value":"TestExternalities {  }","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"decl_id":null,"docs":" Simple HashMap-based Externalities impl.\n","sig":null,"attributes":[{"value":"/ Simple HashMap-based Externalities impl.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":198566,"byte_end":198610,"line_start":43,"line_end":43,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199240,"byte_end":199243,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"ext","qualname":"<TestExternalities<H, N>>::ext","value":"fn (&mut self) -> Ext<H, N, InMemoryBackend<H>>","parent":null,"children":[],"decl_id":null,"docs":" Get externalities implementation.\n","sig":null,"attributes":[{"value":"/ Get externalities implementation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199194,"byte_end":199231,"line_start":63,"line_end":63,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199720,"byte_end":199723,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"new","qualname":"<TestExternalities<H, N>>::new","value":"fn (storage: Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with storage.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199649,"byte_end":199711,"line_start":82,"line_end":82,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199835,"byte_end":199844,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"name":"new_empty","qualname":"<TestExternalities<H, N>>::new_empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" New empty test externalities.\n","sig":null,"attributes":[{"value":"/ New empty test externalities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199793,"byte_end":199826,"line_start":87,"line_end":87,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199989,"byte_end":200002,"line_start":93,"line_end":93,"column_start":9,"column_end":22},"name":"new_with_code","qualname":"<TestExternalities<H, N>>::new_with_code","value":"fn (code: &[u8], mut storage: Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with code and storage.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with code and storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199909,"byte_end":199980,"line_start":92,"line_end":92,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201021,"byte_end":201027,"line_start":123,"line_end":123,"column_start":9,"column_end":15},"name":"insert","qualname":"<TestExternalities<H, N>>::insert","value":"fn (&mut self, k: StorageKey, v: StorageValue) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value into backend\n","sig":null,"attributes":[{"value":"/ Insert key/value into backend","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":200979,"byte_end":201012,"line_start":122,"line_end":122,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201196,"byte_end":201214,"line_start":128,"line_end":128,"column_start":9,"column_end":27},"name":"register_extension","qualname":"<TestExternalities<H, N>>::register_extension","value":"fn <E> (&mut self, ext: E) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers the given extension for this instance.\n","sig":null,"attributes":[{"value":"/ Registers the given extension for this instance.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201135,"byte_end":201187,"line_start":127,"line_end":127,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201353,"byte_end":201373,"line_start":133,"line_end":133,"column_start":9,"column_end":29},"name":"changes_trie_storage","qualname":"<TestExternalities<H, N>>::changes_trie_storage","value":"fn (&mut self) -> &mut ChangesTrieInMemoryStorage<H, N>","parent":null,"children":[],"decl_id":null,"docs":" Get mutable reference to changes trie storage.\n","sig":null,"attributes":[{"value":"/ Get mutable reference to changes trie storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201294,"byte_end":201344,"line_start":132,"line_end":132,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201523,"byte_end":201533,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"commit_all","qualname":"<TestExternalities<H, N>>::commit_all","value":"fn (&self) -> InMemoryBackend<H>","parent":null,"children":[],"decl_id":null,"docs":" Return a new backend with all pending value.\n","sig":null,"attributes":[{"value":"/ Return a new backend with all pending value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201466,"byte_end":201514,"line_start":137,"line_end":137,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202112,"byte_end":202124,"line_start":159,"line_end":159,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<TestExternalities<H, N>>::execute_with","value":"fn <R> (&mut self, execute: impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":201985,"byte_end":202052,"line_start":156,"line_end":156,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202054,"byte_end":202057,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202059,"byte_end":202103,"line_start":158,"line_end":158,"column_start":2,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2115},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206251,"byte_end":206269,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"BasicExternalities","qualname":"::basic::BasicExternalities","value":"BasicExternalities {  }","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2117}],"decl_id":null,"docs":" Simple Map-based Externalities impl.\n","sig":null,"attributes":[{"value":"/ Simple Map-based Externalities impl.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206182,"byte_end":206222,"line_start":38,"line_end":38,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206402,"byte_end":206405,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"new","qualname":"<BasicExternalities>::new","value":"fn (inner: Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `BasicExternalities`\n","sig":null,"attributes":[{"value":"/ Create a new instance of `BasicExternalities`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206344,"byte_end":206393,"line_start":46,"line_end":46,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206556,"byte_end":206565,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"new_empty","qualname":"<BasicExternalities>::new_empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" New basic externalities with empty storage.\n","sig":null,"attributes":[{"value":"/ New basic externalities with empty storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206500,"byte_end":206547,"line_start":51,"line_end":51,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206673,"byte_end":206692,"line_start":57,"line_end":57,"column_start":9,"column_end":28},"name":"with_tasks_executor","qualname":"<BasicExternalities>::with_tasks_executor","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" New basic extternalities with tasks executor.\n","sig":null,"attributes":[{"value":"/ New basic extternalities with tasks executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206615,"byte_end":206664,"line_start":56,"line_end":56,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206929,"byte_end":206935,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"name":"insert","qualname":"<BasicExternalities>::insert","value":"fn (&mut self, k: StorageKey, v: StorageValue) -> Option<StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value\n","sig":null,"attributes":[{"value":"/ Insert key/value","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206900,"byte_end":206920,"line_start":67,"line_end":67,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207092,"byte_end":207105,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"into_storages","qualname":"<BasicExternalities>::into_storages","value":"fn (self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" Consume self and returns inner storages\n","sig":null,"attributes":[{"value":"/ Consume self and returns inner storages","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207040,"byte_end":207083,"line_start":72,"line_end":72,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207328,"byte_end":207348,"line_start":80,"line_end":80,"column_start":9,"column_end":29},"name":"execute_with_storage","qualname":"<BasicExternalities>::execute_with_storage","value":"fn <R> (storage: &mut sp_core::storage::Storage, f: impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure `f` with the externalities set and initialized with `storage`.","sig":null,"attributes":[{"value":"/ Execute the given closure `f` with the externalities set and initialized with `storage`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207143,"byte_end":207235,"line_start":77,"line_end":77,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207237,"byte_end":207240,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the closure and updates `storage` with all changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207242,"byte_end":207319,"line_start":79,"line_end":79,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207836,"byte_end":207848,"line_start":102,"line_end":102,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<BasicExternalities>::execute_with","value":"fn <R> (&mut self, f: impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207709,"byte_end":207776,"line_start":99,"line_end":99,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207778,"byte_end":207781,"line_start":100,"line_end":100,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207783,"byte_end":207827,"line_start":101,"line_end":101,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207997,"byte_end":208007,"line_start":107,"line_end":107,"column_start":9,"column_end":19},"name":"extensions","qualname":"<BasicExternalities>::extensions","value":"fn (&mut self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" List of active extensions.\n","sig":null,"attributes":[{"value":"/ List of active extensions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":207958,"byte_end":207988,"line_start":106,"line_end":106,"column_start":2,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1077},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217381,"byte_end":217391,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"name":"StorageKey","qualname":"::overlayed_changes::StorageKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Storage key.\n","sig":null,"attributes":[{"value":"/ Storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217355,"byte_end":217371,"line_start":36,"line_end":36,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":1078},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217432,"byte_end":217444,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"StorageValue","qualname":"::overlayed_changes::StorageValue","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Storage value.\n","sig":null,"attributes":[{"value":"/ Storage value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217404,"byte_end":217422,"line_start":39,"line_end":39,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":1079},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217505,"byte_end":217522,"line_start":43,"line_end":43,"column_start":10,"column_end":27},"name":"StorageCollection","qualname":"::overlayed_changes::StorageCollection","value":"Vec<(StorageKey, Option<StorageValue>)>","parent":null,"children":[],"decl_id":null,"docs":" In memory array of storage values.\n","sig":null,"attributes":[{"value":"/ In memory array of storage values.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217457,"byte_end":217495,"line_start":42,"line_end":42,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1080},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217641,"byte_end":217663,"line_start":46,"line_end":46,"column_start":10,"column_end":32},"name":"ChildStorageCollection","qualname":"::overlayed_changes::ChildStorageCollection","value":"Vec<(StorageKey, StorageCollection)>","parent":null,"children":[],"decl_id":null,"docs":" In memory arrays of storage values for multiple child tries.\n","sig":null,"attributes":[{"value":"/ In memory arrays of storage values for multiple child tries.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217567,"byte_end":217631,"line_start":45,"line_end":45,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217923,"byte_end":217939,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"OverlayedChanges","qualname":"::overlayed_changes::OverlayedChanges","value":"OverlayedChanges {  }","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124}],"decl_id":null,"docs":" The overlayed changes to state to be queried on top of the backend.","sig":null,"attributes":[{"value":"/ The overlayed changes to state to be queried on top of the backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217705,"byte_end":217776,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217777,"byte_end":217780,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ A transaction shares all prospective changes within an inner overlay","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217781,"byte_end":217853,"line_start":50,"line_end":50,"column_start":1,"column_end":73}},{"value":"/ that can be cleared.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":217854,"byte_end":217878,"line_start":51,"line_end":51,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2131},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":218355,"byte_end":218369,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"OverlayedValue","qualname":"::overlayed_changes::OverlayedValue","value":"OverlayedValue {  }","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133}],"decl_id":null,"docs":" The storage value, used inside OverlayedChanges.\n","sig":null,"attributes":[{"value":"/ The storage value, used inside OverlayedChanges.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":218221,"byte_end":218273,"line_start":64,"line_end":64,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2140},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":218761,"byte_end":218779,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"OverlayedChangeSet","qualname":"::overlayed_changes::OverlayedChangeSet","value":"OverlayedChangeSet {  }","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142}],"decl_id":null,"docs":" Prospective or committed overlayed change set.\n","sig":null,"attributes":[{"value":"/ Prospective or committed overlayed change set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":218629,"byte_end":218679,"line_start":75,"line_end":75,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219270,"byte_end":219284,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"StorageChanges","qualname":"::overlayed_changes::StorageChanges","value":"StorageChanges { main_storage_changes, child_storage_changes, offchain_storage_changes, transaction, transaction_storage_root, changes_trie_transaction }","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"decl_id":null,"docs":" A storage changes structure that can be generated by the data collected in [`OverlayedChanges`].","sig":null,"attributes":[{"value":"/ A storage changes structure that can be generated by the data collected in [`OverlayedChanges`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219044,"byte_end":219144,"line_start":85,"line_end":85,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219145,"byte_end":219148,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This contains all the changes to the storage and transactions to apply theses changes to the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219149,"byte_end":219245,"line_start":87,"line_end":87,"column_start":1,"column_end":97}},{"value":"/ backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219246,"byte_end":219258,"line_start":88,"line_end":88,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":1085},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219425,"byte_end":219445,"line_start":93,"line_end":93,"column_start":6,"column_end":26},"name":"main_storage_changes","qualname":"::overlayed_changes::StorageChanges::main_storage_changes","value":"std::vec::Vec<(std::vec::Vec<u8>, std::option::Option<std::vec::Vec<u8>>)>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" All changes to the main storage.","sig":null,"attributes":[{"value":"/ All changes to the main storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219328,"byte_end":219364,"line_start":90,"line_end":90,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219366,"byte_end":219369,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ A value of `None` means that it was deleted.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219371,"byte_end":219419,"line_start":92,"line_end":92,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1086},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219511,"byte_end":219532,"line_start":95,"line_end":95,"column_start":6,"column_end":27},"name":"child_storage_changes","qualname":"::overlayed_changes::StorageChanges::child_storage_changes","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<(std::vec::Vec<u8>, std::option::Option<std::vec::Vec<u8>>)>)>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" All changes to the child storages.\n","sig":null,"attributes":[{"value":"/ All changes to the child storages.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219467,"byte_end":219505,"line_start":94,"line_end":94,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1087},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219626,"byte_end":219650,"line_start":97,"line_end":97,"column_start":6,"column_end":30},"name":"offchain_storage_changes","qualname":"::overlayed_changes::StorageChanges::offchain_storage_changes","value":"sp_core::offchain::storage::OffchainOverlayedChanges","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Offchain state changes to write to the offchain database.\n","sig":null,"attributes":[{"value":"/ Offchain state changes to write to the offchain database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219559,"byte_end":219620,"line_start":96,"line_end":96,"column_start":2,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1088},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219974,"byte_end":219985,"line_start":102,"line_end":102,"column_start":6,"column_end":17},"name":"transaction","qualname":"::overlayed_changes::StorageChanges::transaction","value":"Transaction","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" A transaction for the backend that contains all changes from\n [`main_storage_changes`](StorageChanges::main_storage_changes) and from\n [`child_storage_changes`](StorageChanges::child_storage_changes).\n [`offchain_storage_changes`](StorageChanges::offchain_storage_changes).\n","sig":null,"attributes":[{"value":"/ A transaction for the backend that contains all changes from","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219679,"byte_end":219743,"line_start":98,"line_end":98,"column_start":2,"column_end":66}},{"value":"/ [`main_storage_changes`](StorageChanges::main_storage_changes) and from","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219745,"byte_end":219820,"line_start":99,"line_end":99,"column_start":2,"column_end":77}},{"value":"/ [`child_storage_changes`](StorageChanges::child_storage_changes).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219822,"byte_end":219891,"line_start":100,"line_end":100,"column_start":2,"column_end":71}},{"value":"/ [`offchain_storage_changes`](StorageChanges::offchain_storage_changes).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":219893,"byte_end":219968,"line_start":101,"line_end":101,"column_start":2,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1089},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220059,"byte_end":220083,"line_start":104,"line_end":104,"column_start":6,"column_end":30},"name":"transaction_storage_root","qualname":"::overlayed_changes::StorageChanges::transaction_storage_root","value":"<H as hash_db::Hasher>::Out","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" The storage root after applying the transaction.\n","sig":null,"attributes":[{"value":"/ The storage root after applying the transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220001,"byte_end":220053,"line_start":103,"line_end":103,"column_start":2,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1090},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220232,"byte_end":220256,"line_start":108,"line_end":108,"column_start":6,"column_end":30},"name":"changes_trie_transaction","qualname":"::overlayed_changes::StorageChanges::changes_trie_transaction","value":"std::option::Option<(memory_db::MemoryDB<H, memory_db::HashKey<H>, std::vec::Vec<u8>>, changes_trie::build_cache::CacheAction<<H as hash_db::Hasher>::Out, N>)>","parent":{"krate":0,"index":1081},"children":[],"decl_id":null,"docs":" Contains the transaction for the backend for the changes trie.","sig":null,"attributes":[{"value":"/ Contains the transaction for the backend for the changes trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220094,"byte_end":220160,"line_start":105,"line_end":105,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220162,"byte_end":220165,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ If changes trie is disabled the value is set to `None`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220167,"byte_end":220226,"line_start":107,"line_end":107,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220427,"byte_end":220437,"line_start":113,"line_end":113,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<StorageChanges<Transaction, H, N>>::into_inner","value":"fn (self) -> (StorageCollection, ChildStorageCollection, OffchainOverlayedChanges,\n Transaction, H::Out, Option<ChangesTrieTransaction<H, N>>)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct into the inner values\n","sig":null,"attributes":[{"value":"/ Deconstruct into the inner values","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220381,"byte_end":220418,"line_start":112,"line_end":112,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1096},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221064,"byte_end":221087,"line_start":135,"line_end":135,"column_start":12,"column_end":35},"name":"StorageTransactionCache","qualname":"::overlayed_changes::StorageTransactionCache","value":"StorageTransactionCache {  }","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103}],"decl_id":null,"docs":" The storage transaction are calculated as part of the `storage_root` and\n `changes_trie_storage_root`. These transactions can be reused for importing the block into the\n storage. So, we cache them to not require a recomputation of those transactions.\n","sig":null,"attributes":[{"value":"/ The storage transaction are calculated as part of the `storage_root` and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220792,"byte_end":220868,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ `changes_trie_storage_root`. These transactions can be reused for importing the block into the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220869,"byte_end":220967,"line_start":133,"line_end":133,"column_start":1,"column_end":99}},{"value":"/ storage. So, we cache them to not require a recomputation of those transactions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220968,"byte_end":221052,"line_start":134,"line_end":134,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221773,"byte_end":221778,"line_start":148,"line_end":148,"column_start":9,"column_end":14},"name":"reset","qualname":"<StorageTransactionCache<Transaction, H, N>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the cached transactions.\n","sig":null,"attributes":[{"value":"/ Reset the cached transactions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221730,"byte_end":221764,"line_start":147,"line_end":147,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222879,"byte_end":222884,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"name":"value","qualname":"<OverlayedValue>::value","value":"fn (&self) -> Option<&StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" The most recent value contained in this overlay.\n","sig":null,"attributes":[{"value":"/ The most recent value contained in this overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222818,"byte_end":222870,"line_start":188,"line_end":188,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223033,"byte_end":223043,"line_start":194,"line_end":194,"column_start":9,"column_end":19},"name":"extrinsics","qualname":"<OverlayedValue>::extrinsics","value":"fn (&self) -> Option<impl Iterator<Item = &u32>>","parent":null,"children":[],"decl_id":null,"docs":" List of indices of extrinsics which modified the value using this overlay.\n","sig":null,"attributes":[{"value":"/ List of indices of extrinsics which modified the value using this overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222946,"byte_end":223024,"line_start":193,"line_end":193,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223212,"byte_end":223220,"line_start":201,"line_end":201,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<OverlayedChangeSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the change set is empty.\n","sig":null,"attributes":[{"value":"/ Whether the change set is empty.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223167,"byte_end":223203,"line_start":200,"line_end":200,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223335,"byte_end":223340,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"name":"clear","qualname":"<OverlayedChangeSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the change set.\n","sig":null,"attributes":[{"value":"/ Clear the change set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223301,"byte_end":223326,"line_start":205,"line_end":205,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223491,"byte_end":223499,"line_start":214,"line_end":214,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<OverlayedChanges>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the overlayed changes are empty.\n","sig":null,"attributes":[{"value":"/ Whether the overlayed changes are empty.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223438,"byte_end":223482,"line_start":213,"line_end":213,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223673,"byte_end":223695,"line_start":219,"line_end":219,"column_start":9,"column_end":31},"name":"set_collect_extrinsics","qualname":"<OverlayedChanges>::set_collect_extrinsics","value":"fn (&mut self, collect_extrinsics: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ask to collect/not to collect extrinsics indices where key(s) has been changed.\n","sig":null,"attributes":[{"value":"/ Ask to collect/not to collect extrinsics indices where key(s) has been changed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223581,"byte_end":223664,"line_start":218,"line_end":218,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224010,"byte_end":224017,"line_start":226,"line_end":226,"column_start":9,"column_end":16},"name":"storage","qualname":"<OverlayedChanges>::storage","value":"fn (&self, key: &[u8]) -> Option<Option<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-Option: None if the key is unknown (i.e. and the query should be referred\n to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose\n value has been set.\n","sig":null,"attributes":[{"value":"/ Returns a double-Option: None if the key is unknown (i.e. and the query should be referred","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223788,"byte_end":223882,"line_start":223,"line_end":223,"column_start":2,"column_end":96}},{"value":"/ to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223884,"byte_end":223976,"line_start":224,"line_end":224,"column_start":2,"column_end":94}},{"value":"/ value has been set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223978,"byte_end":224001,"line_start":225,"line_end":225,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224667,"byte_end":224691,"line_start":241,"line_end":241,"column_start":9,"column_end":33},"name":"value_mut_or_insert_with","qualname":"<OverlayedChanges>::value_mut_or_insert_with","value":"fn (&mut self, key: &[u8], init: impl Fn() -> StorageValue) -> &mut StorageValue","parent":null,"children":[],"decl_id":null,"docs":" Returns mutable reference to current changed value (prospective).\n If there is no value in the overlay, the default callback is used to initiate\n the value.\n Warning this function register a change, so the mutable reference MUST be modified.\n","sig":null,"attributes":[{"value":"/ Returns mutable reference to current changed value (prospective).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224327,"byte_end":224396,"line_start":236,"line_end":236,"column_start":2,"column_end":71}},{"value":"/ If there is no value in the overlay, the default callback is used to initiate","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224398,"byte_end":224479,"line_start":237,"line_end":237,"column_start":2,"column_end":83}},{"value":"/ the value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224481,"byte_end":224495,"line_start":238,"line_end":238,"column_start":2,"column_end":16}},{"value":"/ Warning this function register a change, so the mutable reference MUST be modified.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224497,"byte_end":224584,"line_start":239,"line_end":239,"column_start":2,"column_end":89}},{"value":"must_use = \"A change was registered, so this value MUST be modified.\"","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":224586,"byte_end":224658,"line_start":240,"line_end":240,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":225666,"byte_end":225679,"line_start":272,"line_end":272,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<OverlayedChanges>::child_storage","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Option<Option<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-Option: None if the key is unknown (i.e. and the query should be referred\n to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose\n value has been set.\n","sig":null,"attributes":[{"value":"/ Returns a double-Option: None if the key is unknown (i.e. and the query should be referred","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":225444,"byte_end":225538,"line_start":269,"line_end":269,"column_start":2,"column_end":96}},{"value":"/ to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":225540,"byte_end":225632,"line_start":270,"line_end":270,"column_start":2,"column_end":94}},{"value":"/ value has been set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":225634,"byte_end":225657,"line_start":271,"line_end":271,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":231735,"byte_end":231754,"line_start":456,"line_end":456,"column_start":9,"column_end":28},"name":"discard_prospective","qualname":"<OverlayedChanges>::discard_prospective","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Discard prospective changes to state.\n","sig":null,"attributes":[{"value":"/ Discard prospective changes to state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":231685,"byte_end":231726,"line_start":455,"line_end":455,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":231850,"byte_end":231868,"line_start":461,"line_end":461,"column_start":9,"column_end":27},"name":"commit_prospective","qualname":"<OverlayedChanges>::commit_prospective","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Commit prospective changes to state.\n","sig":null,"attributes":[{"value":"/ Commit prospective changes to state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":231801,"byte_end":231841,"line_start":460,"line_end":460,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":233714,"byte_end":233725,"line_start":512,"line_end":512,"column_start":9,"column_end":20},"name":"child_infos","qualname":"<OverlayedChanges>::child_infos","value":"fn (&self) -> impl IntoIterator<Item = &ChildInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all pending and committed child tries in the overlay.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all pending and committed child tries in the overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":233627,"byte_end":233705,"line_start":511,"line_end":511,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234170,"byte_end":234177,"line_start":523,"line_end":523,"column_start":9,"column_end":16},"name":"changes","qualname":"<OverlayedChanges>::changes","value":"fn (&self, child_info: Option<&ChildInfo>) -> impl Iterator<Item = (&StorageKey, &OverlayedValue)>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all pending and committed changes.","sig":null,"attributes":[{"value":"/ Get an iterator over all pending and committed changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":233919,"byte_end":233978,"line_start":518,"line_end":518,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":233980,"byte_end":233983,"line_start":519,"line_end":519,"column_start":2,"column_end":5}},{"value":"/ Supplying `None` for `child_info` will only return changes that are in the top","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":233985,"byte_end":234067,"line_start":520,"line_end":520,"column_start":2,"column_end":84}},{"value":"/ trie. Specifying some `child_info` will return only the changes in that","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234069,"byte_end":234144,"line_start":521,"line_end":521,"column_start":2,"column_end":77}},{"value":"/ child trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234146,"byte_end":234161,"line_start":522,"line_end":522,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234810,"byte_end":234823,"line_start":540,"line_end":540,"column_start":9,"column_end":22},"name":"clone_pending","qualname":"<OverlayedChanges>::clone_pending","value":"fn (&self) -> OverlayedChangeSet","parent":null,"children":[],"decl_id":null,"docs":" Return a clone of the currently pending changes.\n","sig":null,"attributes":[{"value":"/ Return a clone of the currently pending changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234749,"byte_end":234801,"line_start":539,"line_end":539,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234938,"byte_end":234953,"line_start":545,"line_end":545,"column_start":9,"column_end":24},"name":"replace_pending","qualname":"<OverlayedChanges>::replace_pending","value":"fn (&mut self, pending: OverlayedChangeSet) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the currently pending changes.\n","sig":null,"attributes":[{"value":"/ Replace the currently pending changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":234887,"byte_end":234929,"line_start":544,"line_end":544,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":235118,"byte_end":235138,"line_start":550,"line_end":550,"column_start":9,"column_end":29},"name":"into_storage_changes","qualname":"<OverlayedChanges>::into_storage_changes","value":"fn <B, H, N> (mut self, backend: &B, changes_trie_state: Option<&ChangesTrieState<H, N>>, parent_hash: H::Out, mut cache: StorageTransactionCache<B::Transaction, H, N>) -> Result<StorageChanges<B::Transaction, H, N>, String>","parent":null,"children":[],"decl_id":null,"docs":" Convert this instance with all changes into a [`StorageChanges`] instance.\n","sig":null,"attributes":[{"value":"/ Convert this instance with all changes into a [`StorageChanges`] instance.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":235031,"byte_end":235109,"line_start":549,"line_end":549,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":235634,"byte_end":235655,"line_start":563,"line_end":563,"column_start":9,"column_end":30},"name":"drain_storage_changes","qualname":"<OverlayedChanges>::drain_storage_changes","value":"fn <B, H, N> (&mut self, backend: &B, changes_trie_state: Option<&ChangesTrieState<H, N>>, parent_hash: H::Out, mut cache: &mut StorageTransactionCache<B::Transaction, H, N>) -> Result<StorageChanges<B::Transaction, H, N>, String>","parent":null,"children":[],"decl_id":null,"docs":" Drain all changes into a [`StorageChanges`] instance. Leave empty overlay in place.\n","sig":null,"attributes":[{"value":"/ Drain all changes into a [`StorageChanges`] instance. Leave empty overlay in place.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":235538,"byte_end":235625,"line_start":562,"line_end":562,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":238351,"byte_end":238363,"line_start":635,"line_end":635,"column_start":9,"column_end":21},"name":"storage_root","qualname":"<OverlayedChanges>::storage_root","value":"fn <H, N, B> (&self, backend: &B, cache: &mut StorageTransactionCache<B::Transaction, H, N>) -> H::Out","parent":null,"children":[],"decl_id":null,"docs":" Generate the storage root using `backend` and all changes from `prospective` and `committed`.","sig":null,"attributes":[{"value":"/ Generate the storage root using `backend` and all changes from `prospective` and `committed`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":238157,"byte_end":238254,"line_start":632,"line_end":632,"column_start":2,"column_end":99}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":238256,"byte_end":238259,"line_start":633,"line_end":633,"column_start":2,"column_end":5}},{"value":"/ Returns the storage root and caches storage transaction in the given `cache`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":238261,"byte_end":238342,"line_start":634,"line_end":634,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239862,"byte_end":239879,"line_start":685,"line_end":685,"column_start":9,"column_end":26},"name":"changes_trie_root","qualname":"<OverlayedChanges>::changes_trie_root","value":"fn <'a, H, N, B> (&self, backend: &B, changes_trie_state: Option<&'a ChangesTrieState<'a, H, N>>, parent_hash: H::Out, panic_on_storage_error: bool, cache: &mut StorageTransactionCache<B::Transaction, H, N>) -> Result<Option<H::Out>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Generate the changes trie root.","sig":null,"attributes":[{"value":"/ Generate the changes trie root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239627,"byte_end":239662,"line_start":678,"line_end":678,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239664,"byte_end":239667,"line_start":679,"line_end":679,"column_start":2,"column_end":5}},{"value":"/ Returns the changes trie root and caches the storage transaction into the given `cache`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239669,"byte_end":239761,"line_start":680,"line_end":680,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239763,"byte_end":239766,"line_start":681,"line_end":681,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239768,"byte_end":239780,"line_start":682,"line_end":682,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239782,"byte_end":239785,"line_start":683,"line_end":683,"column_start":2,"column_end":5}},{"value":"/ Panics on storage error, when `panic_on_storage_error` is set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":239787,"byte_end":239853,"line_start":684,"line_end":684,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":240635,"byte_end":240653,"line_start":709,"line_end":709,"column_start":9,"column_end":27},"name":"default_child_info","qualname":"<OverlayedChanges>::default_child_info","value":"fn (&self, storage_key: &[u8]) -> Option<&ChildInfo>","parent":null,"children":[],"decl_id":null,"docs":" Get child info for a storage key.\n Take the latest value so prospective first.\n","sig":null,"attributes":[{"value":"/ Get child info for a storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":240540,"byte_end":240577,"line_start":707,"line_end":707,"column_start":2,"column_end":39}},{"value":"/ Take the latest value so prospective first.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":240579,"byte_end":240626,"line_start":708,"line_end":708,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":241075,"byte_end":241098,"line_start":721,"line_end":721,"column_start":9,"column_end":32},"name":"next_storage_key_change","qualname":"<OverlayedChanges>::next_storage_key_change","value":"fn (&self, key: &[u8]) -> Option<(&[u8], &OverlayedValue)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next (in lexicographic order) storage key in the overlayed alongside its value.\n If no value is next then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Returns the next (in lexicographic order) storage key in the overlayed alongside its value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":240921,"byte_end":241016,"line_start":719,"line_end":719,"column_start":2,"column_end":97}},{"value":"/ If no value is next then `None` is returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":241018,"byte_end":241066,"line_start":720,"line_end":720,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":242015,"byte_end":242044,"line_start":746,"line_end":746,"column_start":9,"column_end":38},"name":"next_child_storage_key_change","qualname":"<OverlayedChanges>::next_child_storage_key_change","value":"fn (&self, storage_key: &[u8], key: &[u8]) -> Option<(&[u8], &OverlayedValue)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next (in lexicographic order) child storage key in the overlayed alongside its\n value.  If no value is next then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Returns the next (in lexicographic order) child storage key in the overlayed alongside its","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":241854,"byte_end":241948,"line_start":744,"line_end":744,"column_start":2,"column_end":96}},{"value":"/ value.  If no value is next then `None` is returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":241950,"byte_end":242006,"line_start":745,"line_end":745,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1256},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":252557,"byte_end":252579,"line_start":36,"line_end":36,"column_start":12,"column_end":34},"name":"ProvingBackendRecorder","qualname":"::proving_backend::ProvingBackendRecorder","value":"ProvingBackendRecorder {  }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"decl_id":null,"docs":" Patricia trie-based backend specialized in get value proofs.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend specialized in get value proofs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":252481,"byte_end":252545,"line_start":35,"line_end":35,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":252900,"byte_end":252907,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"storage","qualname":"<ProvingBackendRecorder>::storage","value":"fn (&mut self, key: &[u8]) -> Result<Option<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for a key query.\n","sig":null,"attributes":[{"value":"/ Produce proof for a key query.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":252857,"byte_end":252891,"line_start":47,"line_end":47,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":253364,"byte_end":253377,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<ProvingBackendRecorder>::child_storage","value":"fn (&mut self, child_info: &ChildInfo, key: &[u8]) -> Result<Option<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for a child key query.\n","sig":null,"attributes":[{"value":"/ Produce proof for a child key query.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":253315,"byte_end":253355,"line_start":65,"line_end":65,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254070,"byte_end":254085,"line_start":94,"line_end":94,"column_start":9,"column_end":24},"name":"record_all_keys","qualname":"<ProvingBackendRecorder>::record_all_keys","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for the whole backend.\n","sig":null,"attributes":[{"value":"/ Produce proof for the whole backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254021,"byte_end":254061,"line_start":93,"line_end":93,"column_start":2,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":1273},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254621,"byte_end":254634,"line_start":114,"line_end":114,"column_start":10,"column_end":23},"name":"ProofRecorder","qualname":"::proving_backend::ProofRecorder","value":"Arc<RwLock<HashMap<<H as Hasher>::Out, Option<DBValue>>>>","parent":null,"children":[],"decl_id":null,"docs":" Global proof recorder, act as a layer over a hash db for recording queried\n data.\n","sig":null,"attributes":[{"value":"/ Global proof recorder, act as a layer over a hash db for recording queried","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254523,"byte_end":254601,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/ data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254602,"byte_end":254611,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1275},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254865,"byte_end":254879,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"ProvingBackend","qualname":"::proving_backend::ProvingBackend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Patricia trie-based backend which also tracks all touched storage trie values.\n These can be sent to remote node and used as a proof of execution.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend which also tracks all touched storage trie values.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254700,"byte_end":254782,"line_start":116,"line_end":116,"column_start":1,"column_end":83}},{"value":"/ These can be sent to remote node and used as a proof of execution.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":254783,"byte_end":254853,"line_start":117,"line_end":117,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255321,"byte_end":255324,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"name":"new","qualname":"<ProvingBackend>::new","value":"fn (backend: &'a TrieBackend<S, H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new proving backend.\n","sig":null,"attributes":[{"value":"/ Create new proving backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255281,"byte_end":255312,"line_start":131,"line_end":131,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255530,"byte_end":255547,"line_start":138,"line_end":138,"column_start":9,"column_end":26},"name":"new_with_recorder","qualname":"<ProvingBackend>::new_with_recorder","value":"fn (backend: &'a TrieBackend<S, H>, proof_recorder: ProofRecorder<H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new proving backend with the given recorder.\n","sig":null,"attributes":[{"value":"/ Create new proving backend with the given recorder.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255466,"byte_end":255521,"line_start":137,"line_end":137,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255916,"byte_end":255929,"line_start":152,"line_end":152,"column_start":9,"column_end":22},"name":"extract_proof","qualname":"<ProvingBackend>::extract_proof","value":"fn (&self) -> StorageProof","parent":null,"children":[],"decl_id":null,"docs":" Extracting the gathered unordered proof.\n","sig":null,"attributes":[{"value":"/ Extracting the gathered unordered proof.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255863,"byte_end":255907,"line_start":151,"line_end":151,"column_start":2,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":1337},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":259074,"byte_end":259100,"line_start":283,"line_end":283,"column_start":8,"column_end":34},"name":"create_proof_check_backend","qualname":"::proving_backend::create_proof_check_backend","value":"fn <H> (root: H::Out, proof: StorageProof) -> Result<TrieBackend<MemoryDB<H>, H>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Create proof check backend.\n","sig":null,"attributes":[{"value":"/ Create proof check backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":259035,"byte_end":259066,"line_start":282,"line_end":282,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265617,"byte_end":265628,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"TrieBackend","qualname":"::trie_backend::TrieBackend","value":"TrieBackend {  }","parent":null,"children":[{"krate":0,"index":1370}],"decl_id":null,"docs":" Patricia trie-based backend. Transaction type is an overlay of changes to commit.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend. Transaction type is an overlay of changes to commit.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265520,"byte_end":265605,"line_start":31,"line_end":31,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265845,"byte_end":265848,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"new","qualname":"<TrieBackend<S, H>>::new","value":"fn (storage: S, root: H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new trie-based backend.\n","sig":null,"attributes":[{"value":"/ Create new trie-based backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265802,"byte_end":265836,"line_start":37,"line_end":37,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266005,"byte_end":266012,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"essence","qualname":"<TrieBackend<S, H>>::essence","value":"fn (&self) -> &TrieBackendEssence<S, H>","parent":null,"children":[],"decl_id":null,"docs":" Get backend essence reference.\n","sig":null,"attributes":[{"value":"/ Get backend essence reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265962,"byte_end":265996,"line_start":44,"line_end":44,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266115,"byte_end":266130,"line_start":50,"line_end":50,"column_start":9,"column_end":24},"name":"backend_storage","qualname":"<TrieBackend<S, H>>::backend_storage","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266072,"byte_end":266106,"line_start":49,"line_end":49,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266227,"byte_end":266246,"line_start":55,"line_end":55,"column_start":9,"column_end":28},"name":"backend_storage_mut","qualname":"<TrieBackend<S, H>>::backend_storage_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266184,"byte_end":266218,"line_start":54,"line_end":54,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266339,"byte_end":266343,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"name":"root","qualname":"<TrieBackend<S, H>>::root","value":"fn (&self) -> &H::Out","parent":null,"children":[],"decl_id":null,"docs":" Get trie root.\n","sig":null,"attributes":[{"value":"/ Get trie root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266312,"byte_end":266330,"line_start":59,"line_end":59,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266449,"byte_end":266461,"line_start":65,"line_end":65,"column_start":9,"column_end":21},"name":"into_storage","qualname":"<TrieBackend<S, H>>::into_storage","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns underlying storage.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns underlying storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266391,"byte_end":266440,"line_start":64,"line_end":64,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1449},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275500,"byte_end":275507,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"Storage","qualname":"::trie_backend_essence::Storage","value":"Storage<H: Hasher>: Send + Sync","parent":null,"children":[{"krate":0,"index":1451}],"decl_id":null,"docs":" Patricia trie-based storage trait.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based storage trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275451,"byte_end":275489,"line_start":33,"line_end":33,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275560,"byte_end":275563,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"get","qualname":"::trie_backend_essence::Storage::get","value":"fn (&self, key: &H::Out, prefix: Prefix) -> Result<Option<DBValue>, String>","parent":{"krate":0,"index":1449},"children":[],"decl_id":null,"docs":" Get a trie node.\n","sig":null,"attributes":[{"value":"/ Get a trie node.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275535,"byte_end":275555,"line_start":35,"line_end":35,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275698,"byte_end":275716,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"TrieBackendEssence","qualname":"::trie_backend_essence::TrieBackendEssence","value":"TrieBackendEssence {  }","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457}],"decl_id":null,"docs":" Patricia trie-based pairs storage essence.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based pairs storage essence.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275640,"byte_end":275686,"line_start":39,"line_end":39,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275937,"byte_end":275940,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"name":"new","qualname":"<TrieBackendEssence<S, H>>::new","value":"fn (storage: S, root: H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new trie-based backend.\n","sig":null,"attributes":[{"value":"/ Create new trie-based backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275894,"byte_end":275928,"line_start":47,"line_end":47,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276100,"byte_end":276115,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"name":"backend_storage","qualname":"<TrieBackendEssence<S, H>>::backend_storage","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276057,"byte_end":276091,"line_start":56,"line_end":56,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276195,"byte_end":276214,"line_start":62,"line_end":62,"column_start":9,"column_end":28},"name":"backend_storage_mut","qualname":"<TrieBackendEssence<S, H>>::backend_storage_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276152,"byte_end":276186,"line_start":61,"line_end":61,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276290,"byte_end":276294,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"root","qualname":"<TrieBackendEssence<S, H>>::root","value":"fn (&self) -> &H::Out","parent":null,"children":[],"decl_id":null,"docs":" Get trie root.\n","sig":null,"attributes":[{"value":"/ Get trie root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276263,"byte_end":276281,"line_start":66,"line_end":66,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276388,"byte_end":276396,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"name":"set_root","qualname":"<TrieBackendEssence<S, H>>::set_root","value":"fn (&mut self, root: H::Out) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set trie root. This is useful for testing.\n","sig":null,"attributes":[{"value":"/ Set trie root. This is useful for testing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276333,"byte_end":276379,"line_start":71,"line_end":71,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276507,"byte_end":276519,"line_start":77,"line_end":77,"column_start":9,"column_end":21},"name":"into_storage","qualname":"<TrieBackendEssence<S, H>>::into_storage","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns underlying storage.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns underlying storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276449,"byte_end":276498,"line_start":76,"line_end":76,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276682,"byte_end":276698,"line_start":83,"line_end":83,"column_start":9,"column_end":25},"name":"next_storage_key","qualname":"<TrieBackendEssence<S, H>>::next_storage_key","value":"fn (&self, key: &[u8]) -> Result<Option<StorageKey>, String>","parent":null,"children":[],"decl_id":null,"docs":" Return the next key in the trie i.e. the minimum key that is strictly superior to `key` in\n lexicographic order.\n","sig":null,"attributes":[{"value":"/ Return the next key in the trie i.e. the minimum key that is strictly superior to `key` in","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276553,"byte_end":276647,"line_start":81,"line_end":81,"column_start":2,"column_end":96}},{"value":"/ lexicographic order.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":276649,"byte_end":276673,"line_start":82,"line_end":82,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":277169,"byte_end":277191,"line_start":94,"line_end":94,"column_start":9,"column_end":31},"name":"next_child_storage_key","qualname":"<TrieBackendEssence<S, H>>::next_child_storage_key","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Result<Option<StorageKey>, String>","parent":null,"children":[],"decl_id":null,"docs":" Return the next key in the child trie i.e. the minimum key that is strictly superior to\n `key` in lexicographic order.\n","sig":null,"attributes":[{"value":"/ Return the next key in the child trie i.e. the minimum key that is strictly superior to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":277034,"byte_end":277125,"line_start":92,"line_end":92,"column_start":2,"column_end":93}},{"value":"/ `key` in lexicographic order.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":277127,"byte_end":277160,"line_start":93,"line_end":93,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":279271,"byte_end":279278,"line_start":161,"line_end":161,"column_start":9,"column_end":16},"name":"storage","qualname":"<TrieBackendEssence<S, H>>::storage","value":"fn (&self, key: &[u8]) -> Result<Option<StorageValue>, String>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of storage at given key.\n","sig":null,"attributes":[{"value":"/ Get the value of storage at given key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":279220,"byte_end":279262,"line_start":160,"line_end":160,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":279530,"byte_end":279543,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<TrieBackendEssence<S, H>>::child_storage","value":"fn (&self, child_info: &ChildInfo, key: &[u8]) -> Result<Option<StorageValue>, String>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of child storage at given key.\n","sig":null,"attributes":[{"value":"/ Get the value of child storage at given key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":279473,"byte_end":279521,"line_start":167,"line_end":167,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":279997,"byte_end":280022,"line_start":183,"line_end":183,"column_start":9,"column_end":34},"name":"for_keys_in_child_storage","qualname":"<TrieBackendEssence<S, H>>::for_keys_in_child_storage","value":"fn <F> (&self, child_info: &ChildInfo, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retrieve all entries keys of child storage and call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of child storage and call `f` for each of those keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":279905,"byte_end":279988,"line_start":182,"line_end":182,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":280591,"byte_end":280617,"line_start":207,"line_end":207,"column_start":9,"column_end":35},"name":"for_child_keys_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_child_keys_with_prefix","value":"fn <F> (&self, child_info: &ChildInfo, prefix: &[u8], mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all keys starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all keys starting with prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":280522,"byte_end":280582,"line_start":206,"line_end":206,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":281179,"byte_end":281199,"line_start":226,"line_end":226,"column_start":9,"column_end":29},"name":"for_keys_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_keys_with_prefix","value":"fn <F> (&self, prefix: &[u8], mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all keys starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all keys starting with prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":281110,"byte_end":281170,"line_start":225,"line_end":225,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282111,"byte_end":282137,"line_start":263,"line_end":263,"column_start":9,"column_end":35},"name":"for_key_values_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_key_values_with_prefix","value":"fn <F> (&self, prefix: &[u8], f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all key and values starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all key and values starting with prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282032,"byte_end":282102,"line_start":262,"line_end":262,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1526},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284203,"byte_end":284221,"line_start":336,"line_end":336,"column_start":11,"column_end":29},"name":"TrieBackendStorage","qualname":"::trie_backend_essence::TrieBackendStorage","value":"TrieBackendStorage<H: Hasher>: Send + Sync","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529}],"decl_id":null,"docs":" Key-value pairs storage that is used by trie backend essence.\n","sig":null,"attributes":[{"value":"/ Key-value pairs storage that is used by trie backend essence.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284127,"byte_end":284192,"line_start":335,"line_end":335,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1528},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284286,"byte_end":284293,"line_start":338,"line_end":338,"column_start":7,"column_end":14},"name":"Overlay","qualname":"::trie_backend_essence::TrieBackendStorage::Overlay","value":"type Overlay: hash_db::HashDB<H, DBValue> + Default + Consolidate;","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":" Type of in-memory overlay.\n","sig":null,"attributes":[{"value":"/ Type of in-memory overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284249,"byte_end":284279,"line_start":337,"line_end":337,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284386,"byte_end":284389,"line_start":340,"line_end":340,"column_start":5,"column_end":8},"name":"get","qualname":"::trie_backend_essence::TrieBackendStorage::get","value":"fn (&self, key: &H::Out, prefix: Prefix) -> Result<Option<DBValue>, String>","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":" Get the value stored at key.\n","sig":null,"attributes":[{"value":"/ Get the value stored at key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284349,"byte_end":284381,"line_start":339,"line_end":339,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2149},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289823,"byte_end":289832,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"UsageUnit","qualname":"::stats::UsageUnit","value":"UsageUnit { ops, bytes }","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2151}],"decl_id":null,"docs":" Measured count of operations and total bytes.\n","sig":null,"attributes":[{"value":"/ Measured count of operations and total bytes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289729,"byte_end":289778,"line_start":23,"line_end":23,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2150},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289867,"byte_end":289870,"line_start":27,"line_end":27,"column_start":6,"column_end":9},"name":"ops","qualname":"::stats::UsageUnit::ops","value":"u64","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":" Number of operations.\n","sig":null,"attributes":[{"value":"/ Number of operations.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289836,"byte_end":289861,"line_start":26,"line_end":26,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2151},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289904,"byte_end":289909,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"name":"bytes","qualname":"::stats::UsageUnit::bytes","value":"u64","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":" Number of bytes.\n","sig":null,"attributes":[{"value":"/ Number of bytes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289878,"byte_end":289898,"line_start":28,"line_end":28,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2158},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289994,"byte_end":290003,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"UsageInfo","qualname":"::stats::UsageInfo","value":"UsageInfo { reads, writes, nodes_writes, overlay_writes, removed_nodes, cache_reads, modified_reads, memory, started, span }","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"decl_id":null,"docs":" Usage statistics for state backend.\n","sig":null,"attributes":[{"value":"/ Usage statistics for state backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":289919,"byte_end":289958,"line_start":32,"line_end":32,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2159},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290041,"byte_end":290046,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"name":"reads","qualname":"::stats::UsageInfo::reads","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Read statistics (total).\n","sig":null,"attributes":[{"value":"/ Read statistics (total).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290007,"byte_end":290035,"line_start":35,"line_end":35,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2160},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290095,"byte_end":290101,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"name":"writes","qualname":"::stats::UsageInfo::writes","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Write statistics (total).\n","sig":null,"attributes":[{"value":"/ Write statistics (total).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290060,"byte_end":290089,"line_start":37,"line_end":37,"column_start":2,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290153,"byte_end":290165,"line_start":40,"line_end":40,"column_start":6,"column_end":18},"name":"nodes_writes","qualname":"::stats::UsageInfo::nodes_writes","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Write trie nodes statistics.\n","sig":null,"attributes":[{"value":"/ Write trie nodes statistics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290115,"byte_end":290147,"line_start":39,"line_end":39,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2162},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290241,"byte_end":290255,"line_start":43,"line_end":43,"column_start":6,"column_end":20},"name":"overlay_writes","qualname":"::stats::UsageInfo::overlay_writes","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Write into cached state machine\n change overlay.\n","sig":null,"attributes":[{"value":"/ Write into cached state machine","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290179,"byte_end":290214,"line_start":41,"line_end":41,"column_start":2,"column_end":37}},{"value":"/ change overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290216,"byte_end":290235,"line_start":42,"line_end":42,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2163},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290309,"byte_end":290322,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"name":"removed_nodes","qualname":"::stats::UsageInfo::removed_nodes","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Removed trie nodes statistics.\n","sig":null,"attributes":[{"value":"/ Removed trie nodes statistics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290269,"byte_end":290303,"line_start":44,"line_end":44,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2164},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290368,"byte_end":290379,"line_start":47,"line_end":47,"column_start":6,"column_end":17},"name":"cache_reads","qualname":"::stats::UsageInfo::cache_reads","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Cache read statistics.\n","sig":null,"attributes":[{"value":"/ Cache read statistics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290336,"byte_end":290362,"line_start":46,"line_end":46,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2165},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290434,"byte_end":290448,"line_start":49,"line_end":49,"column_start":6,"column_end":20},"name":"modified_reads","qualname":"::stats::UsageInfo::modified_reads","value":"stats::UsageUnit","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Modified value read statistics.\n","sig":null,"attributes":[{"value":"/ Modified value read statistics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290393,"byte_end":290428,"line_start":48,"line_end":48,"column_start":2,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2166},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290484,"byte_end":290490,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"name":"memory","qualname":"::stats::UsageInfo::memory","value":"usize","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Memory used.\n","sig":null,"attributes":[{"value":"/ Memory used.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290462,"byte_end":290478,"line_start":50,"line_end":50,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2167},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290579,"byte_end":290586,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"name":"started","qualname":"::stats::UsageInfo::started","value":"std::time::Instant","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Moment at which current statistics has been started being collected.\n","sig":null,"attributes":[{"value":"/ Moment at which current statistics has been started being collected.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290501,"byte_end":290573,"line_start":53,"line_end":53,"column_start":2,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2168},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290635,"byte_end":290639,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"name":"span","qualname":"::stats::UsageInfo::span","value":"std::time::Duration","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Timespan of the statistics.\n","sig":null,"attributes":[{"value":"/ Timespan of the statistics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290598,"byte_end":290629,"line_start":55,"line_end":55,"column_start":2,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2173},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290768,"byte_end":290785,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"StateMachineStats","qualname":"::stats::StateMachineStats","value":"StateMachineStats { reads_modified, bytes_read_modified, writes_overlay, bytes_writes_overlay }","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177}],"decl_id":null,"docs":" Accumulated usage statistics specific to state machine\n crate.\n","sig":null,"attributes":[{"value":"/ Accumulated usage statistics specific to state machine","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290654,"byte_end":290712,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/ crate.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290713,"byte_end":290723,"line_start":60,"line_end":60,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2174},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290896,"byte_end":290910,"line_start":66,"line_end":66,"column_start":6,"column_end":20},"name":"reads_modified","qualname":"::stats::StateMachineStats::reads_modified","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Number of read query from runtime\n that hit a modified value (in state\n machine overlay).\n","sig":null,"attributes":[{"value":"/ Number of read query from runtime","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290789,"byte_end":290826,"line_start":63,"line_end":63,"column_start":2,"column_end":39}},{"value":"/ that hit a modified value (in state","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290828,"byte_end":290867,"line_start":64,"line_end":64,"column_start":2,"column_end":41}},{"value":"/ machine overlay).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290869,"byte_end":290890,"line_start":65,"line_end":65,"column_start":2,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2175},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290997,"byte_end":291016,"line_start":69,"line_end":69,"column_start":6,"column_end":25},"name":"bytes_read_modified","qualname":"::stats::StateMachineStats::bytes_read_modified","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Size in byte of read queries that\n hit a modified value.\n","sig":null,"attributes":[{"value":"/ Size in byte of read queries that","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290927,"byte_end":290964,"line_start":67,"line_end":67,"column_start":2,"column_end":39}},{"value":"/ hit a modified value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":290966,"byte_end":290991,"line_start":68,"line_end":68,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291119,"byte_end":291133,"line_start":72,"line_end":72,"column_start":6,"column_end":20},"name":"writes_overlay","qualname":"::stats::StateMachineStats::writes_overlay","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Number of time a write operation\n occurs into the state machine overlay.\n","sig":null,"attributes":[{"value":"/ Number of time a write operation","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291033,"byte_end":291069,"line_start":70,"line_end":70,"column_start":2,"column_end":38}},{"value":"/ occurs into the state machine overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291071,"byte_end":291113,"line_start":71,"line_end":71,"column_start":2,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2177},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291211,"byte_end":291231,"line_start":75,"line_end":75,"column_start":6,"column_end":26},"name":"bytes_writes_overlay","qualname":"::stats::StateMachineStats::bytes_writes_overlay","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Size in bytes of the writes overlay\n operation.\n","sig":null,"attributes":[{"value":"/ Size in bytes of the writes overlay","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291150,"byte_end":291189,"line_start":73,"line_end":73,"column_start":2,"column_end":41}},{"value":"/ operation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291191,"byte_end":291205,"line_start":74,"line_end":74,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291323,"byte_end":291326,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"name":"add","qualname":"<StateMachineStats>::add","value":"fn (&self, other: &StateMachineStats) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Accumulates some registered stats.\n","sig":null,"attributes":[{"value":"/ Accumulates some registered stats.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291276,"byte_end":291314,"line_start":79,"line_end":79,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291762,"byte_end":291767,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"name":"empty","qualname":"<UsageInfo>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Empty statistics.","sig":null,"attributes":[{"value":"/ Empty statistics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291693,"byte_end":291714,"line_start":89,"line_end":89,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291716,"byte_end":291719,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ Means no data was collected.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291721,"byte_end":291753,"line_start":91,"line_end":91,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292187,"byte_end":292215,"line_start":107,"line_end":107,"column_start":9,"column_end":37},"name":"include_state_machine_states","qualname":"<UsageInfo>::include_state_machine_states","value":"fn (&mut self, count: &StateMachineStats) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add collected state machine to this state.\n","sig":null,"attributes":[{"value":"/ Add collected state machine to this state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292132,"byte_end":292178,"line_start":106,"line_end":106,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292610,"byte_end":292629,"line_start":117,"line_end":117,"column_start":9,"column_end":28},"name":"tally_read_modified","qualname":"<StateMachineStats>::tally_read_modified","value":"fn (&self, data_bytes: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Tally one read modified operation, of some length.\n","sig":null,"attributes":[{"value":"/ Tally one read modified operation, of some length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292547,"byte_end":292601,"line_start":116,"line_end":116,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292821,"byte_end":292840,"line_start":122,"line_end":122,"column_start":9,"column_end":28},"name":"tally_write_overlay","qualname":"<StateMachineStats>::tally_write_overlay","value":"fn (&self, data_bytes: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Tally one write overlay operation, of some length.\n","sig":null,"attributes":[{"value":"/ Tally one write overlay operation, of some length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292758,"byte_end":292812,"line_start":121,"line_end":121,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1591},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294011,"byte_end":294023,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"InspectState","qualname":"::read_only::InspectState","value":"InspectState<H: Hasher, B: Backend<H>>","parent":null,"children":[{"krate":0,"index":1594}],"decl_id":null,"docs":" Trait for inspecting state in any backend.","sig":null,"attributes":[{"value":"/ Trait for inspecting state in any backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":293917,"byte_end":293963,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":293964,"byte_end":293967,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Implemented for any backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":293968,"byte_end":294000,"line_start":34,"line_end":34,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294197,"byte_end":294209,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"inspect_with","qualname":"::read_only::InspectState::inspect_with","value":"fn <F> (&self, f: F) -> ()","parent":{"krate":0,"index":1591},"children":[],"decl_id":null,"docs":" Inspect state with a closure.","sig":null,"attributes":[{"value":"/ Inspect state with a closure.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294053,"byte_end":294086,"line_start":36,"line_end":36,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294088,"byte_end":294091,"line_start":37,"line_end":37,"column_start":2,"column_end":5}},{"value":"/ Self will be set as read-only externalities and inspection","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294093,"byte_end":294155,"line_start":38,"line_end":38,"column_start":2,"column_end":64}},{"value":"/ closure will be run against it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294157,"byte_end":294192,"line_start":39,"line_end":39,"column_start":2,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2184},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294581,"byte_end":294602,"line_start":54,"line_end":54,"column_start":12,"column_end":33},"name":"ReadOnlyExternalities","qualname":"::read_only::ReadOnlyExternalities","value":"ReadOnlyExternalities {  }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"decl_id":null,"docs":" Simple read-only externalities for any backend.","sig":null,"attributes":[{"value":"/ Simple read-only externalities for any backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294401,"byte_end":294452,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294453,"byte_end":294456,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ To be used in test for state inspection. Will panic if something writes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294457,"byte_end":294532,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ to the storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294533,"byte_end":294552,"line_start":52,"line_end":52,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":295079,"byte_end":295091,"line_start":69,"line_end":69,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<ReadOnlyExternalities>::execute_with","value":"fn <R> (&mut self, f: impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294952,"byte_end":295019,"line_start":66,"line_end":66,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":295021,"byte_end":295024,"line_start":67,"line_end":67,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":295026,"byte_end":295070,"line_start":68,"line_end":68,"column_start":2,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1705},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2843,"byte_end":2857,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"DefaultHandler","qualname":"::DefaultHandler","value":"fn(CallResult<R, E>, CallResult<R, E>) -> CallResult<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Default handler of the execution manager.\n","sig":null,"attributes":[{"value":"/ Default handler of the execution manager.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2788,"byte_end":2833,"line_start":84,"line_end":84,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1708},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2974,"byte_end":2996,"line_start":88,"line_end":88,"column_start":10,"column_end":32},"name":"ChangesTrieTransaction","qualname":"::ChangesTrieTransaction","value":"(MemoryDB<H>, ChangesTrieCacheAction<<H as Hasher>::Out, N>)","parent":null,"children":[],"decl_id":null,"docs":" Type of changes trie transaction.\n","sig":null,"attributes":[{"value":"/ Type of changes trie transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":2927,"byte_end":2964,"line_start":87,"line_end":87,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1711},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3123,"byte_end":3138,"line_start":94,"line_end":94,"column_start":10,"column_end":25},"name":"InMemoryBackend","qualname":"::InMemoryBackend","value":"TrieBackend<MemoryDB<H>, H>","parent":null,"children":[],"decl_id":null,"docs":" Trie backend with in-memory storage.\n","sig":null,"attributes":[{"value":"/ Trie backend with in-memory storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3073,"byte_end":3113,"line_start":93,"line_end":93,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3422,"byte_end":3440,"line_start":100,"line_end":100,"column_start":2,"column_end":20},"name":"NativeWhenPossible","qualname":"::ExecutionStrategy::NativeWhenPossible","value":"ExecutionStrategy::NativeWhenPossible","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" Execute with the native equivalent if it is compatible with the given wasm module; otherwise fall back to the wasm.\n","sig":null,"attributes":[{"value":"/ Execute with the native equivalent if it is compatible with the given wasm module; otherwise fall back to the wasm.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3301,"byte_end":3420,"line_start":99,"line_end":99,"column_start":2,"column_end":121}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2198},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3475,"byte_end":3485,"line_start":102,"line_end":102,"column_start":2,"column_end":12},"name":"AlwaysWasm","qualname":"::ExecutionStrategy::AlwaysWasm","value":"ExecutionStrategy::AlwaysWasm","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" Use the given wasm module.\n","sig":null,"attributes":[{"value":"/ Use the given wasm module.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3443,"byte_end":3473,"line_start":101,"line_end":101,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3592,"byte_end":3596,"line_start":104,"line_end":104,"column_start":2,"column_end":6},"name":"Both","qualname":"::ExecutionStrategy::Both","value":"ExecutionStrategy::Both","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" Run with both the wasm and the native variant (if compatible). Report any discrepancy as an error.\n","sig":null,"attributes":[{"value":"/ Run with both the wasm and the native variant (if compatible). Report any discrepancy as an error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3488,"byte_end":3590,"line_start":103,"line_end":103,"column_start":2,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3663,"byte_end":3677,"line_start":106,"line_end":106,"column_start":2,"column_end":16},"name":"NativeElseWasm","qualname":"::ExecutionStrategy::NativeElseWasm","value":"ExecutionStrategy::NativeElseWasm","parent":{"krate":0,"index":2195},"children":[],"decl_id":null,"docs":" First native, then if that fails or is not possible, wasm.\n","sig":null,"attributes":[{"value":"/ First native, then if that fails or is not possible, wasm.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3599,"byte_end":3661,"line_start":105,"line_end":105,"column_start":2,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2195},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3280,"byte_end":3297,"line_start":98,"line_end":98,"column_start":10,"column_end":27},"name":"ExecutionStrategy","qualname":"::ExecutionStrategy","value":"ExecutionStrategy::{NativeWhenPossible, AlwaysWasm, Both, NativeElseWasm}","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202}],"decl_id":null,"docs":" Strategy for executing a call into the runtime.\n","sig":null,"attributes":[{"value":"/ Strategy for executing a call into the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3174,"byte_end":3225,"line_start":96,"line_end":96,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3847,"byte_end":3854,"line_start":113,"line_end":113,"column_start":2,"column_end":9},"name":"Trusted","qualname":"::BackendTrustLevel::Trusted","value":"BackendTrustLevel::Trusted","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" Panics from trusted backends are considered justified, and never caught.\n","sig":null,"attributes":[{"value":"/ Panics from trusted backends are considered justified, and never caught.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3769,"byte_end":3845,"line_start":112,"line_end":112,"column_start":2,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4040,"byte_end":4049,"line_start":117,"line_end":117,"column_start":2,"column_end":11},"name":"Untrusted","qualname":"::BackendTrustLevel::Untrusted","value":"BackendTrustLevel::Untrusted","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" Panics from untrusted backend are caught and interpreted as runtime error.\n Untrusted backend may be missing some parts of the trie, so panics are not considered\n fatal.\n","sig":null,"attributes":[{"value":"/ Panics from untrusted backend are caught and interpreted as runtime error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3857,"byte_end":3935,"line_start":114,"line_end":114,"column_start":2,"column_end":80}},{"value":"/ Untrusted backend may be missing some parts of the trie, so panics are not considered","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3937,"byte_end":4026,"line_start":115,"line_end":115,"column_start":2,"column_end":91}},{"value":"/ fatal.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4028,"byte_end":4038,"line_start":116,"line_end":116,"column_start":2,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2215},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3748,"byte_end":3765,"line_start":111,"line_end":111,"column_start":10,"column_end":27},"name":"BackendTrustLevel","qualname":"::BackendTrustLevel","value":"BackendTrustLevel::{Trusted, Untrusted}","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2218}],"decl_id":null,"docs":" Storage backend trust level.\n","sig":null,"attributes":[{"value":"/ Storage backend trust level.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":3682,"byte_end":3714,"line_start":109,"line_end":109,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4313,"byte_end":4331,"line_start":124,"line_end":124,"column_start":2,"column_end":20},"name":"NativeWhenPossible","qualname":"::ExecutionManager::NativeWhenPossible","value":"ExecutionManager::NativeWhenPossible","parent":{"krate":0,"index":2224},"children":[],"decl_id":null,"docs":" Execute with the native equivalent if it is compatible with the given wasm module; otherwise fall back to the wasm.\n","sig":null,"attributes":[{"value":"/ Execute with the native equivalent if it is compatible with the given wasm module; otherwise fall back to the wasm.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4192,"byte_end":4311,"line_start":123,"line_end":123,"column_start":2,"column_end":121}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2228},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4604,"byte_end":4614,"line_start":128,"line_end":128,"column_start":2,"column_end":12},"name":"AlwaysWasm","qualname":"::ExecutionManager::AlwaysWasm","value":"ExecutionManager::AlwaysWasm(BackendTrustLevel)","parent":{"krate":0,"index":2224},"children":[],"decl_id":null,"docs":" Use the given wasm module. The backend on which code is executed code could be\n trusted to provide all storage or not (i.e. the light client cannot be trusted to provide\n for all storage queries since the storage entries it has come from an external node).\n","sig":null,"attributes":[{"value":"/ Use the given wasm module. The backend on which code is executed code could be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4334,"byte_end":4416,"line_start":125,"line_end":125,"column_start":2,"column_end":84}},{"value":"/ trusted to provide all storage or not (i.e. the light client cannot be trusted to provide","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4418,"byte_end":4511,"line_start":126,"line_end":126,"column_start":2,"column_end":95}},{"value":"/ for all storage queries since the storage entries it has come from an external node).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4513,"byte_end":4602,"line_start":127,"line_end":127,"column_start":2,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2231},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4745,"byte_end":4749,"line_start":130,"line_end":130,"column_start":2,"column_end":6},"name":"Both","qualname":"::ExecutionManager::Both","value":"ExecutionManager::Both(F)","parent":{"krate":0,"index":2224},"children":[],"decl_id":null,"docs":" Run with both the wasm and the native variant (if compatible). Call `F` in the case of any discrepancy.\n","sig":null,"attributes":[{"value":"/ Run with both the wasm and the native variant (if compatible). Call `F` in the case of any discrepancy.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4636,"byte_end":4743,"line_start":129,"line_end":129,"column_start":2,"column_end":109}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2234},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4819,"byte_end":4833,"line_start":132,"line_end":132,"column_start":2,"column_end":16},"name":"NativeElseWasm","qualname":"::ExecutionManager::NativeElseWasm","value":"ExecutionManager::NativeElseWasm","parent":{"krate":0,"index":2224},"children":[],"decl_id":null,"docs":" First native, then if that fails or is not possible, wasm.\n","sig":null,"attributes":[{"value":"/ First native, then if that fails or is not possible, wasm.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4755,"byte_end":4817,"line_start":131,"line_end":131,"column_start":2,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":2224},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4169,"byte_end":4185,"line_start":122,"line_end":122,"column_start":10,"column_end":26},"name":"ExecutionManager","qualname":"::ExecutionManager","value":"ExecutionManager::{NativeWhenPossible, AlwaysWasm, Both, NativeElseWasm}","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2231},{"krate":0,"index":2234}],"decl_id":null,"docs":" Like `ExecutionStrategy` only it also stores a handler in case of consensus failure.\n","sig":null,"attributes":[{"value":"/ Like `ExecutionStrategy` only it also stores a handler in case of consensus failure.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4054,"byte_end":4142,"line_start":120,"line_end":120,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":5353,"byte_end":5364,"line_start":148,"line_end":148,"column_start":9,"column_end":20},"name":"get_manager","qualname":"<ExecutionStrategy>::get_manager","value":"fn <E, R> (self) -> ExecutionManager<DefaultHandler<R, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the corresponding manager for the execution strategy.\n","sig":null,"attributes":[{"value":"/ Gets the corresponding manager for the execution strategy.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":5282,"byte_end":5344,"line_start":147,"line_end":147,"column_start":2,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1722},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":6159,"byte_end":6175,"line_start":170,"line_end":170,"column_start":8,"column_end":24},"name":"native_else_wasm","qualname":"::native_else_wasm","value":"fn <E, R> () -> ExecutionManager<DefaultHandler<R, E>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate to ExecutionManager::NativeElseWasm, without having to figure out the type.\n","sig":null,"attributes":[{"value":"/ Evaluate to ExecutionManager::NativeElseWasm, without having to figure out the type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":6063,"byte_end":6151,"line_start":169,"line_end":169,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":6812,"byte_end":6824,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"StateMachine","qualname":"::StateMachine","value":"StateMachine {  }","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"decl_id":null,"docs":" The substrate state machine.\n","sig":null,"attributes":[{"value":"/ The substrate state machine.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":6768,"byte_end":6800,"line_start":184,"line_end":184,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":7781,"byte_end":7784,"line_start":222,"line_end":222,"column_start":9,"column_end":12},"name":"new","qualname":"<StateMachine>::new","value":"fn (backend: &'a B, changes_trie_state: Option<ChangesTrieState<'a, H, N>>, overlay: &'a mut OverlayedChanges, offchain_overlay: &'a mut OffchainOverlayedChanges, exec: &'a Exec, method: &'a str, call_data: &'a [u8], mut extensions: Extensions, runtime_code: &'a RuntimeCode, spawn_handle: Box<dyn CloneableSpawn>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new substrate state machine.\n","sig":null,"attributes":[{"value":"/ Creates new substrate state machine.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":7732,"byte_end":7772,"line_start":221,"line_end":221,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8777,"byte_end":8807,"line_start":257,"line_end":257,"column_start":9,"column_end":39},"name":"with_storage_transaction_cache","qualname":"<StateMachine>::with_storage_transaction_cache","value":"fn (mut self, cache: Option<&'a mut StorageTransactionCache<B::Transaction, H, N>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use given `cache` as storage transaction cache.","sig":null,"attributes":[{"value":"/ Use given `cache` as storage transaction cache.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8492,"byte_end":8543,"line_start":252,"line_end":252,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8545,"byte_end":8548,"line_start":253,"line_end":253,"column_start":2,"column_end":5}},{"value":"/ The cache will be used to cache storage transactions that can be build while executing a","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8550,"byte_end":8642,"line_start":254,"line_end":254,"column_start":2,"column_end":94}},{"value":"/ function in the runtime. For example, when calculating the storage root a transaction is","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8644,"byte_end":8736,"line_start":255,"line_end":255,"column_start":2,"column_end":94}},{"value":"/ build that will be cached.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8738,"byte_end":8768,"line_start":256,"line_end":256,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9375,"byte_end":9382,"line_start":273,"line_end":273,"column_start":9,"column_end":16},"name":"execute","qualname":"<StateMachine>::execute","value":"fn (&mut self, strategy: ExecutionStrategy) -> Result<Vec<u8>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Execute a call using the given state backend, overlayed changes, and call executor.","sig":null,"attributes":[{"value":"/ Execute a call using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":8960,"byte_end":9047,"line_start":265,"line_end":265,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9049,"byte_end":9052,"line_start":266,"line_end":266,"column_start":2,"column_end":5}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9054,"byte_end":9121,"line_start":267,"line_end":267,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9123,"byte_end":9126,"line_start":268,"line_end":268,"column_start":2,"column_end":5}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9128,"byte_end":9218,"line_start":269,"line_end":269,"column_start":2,"column_end":92}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9220,"byte_end":9297,"line_start":270,"line_end":270,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9299,"byte_end":9302,"line_start":271,"line_end":271,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded result of the executed function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":9304,"byte_end":9366,"line_start":272,"line_end":272,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12751,"byte_end":12790,"line_start":408,"line_end":408,"column_start":9,"column_end":48},"name":"execute_using_consensus_failure_handler","qualname":"<StateMachine>::execute_using_consensus_failure_handler","value":"fn <Handler, R, NC> (&mut self, manager: ExecutionManager<Handler>, mut native_call: Option<NC>) -> Result<NativeOrEncoded<R>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Execute a call using the given state backend, overlayed changes, and call executor.","sig":null,"attributes":[{"value":"/ Execute a call using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12274,"byte_end":12361,"line_start":399,"line_end":399,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12363,"byte_end":12366,"line_start":400,"line_end":400,"column_start":2,"column_end":5}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12368,"byte_end":12435,"line_start":401,"line_end":401,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12437,"byte_end":12440,"line_start":402,"line_end":402,"column_start":2,"column_end":5}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12442,"byte_end":12532,"line_start":403,"line_end":403,"column_start":2,"column_end":92}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12534,"byte_end":12611,"line_start":404,"line_end":404,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12613,"byte_end":12616,"line_start":405,"line_end":405,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the executed function either in native representation `R` or","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12618,"byte_end":12704,"line_start":406,"line_end":406,"column_start":2,"column_end":88}},{"value":"/ in SCALE encoded representation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":12706,"byte_end":12742,"line_start":407,"line_end":407,"column_start":2,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1779},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":14162,"byte_end":14177,"line_start":455,"line_end":455,"column_start":8,"column_end":23},"name":"prove_execution","qualname":"::prove_execution","value":"fn <B, H, N, Exec> (mut backend: B, overlay: &mut OverlayedChanges, exec: &Exec, spawn_handle: Box<dyn CloneableSpawn>, method: &str, call_data: &[u8], runtime_code: &RuntimeCode) -> Result<(Vec<u8>, StorageProof), Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Prove execution using the given state backend, overlayed changes, and call executor.\n","sig":null,"attributes":[{"value":"/ Prove execution using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":14066,"byte_end":14154,"line_start":454,"line_end":454,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":1785},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15400,"byte_end":15431,"line_start":493,"line_end":493,"column_start":8,"column_end":39},"name":"prove_execution_on_trie_backend","qualname":"::prove_execution_on_trie_backend","value":"fn <S, H, N, Exec> (trie_backend: &TrieBackend<S, H>, overlay: &mut OverlayedChanges, exec: &Exec, spawn_handle: Box<dyn CloneableSpawn>, method: &str, call_data: &[u8], runtime_code: &RuntimeCode) -> Result<(Vec<u8>, StorageProof), Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Prove execution using the given trie backend, overlayed changes, and call executor.\n Produces a state-backend-specific \"transaction\" which can be used to apply the changes\n to the backing store, such as the disk.\n Execution proof is the set of all 'touched' storage DBValues from the backend.","sig":null,"attributes":[{"value":"/ Prove execution using the given trie backend, overlayed changes, and call executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":14842,"byte_end":14929,"line_start":484,"line_end":484,"column_start":1,"column_end":88}},{"value":"/ Produces a state-backend-specific \"transaction\" which can be used to apply the changes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":14930,"byte_end":15020,"line_start":485,"line_end":485,"column_start":1,"column_end":91}},{"value":"/ to the backing store, such as the disk.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15021,"byte_end":15064,"line_start":486,"line_end":486,"column_start":1,"column_end":44}},{"value":"/ Execution proof is the set of all 'touched' storage DBValues from the backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15065,"byte_end":15147,"line_start":487,"line_end":487,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15148,"byte_end":15151,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15152,"byte_end":15219,"line_start":489,"line_end":489,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15220,"byte_end":15223,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15224,"byte_end":15314,"line_start":491,"line_end":491,"column_start":1,"column_end":91}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":15315,"byte_end":15392,"line_start":492,"line_end":492,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1790},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":16491,"byte_end":16512,"line_start":533,"line_end":533,"column_start":8,"column_end":29},"name":"execution_proof_check","qualname":"::execution_proof_check","value":"fn <H, N, Exec> (root: H::Out, proof: StorageProof, overlay: &mut OverlayedChanges, exec: &Exec, spawn_handle: Box<dyn CloneableSpawn>, method: &str, call_data: &[u8], runtime_code: &RuntimeCode) -> Result<Vec<u8>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Check execution proof, generated by `prove_execution` call.\n","sig":null,"attributes":[{"value":"/ Check execution proof, generated by `prove_execution` call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":16420,"byte_end":16483,"line_start":532,"line_end":532,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1794},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":17198,"byte_end":17235,"line_start":562,"line_end":562,"column_start":8,"column_end":45},"name":"execution_proof_check_on_trie_backend","qualname":"::execution_proof_check_on_trie_backend","value":"fn <H, N, Exec> (trie_backend: &TrieBackend<MemoryDB<H>, H>, overlay: &mut OverlayedChanges, exec: &Exec, spawn_handle: Box<dyn CloneableSpawn>, method: &str, call_data: &[u8], runtime_code: &RuntimeCode) -> Result<Vec<u8>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Check execution proof on proving backend, generated by `prove_execution` call.\n","sig":null,"attributes":[{"value":"/ Check execution proof on proving backend, generated by `prove_execution` call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":17108,"byte_end":17190,"line_start":561,"line_end":561,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":1798},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":18080,"byte_end":18090,"line_start":598,"line_end":598,"column_start":8,"column_end":18},"name":"prove_read","qualname":"::prove_read","value":"fn <B, H, I> (mut backend: B, keys: I) -> Result<StorageProof, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":18040,"byte_end":18072,"line_start":597,"line_end":597,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1803},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":18505,"byte_end":18521,"line_start":617,"line_end":617,"column_start":8,"column_end":24},"name":"prove_child_read","qualname":"::prove_child_read","value":"fn <B, H, I> (mut backend: B, child_info: &ChildInfo, keys: I) -> Result<StorageProof, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Generate child storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate child storage read proof.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":18459,"byte_end":18497,"line_start":616,"line_end":616,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1808},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":18994,"byte_end":19020,"line_start":635,"line_end":635,"column_start":8,"column_end":34},"name":"prove_read_on_trie_backend","qualname":"::prove_read_on_trie_backend","value":"fn <S, H, I> (trie_backend: &TrieBackend<S, H>, keys: I) -> Result<StorageProof, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof on pre-created trie backend.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof on pre-created trie backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":18926,"byte_end":18986,"line_start":634,"line_end":634,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1813},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":19568,"byte_end":19600,"line_start":656,"line_end":656,"column_start":8,"column_end":40},"name":"prove_child_read_on_trie_backend","qualname":"::prove_child_read_on_trie_backend","value":"fn <S, H, I> (trie_backend: &TrieBackend<S, H>, child_info: &ChildInfo, keys: I) -> Result<StorageProof, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof on pre-created trie backend.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof on pre-created trie backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":19500,"byte_end":19560,"line_start":655,"line_end":655,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1818},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":20192,"byte_end":20208,"line_start":678,"line_end":678,"column_start":8,"column_end":24},"name":"read_proof_check","qualname":"::read_proof_check","value":"fn <H, I> (root: H::Out, proof: StorageProof, keys: I) -> Result<HashMap<Vec<u8>, Option<Vec<u8>>>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Check storage read proof, generated by `prove_read` call.\n","sig":null,"attributes":[{"value":"/ Check storage read proof, generated by `prove_read` call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":20123,"byte_end":20184,"line_start":677,"line_end":677,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":1821},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":20774,"byte_end":20796,"line_start":699,"line_end":699,"column_start":8,"column_end":30},"name":"read_child_proof_check","qualname":"::read_child_proof_check","value":"fn <H, I> (root: H::Out, proof: StorageProof, child_info: &ChildInfo, keys: I) -> Result<HashMap<Vec<u8>, Option<Vec<u8>>>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Check child storage read proof, generated by `prove_child_read` call.\n","sig":null,"attributes":[{"value":"/ Check child storage read proof, generated by `prove_child_read` call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":20693,"byte_end":20766,"line_start":698,"line_end":698,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1824},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":21406,"byte_end":21441,"line_start":725,"line_end":725,"column_start":8,"column_end":43},"name":"read_proof_check_on_proving_backend","qualname":"::read_proof_check_on_proving_backend","value":"fn <H> (proving_backend: &TrieBackend<MemoryDB<H>, H>, key: &[u8]) -> Result<Option<Vec<u8>>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Check storage read proof on pre-created proving backend.\n","sig":null,"attributes":[{"value":"/ Check storage read proof on pre-created proving backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":21338,"byte_end":21398,"line_start":724,"line_end":724,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1827},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":21744,"byte_end":21785,"line_start":737,"line_end":737,"column_start":8,"column_end":49},"name":"read_child_proof_check_on_proving_backend","qualname":"::read_child_proof_check_on_proving_backend","value":"fn <H> (proving_backend: &TrieBackend<MemoryDB<H>, H>, child_info: &ChildInfo, key: &[u8]) -> Result<Option<Vec<u8>>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Check child storage read proof on pre-created proving backend.\n","sig":null,"attributes":[{"value":"/ Check child storage read proof on pre-created proving backend.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":21670,"byte_end":21736,"line_start":736,"line_end":736,"column_start":1,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45714,"byte_end":45717,"line_start":312,"line_end":312,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45917,"byte_end":45932,"line_start":321,"line_end":321,"column_start":71,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":46868,"byte_end":46886,"line_start":357,"line_end":357,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":47094,"byte_end":47112,"line_start":364,"line_end":364,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":49736,"byte_end":49747,"line_start":72,"line_end":72,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51399,"byte_end":51410,"line_start":136,"line_end":136,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51590,"byte_end":51601,"line_start":145,"line_end":145,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51783,"byte_end":51794,"line_start":155,"line_end":155,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":52122,"byte_end":52133,"line_start":166,"line_end":166,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":52508,"byte_end":52519,"line_start":178,"line_end":178,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":52792,"byte_end":52803,"line_start":190,"line_end":190,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101023,"byte_end":101033,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":102568,"byte_end":102589,"line_start":136,"line_end":136,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":104137,"byte_end":104162,"line_start":180,"line_end":180,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":109363,"byte_end":109382,"line_start":70,"line_end":70,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":109860,"byte_end":109879,"line_start":91,"line_end":91,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":111408,"byte_end":111419,"line_start":144,"line_end":144,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":111595,"byte_end":111606,"line_start":154,"line_end":154,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":126085,"byte_end":126109,"line_start":208,"line_end":208,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129983,"byte_end":130000,"line_start":321,"line_end":321,"column_start":55,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130521,"byte_end":130545,"line_start":343,"line_end":343,"column_start":21,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130904,"byte_end":130928,"line_start":359,"line_end":359,"column_start":34,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":143165,"byte_end":143174,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":143525,"byte_end":143534,"line_start":97,"line_end":97,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":143891,"byte_end":143900,"line_start":107,"line_end":107,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144198,"byte_end":144212,"line_start":117,"line_end":117,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144391,"byte_end":144405,"line_start":125,"line_end":125,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144597,"byte_end":144611,"line_start":133,"line_end":133,"column_start":49,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144650,"byte_end":144661,"line_start":135,"line_end":135,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144841,"byte_end":144852,"line_start":144,"line_end":144,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145022,"byte_end":145032,"line_start":152,"line_end":152,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145211,"byte_end":145221,"line_start":160,"line_end":160,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145421,"byte_end":145432,"line_start":168,"line_end":168,"column_start":49,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145482,"byte_end":145490,"line_start":170,"line_end":170,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":154828,"byte_end":154843,"line_start":54,"line_end":54,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":157746,"byte_end":157761,"line_start":166,"line_end":166,"column_start":66,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":158335,"byte_end":158350,"line_start":179,"line_end":179,"column_start":61,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":158828,"byte_end":158846,"line_start":197,"line_end":197,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":159023,"byte_end":159041,"line_start":203,"line_end":203,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/surface_iterator.rs","byte_start":161806,"byte_end":161821,"line_start":70,"line_end":70,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58265,"byte_end":58266,"line_start":107,"line_end":107,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60912,"byte_end":60937,"line_start":170,"line_end":170,"column_start":70,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61618,"byte_end":61623,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61884,"byte_end":61889,"line_start":207,"line_end":207,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169514,"byte_end":169515,"line_start":27,"line_end":27,"column_start":63,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":170180,"byte_end":170194,"line_start":46,"line_end":46,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":172000,"byte_end":172005,"line_start":52,"line_end":52,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":172298,"byte_end":172303,"line_start":61,"line_end":61,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":173340,"byte_end":173343,"line_start":95,"line_end":95,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":175040,"byte_end":175043,"line_start":158,"line_end":158,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":823},{"krate":0,"index":827},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":852},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":186774,"byte_end":186791,"line_start":582,"line_end":582,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":187007,"byte_end":187020,"line_start":591,"line_end":591,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":187727,"byte_end":187730,"line_start":618,"line_end":618,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199121,"byte_end":199138,"line_start":59,"line_end":59,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202342,"byte_end":202359,"line_start":165,"line_end":165,"column_start":64,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202612,"byte_end":202629,"line_start":173,"line_end":173,"column_start":58,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202955,"byte_end":202972,"line_start":184,"line_end":184,"column_start":56,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":203148,"byte_end":203165,"line_start":191,"line_end":191,"column_start":62,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":203333,"byte_end":203350,"line_start":200,"line_end":200,"column_start":49,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206322,"byte_end":206340,"line_start":45,"line_end":45,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208088,"byte_end":208106,"line_start":112,"line_end":112,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208323,"byte_end":208341,"line_start":119,"line_end":119,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208513,"byte_end":208531,"line_start":127,"line_end":127,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208643,"byte_end":208661,"line_start":131,"line_end":131,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208905,"byte_end":208923,"line_start":143,"line_end":143,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":213665,"byte_end":213683,"line_start":315,"line_end":315,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220344,"byte_end":220358,"line_start":111,"line_end":111,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221684,"byte_end":221707,"line_start":146,"line_end":146,"column_start":46,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221882,"byte_end":221905,"line_start":153,"line_end":153,"column_start":58,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222176,"byte_end":222190,"line_start":164,"line_end":164,"column_start":67,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222800,"byte_end":222814,"line_start":187,"line_end":187,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223145,"byte_end":223163,"line_start":199,"line_end":199,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223418,"byte_end":223434,"line_start":212,"line_end":212,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1176},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1202},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":252756,"byte_end":252778,"line_start":41,"line_end":41,"column_start":16,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255232,"byte_end":255246,"line_start":128,"line_end":128,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":256239,"byte_end":256259,"line_start":163,"line_end":163,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":256701,"byte_end":256715,"line_start":178,"line_end":178,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":256864,"byte_end":256878,"line_start":185,"line_end":185,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265761,"byte_end":265772,"line_start":36,"line_end":36,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266573,"byte_end":266584,"line_start":70,"line_end":70,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266753,"byte_end":266764,"line_start":76,"line_end":76,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275845,"byte_end":275863,"line_start":46,"line_end":46,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282486,"byte_end":282495,"line_start":274,"line_end":274,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282737,"byte_end":282746,"line_start":280,"line_end":280,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282958,"byte_end":282967,"line_start":290,"line_end":290,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":283880,"byte_end":283889,"line_start":324,"line_end":324,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284571,"byte_end":284574,"line_start":344,"line_end":344,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284869,"byte_end":284885,"line_start":353,"line_end":353,"column_start":43,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":285105,"byte_end":285113,"line_start":361,"line_end":361,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":285360,"byte_end":285378,"line_start":370,"line_end":370,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":285645,"byte_end":285663,"line_start":377,"line_end":377,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":286416,"byte_end":286434,"line_start":410,"line_end":410,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291255,"byte_end":291272,"line_start":78,"line_end":78,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291680,"byte_end":291689,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292526,"byte_end":292543,"line_start":115,"line_end":115,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294294,"byte_end":294295,"line_start":43,"line_end":43,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294743,"byte_end":294764,"line_start":59,"line_end":59,"column_start":57,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294917,"byte_end":294938,"line_start":65,"line_end":65,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":295260,"byte_end":295281,"line_start":74,"line_end":74,"column_start":59,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":298109,"byte_end":298130,"line_start":178,"line_end":178,"column_start":78,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4884,"byte_end":4901,"line_start":135,"line_end":135,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":5261,"byte_end":5278,"line_start":146,"line_end":146,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":7347,"byte_end":7359,"line_start":204,"line_end":204,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":7547,"byte_end":7559,"line_start":214,"line_end":214,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1771},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":1141,"byte_end":1148,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":27}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":37418,"byte_end":37423,"line_start":33,"line_end":33,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45714,"byte_end":45717,"line_start":312,"line_end":312,"column_start":22,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":45917,"byte_end":45932,"line_start":321,"line_end":321,"column_start":71,"column_end":86},"kind":{"Impl":{"id":1}},"from":{"krate":141,"index":240},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":46868,"byte_end":46886,"line_start":357,"line_end":357,"column_start":2,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":133},"to":{"krate":24,"index":1737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/backend.rs","byte_start":47094,"byte_end":47112,"line_start":364,"line_end":364,"column_start":36,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":49736,"byte_end":49747,"line_start":72,"line_end":72,"column_start":17,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51399,"byte_end":51410,"line_start":136,"line_end":136,"column_start":27,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51590,"byte_end":51601,"line_start":145,"line_end":145,"column_start":29,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":51783,"byte_end":51794,"line_start":155,"line_end":155,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":52122,"byte_end":52133,"line_start":166,"line_end":166,"column_start":35,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":52508,"byte_end":52519,"line_start":178,"line_end":178,"column_start":62,"column_end":73},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/in_memory_backend.rs","byte_start":52792,"byte_end":52803,"line_start":190,"line_end":190,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":101023,"byte_end":101033,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":102568,"byte_end":102589,"line_start":136,"line_end":136,"column_start":9,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_cache.rs","byte_start":104137,"byte_end":104162,"line_start":180,"line_end":180,"column_start":9,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":109363,"byte_end":109382,"line_start":70,"line_end":70,"column_start":27,"column_end":46},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":109860,"byte_end":109879,"line_start":91,"line_end":91,"column_start":40,"column_end":59},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":111408,"byte_end":111419,"line_start":144,"line_end":144,"column_start":27,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/build_iterator.rs","byte_start":111595,"byte_end":111606,"line_start":154,"line_end":154,"column_start":40,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1911},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":126085,"byte_end":126109,"line_start":208,"line_end":208,"column_start":21,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":129983,"byte_end":130000,"line_start":321,"line_end":321,"column_start":55,"column_end":72},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":421},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130521,"byte_end":130545,"line_start":343,"line_end":343,"column_start":21,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/changes_iterator.rs","byte_start":130904,"byte_end":130928,"line_start":359,"line_end":359,"column_start":34,"column_end":58},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":433},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":143165,"byte_end":143174,"line_start":86,"line_end":86,"column_start":27,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":143525,"byte_end":143534,"line_start":97,"line_end":97,"column_start":64,"column_end":73},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1996},"to":{"krate":2,"index":1804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":143891,"byte_end":143900,"line_start":107,"line_end":107,"column_start":54,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1996},"to":{"krate":2,"index":1804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144198,"byte_end":144212,"line_start":117,"line_end":117,"column_start":27,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144391,"byte_end":144405,"line_start":125,"line_end":125,"column_start":38,"column_end":52},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1919},"to":{"krate":18,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144597,"byte_end":144611,"line_start":133,"line_end":133,"column_start":49,"column_end":63},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1919},"to":{"krate":18,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144650,"byte_end":144661,"line_start":135,"line_end":135,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":144841,"byte_end":144852,"line_start":144,"line_end":144,"column_start":38,"column_end":49},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1940},"to":{"krate":18,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145022,"byte_end":145032,"line_start":152,"line_end":152,"column_start":27,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145211,"byte_end":145221,"line_start":160,"line_end":160,"column_start":38,"column_end":48},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1961},"to":{"krate":18,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145421,"byte_end":145432,"line_start":168,"line_end":168,"column_start":49,"column_end":60},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1940},"to":{"krate":18,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/input.rs","byte_start":145482,"byte_end":145490,"line_start":170,"line_end":170,"column_start":38,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2027},"to":{"krate":18,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":154828,"byte_end":154843,"line_start":54,"line_end":54,"column_start":38,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":157746,"byte_end":157761,"line_start":166,"line_end":166,"column_start":66,"column_end":81},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":556},"to":{"krate":0,"index":685}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":158335,"byte_end":158350,"line_start":179,"line_end":179,"column_start":61,"column_end":76},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":556},"to":{"krate":0,"index":690}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":158828,"byte_end":158846,"line_start":197,"line_end":197,"column_start":42,"column_end":60},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/storage.rs","byte_start":159023,"byte_end":159041,"line_start":203,"line_end":203,"column_start":47,"column_end":65},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":561},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/surface_iterator.rs","byte_start":161806,"byte_end":161821,"line_start":70,"line_end":70,"column_start":44,"column_end":59},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57825,"byte_end":57829,"line_start":93,"line_end":93,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57832,"byte_end":57836,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57860,"byte_end":57867,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":5983},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57871,"byte_end":57876,"line_start":95,"line_end":95,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57880,"byte_end":57884,"line_start":96,"line_end":96,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":1807},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57892,"byte_end":57899,"line_start":96,"line_end":96,"column_start":14,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1810},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57907,"byte_end":57910,"line_start":96,"line_end":96,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":76,"index":305},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57913,"byte_end":57917,"line_start":96,"line_end":96,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":76,"index":295},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57921,"byte_end":57930,"line_start":97,"line_end":97,"column_start":2,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":1619},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57933,"byte_end":57936,"line_start":97,"line_end":97,"column_start":14,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":1645},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57951,"byte_end":57955,"line_start":98,"line_end":98,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":6169},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":57969,"byte_end":57972,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":1946},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58006,"byte_end":58009,"line_start":99,"line_end":99,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1951},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58042,"byte_end":58045,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":1956},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58079,"byte_end":58082,"line_start":100,"line_end":100,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1961},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58115,"byte_end":58118,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":1967},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58151,"byte_end":58160,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1979},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58182,"byte_end":58192,"line_start":103,"line_end":103,"column_start":14,"column_end":24},"kind":"SuperTrait","from":{"krate":76,"index":365},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58207,"byte_end":58217,"line_start":103,"line_end":103,"column_start":39,"column_end":49},"kind":"SuperTrait","from":{"krate":76,"index":363},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58221,"byte_end":58227,"line_start":104,"line_end":104,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":18,"index":119},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58230,"byte_end":58236,"line_start":104,"line_end":104,"column_start":11,"column_end":17},"kind":"SuperTrait","from":{"krate":18,"index":107},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":58265,"byte_end":58266,"line_start":107,"line_end":107,"column_start":25,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":677},"to":{"krate":0,"index":675}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59574,"byte_end":59578,"line_start":144,"line_end":144,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":685}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":59581,"byte_end":59585,"line_start":144,"line_end":144,"column_start":64,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":685}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60116,"byte_end":60128,"line_start":153,"line_end":153,"column_start":52,"column_end":64},"kind":"SuperTrait","from":{"krate":0,"index":685},"to":{"krate":0,"index":690}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":60912,"byte_end":60937,"line_start":170,"line_end":170,"column_start":70,"column_end":95},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":696},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61618,"byte_end":61623,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/changes_trie/mod.rs","byte_start":61884,"byte_end":61889,"line_start":207,"line_end":207,"column_start":38,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":678},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169420,"byte_end":169425,"line_start":25,"line_end":25,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169433,"byte_end":169440,"line_start":25,"line_end":25,"column_start":46,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":5983},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169443,"byte_end":169447,"line_start":25,"line_end":25,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":169514,"byte_end":169515,"line_start":27,"line_end":27,"column_start":63,"column_end":64},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":739},"to":{"krate":0,"index":737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/error.rs","byte_start":170180,"byte_end":170194,"line_start":46,"line_end":46,"column_start":23,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2074},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":172000,"byte_end":172005,"line_start":52,"line_end":52,"column_start":57,"column_end":62},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2093},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":172298,"byte_end":172303,"line_start":61,"line_end":61,"column_start":57,"column_end":62},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2093},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":173340,"byte_end":173343,"line_start":95,"line_end":95,"column_start":19,"column_end":22},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":175040,"byte_end":175043,"line_start":158,"line_end":158,"column_start":37,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":786},"to":{"krate":82,"index":47}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":186774,"byte_end":186791,"line_start":582,"line_end":582,"column_start":17,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":858},"to":{"krate":18,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":187007,"byte_end":187020,"line_start":591,"line_end":591,"column_start":10,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/ext.rs","byte_start":187727,"byte_end":187730,"line_start":618,"line_end":618,"column_start":56,"column_end":59},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":786},"to":{"krate":82,"index":26}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":199121,"byte_end":199138,"line_start":59,"line_end":59,"column_start":44,"column_end":61},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202342,"byte_end":202359,"line_start":165,"line_end":165,"column_start":64,"column_end":81},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202612,"byte_end":202629,"line_start":173,"line_end":173,"column_start":58,"column_end":75},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":202955,"byte_end":202972,"line_start":184,"line_end":184,"column_start":56,"column_end":73},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":203148,"byte_end":203165,"line_start":191,"line_end":191,"column_start":62,"column_end":79},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/testing.rs","byte_start":203333,"byte_end":203350,"line_start":200,"line_end":200,"column_start":49,"column_end":66},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":914},"to":{"krate":82,"index":26}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":206322,"byte_end":206340,"line_start":45,"line_end":45,"column_start":6,"column_end":24},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208088,"byte_end":208106,"line_start":112,"line_end":112,"column_start":20,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2115},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208323,"byte_end":208341,"line_start":119,"line_end":119,"column_start":51,"column_end":69},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2115},"to":{"krate":2,"index":4676}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208513,"byte_end":208531,"line_start":127,"line_end":127,"column_start":18,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2115},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208643,"byte_end":208661,"line_start":131,"line_end":131,"column_start":51,"column_end":69},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2115},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":208905,"byte_end":208923,"line_start":143,"line_end":143,"column_start":24,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2115},"to":{"krate":82,"index":47}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/basic.rs","byte_start":213665,"byte_end":213683,"line_start":315,"line_end":315,"column_start":43,"column_end":61},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2115},"to":{"krate":82,"index":26}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":220344,"byte_end":220358,"line_start":111,"line_end":111,"column_start":46,"column_end":60},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221684,"byte_end":221707,"line_start":146,"line_end":146,"column_start":46,"column_end":69},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":221882,"byte_end":221905,"line_start":153,"line_end":153,"column_start":58,"column_end":81},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222176,"byte_end":222190,"line_start":164,"line_end":164,"column_start":67,"column_end":81},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":222800,"byte_end":222814,"line_start":187,"line_end":187,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223145,"byte_end":223163,"line_start":199,"line_end":199,"column_start":6,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/overlayed_changes.rs","byte_start":223418,"byte_end":223434,"line_start":212,"line_end":212,"column_start":6,"column_end":22},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":252756,"byte_end":252778,"line_start":41,"line_end":41,"column_start":16,"column_end":38},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":255232,"byte_end":255246,"line_start":128,"line_end":128,"column_start":57,"column_end":71},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":256239,"byte_end":256259,"line_start":163,"line_end":163,"column_start":6,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1281},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":256701,"byte_end":256715,"line_start":178,"line_end":178,"column_start":6,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/proving_backend.rs","byte_start":256864,"byte_end":256878,"line_start":185,"line_end":185,"column_start":31,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1275},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":265761,"byte_end":265772,"line_start":36,"line_end":36,"column_start":43,"column_end":54},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266573,"byte_end":266584,"line_start":70,"line_end":70,"column_start":63,"column_end":74},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend.rs","byte_start":266753,"byte_end":266764,"line_start":76,"line_end":76,"column_start":58,"column_end":69},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1367},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275520,"byte_end":275524,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1449}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275527,"byte_end":275531,"line_start":34,"line_end":34,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1449}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":275845,"byte_end":275863,"line_start":46,"line_end":46,"column_start":43,"column_end":61},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282486,"byte_end":282495,"line_start":274,"line_end":274,"column_start":6,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1492},"to":{"krate":17,"index":65}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282737,"byte_end":282746,"line_start":280,"line_end":280,"column_start":47,"column_end":56},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":282958,"byte_end":282967,"line_start":290,"line_end":290,"column_start":6,"column_end":15},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1492},"to":{"krate":17,"index":40}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":283880,"byte_end":283889,"line_start":324,"line_end":324,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1492},"to":{"krate":17,"index":48}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284234,"byte_end":284238,"line_start":336,"line_end":336,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284241,"byte_end":284245,"line_start":336,"line_end":336,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284571,"byte_end":284574,"line_start":344,"line_end":344,"column_start":43,"column_end":46},"kind":{"Impl":{"id":86}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":284869,"byte_end":284885,"line_start":353,"line_end":353,"column_start":43,"column_end":59},"kind":{"Impl":{"id":87}},"from":{"krate":141,"index":236},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":285105,"byte_end":285113,"line_start":361,"line_end":361,"column_start":43,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":141,"index":238},"to":{"krate":0,"index":1526}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":285360,"byte_end":285378,"line_start":370,"line_end":370,"column_start":6,"column_end":24},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1452},"to":{"krate":17,"index":65}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":285645,"byte_end":285663,"line_start":377,"line_end":377,"column_start":6,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1452},"to":{"krate":17,"index":40}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/trie_backend_essence.rs","byte_start":286416,"byte_end":286434,"line_start":410,"line_end":410,"column_start":6,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1452},"to":{"krate":17,"index":48}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291255,"byte_end":291272,"line_start":78,"line_end":78,"column_start":6,"column_end":23},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":291680,"byte_end":291689,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/stats.rs","byte_start":292526,"byte_end":292543,"line_start":115,"line_end":115,"column_start":6,"column_end":23},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294294,"byte_end":294295,"line_start":43,"line_end":43,"column_start":55,"column_end":56},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1598},"to":{"krate":0,"index":1591}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294743,"byte_end":294764,"line_start":59,"line_end":59,"column_start":57,"column_end":78},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":294917,"byte_end":294938,"line_start":65,"line_end":65,"column_start":41,"column_end":62},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":295260,"byte_end":295281,"line_start":74,"line_end":74,"column_start":59,"column_end":80},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2184},"to":{"krate":82,"index":47}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/read_only.rs","byte_start":298109,"byte_end":298130,"line_start":178,"line_end":178,"column_start":78,"column_end":99},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2184},"to":{"krate":82,"index":26}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":4884,"byte_end":4901,"line_start":135,"line_end":135,"column_start":47,"column_end":64},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2195},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":5261,"byte_end":5278,"line_start":146,"line_end":146,"column_start":6,"column_end":23},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":7347,"byte_end":7359,"line_start":204,"line_end":204,"column_start":34,"column_end":46},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/state-machine/src/lib.rs","byte_start":7547,"byte_end":7559,"line_start":214,"line_end":214,"column_start":25,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1731},"to":{"krate":4294967295,"index":4294967295}}]}