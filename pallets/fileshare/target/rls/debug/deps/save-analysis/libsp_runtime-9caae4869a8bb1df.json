{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_runtime","--edition=2018","/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"log\"","--cfg","feature=\"rand\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=9caae4869a8bb1df","-C","extra-filename=-9caae4869a8bb1df","--out-dir","/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","--extern","hash256_std_hasher=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libhash256_std_hasher-ee7a16fe8af561fb.rmeta","--extern","impl_trait_for_tuples=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libimpl_trait_for_tuples-d3ed7ab712078c16.so","--extern","log=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/liblog-0cfc9f3120ac6e4a.rmeta","--extern","codec=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparity_scale_codec-f846fd866e90eb5c.rmeta","--extern","parity_util_mem=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparity_util_mem-9fdf3a635a70401d.rmeta","--extern","paste=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libpaste-201b3031ca389bab.rmeta","--extern","rand=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/librand-71f2f10ee6923e63.rmeta","--extern","serde=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libserde-8e3179877dc95843.rmeta","--extern","sp_application_crypto=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_application_crypto-53016986c7c4e6ec.rmeta","--extern","sp_arithmetic=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_arithmetic-9e003245508a5a06.rmeta","--extern","sp_core=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_core-9055fb2270914a2d.rmeta","--extern","sp_inherents=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_inherents-b01de02d34892753.rmeta","--extern","sp_io=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_io-09bc09859104f0c1.rmeta","--extern","sp_std=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_std-31df6ce51c93d927.rmeta","--cap-lints","allow","-L","native=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/build/clear_on_drop-a23791235c119df6/out","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_runtime-9caae4869a8bb1df.rmeta"},"prelude":{"crate_id":{"name":"sp_runtime","disambiguator":[17196542902034591833,17105029301237206912]},"crate_root":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src","external_crates":[{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":15,"id":{"name":"parity_scale_codec","disambiguator":[15638882894901664300,15938776292720705477]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":16,"id":{"name":"parity_scale_codec_derive","disambiguator":[379814399442547304,17581532101419470896]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":17,"id":{"name":"arrayvec","disambiguator":[1332372460335241694,11021197825096612758]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":18,"id":{"name":"byte_slice_cast","disambiguator":[3640415380441394815,6311138287404375443]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":19,"id":{"name":"serde","disambiguator":[13481768320746797087,7282555180186658229]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":20,"id":{"name":"serde_derive","disambiguator":[14214070500933581380,3624999802238555216]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":21,"id":{"name":"sp_std","disambiguator":[11276958021017479825,16325732417868216137]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":22,"id":{"name":"paste","disambiguator":[11050493384304019062,12843146093891921070]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":23,"id":{"name":"proc_macro_hack","disambiguator":[11648198905521943211,17157862379242527653]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":24,"id":{"name":"paste_impl","disambiguator":[10824166642002270382,7200536081022686254]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","num":25,"id":{"name":"sp_application_crypto","disambiguator":[9476118913656431312,14367123982054691573]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":26,"id":{"name":"sp_core","disambiguator":[17683045494970980731,13559405023477717555]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":27,"id":{"name":"sp_debug_derive","disambiguator":[13522996333100151204,9314162219563761913]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":28,"id":{"name":"impl_serde","disambiguator":[8980924363609643778,8190912899161023955]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":29,"id":{"name":"blake2_rfc","disambiguator":[13425746585612006076,3893349097137814390]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":30,"id":{"name":"arrayvec","disambiguator":[8980556773631144340,1530384929258256254]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":31,"id":{"name":"nodrop","disambiguator":[15580487097472407489,16164216452101372544]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":32,"id":{"name":"constant_time_eq","disambiguator":[7513921960350961442,6826608885349661575]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":33,"id":{"name":"sha2","disambiguator":[2087999941899417202,8652755061219861371]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":34,"id":{"name":"block_buffer","disambiguator":[13746670423446533395,10291558624333589947]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":35,"id":{"name":"byteorder","disambiguator":[8554857055557278435,8958170879440380952]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":36,"id":{"name":"block_padding","disambiguator":[15921479850100810545,9304032769572156234]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":37,"id":{"name":"byte_tools","disambiguator":[16878705203460379785,8432621841611626380]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":38,"id":{"name":"generic_array","disambiguator":[961146259118279585,2903465428615636575]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":39,"id":{"name":"typenum","disambiguator":[10535840393202809930,23112338360262232]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":40,"id":{"name":"fake_simd","disambiguator":[10163378265795300682,3429049470422498345]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":41,"id":{"name":"opaque_debug","disambiguator":[542094102041843082,10502796311115957597]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":42,"id":{"name":"digest","disambiguator":[6126133259670863194,4625233068246866504]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":43,"id":{"name":"tiny_keccak","disambiguator":[16657255994201729273,15749590166371444127]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":44,"id":{"name":"crunchy","disambiguator":[8492468043868098796,9147562601699587076]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":45,"id":{"name":"twox_hash","disambiguator":[14103234801566248918,11854203410743868499]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","num":46,"id":{"name":"rand","disambiguator":[14852911624231536199,4329007306221210672]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":47,"id":{"name":"rand_core","disambiguator":[8541689899428407495,4972805062826425925]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":48,"id":{"name":"getrandom","disambiguator":[13618700189715949314,16365477718892601647]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":49,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":50,"id":{"name":"libc","disambiguator":[15850054303935087509,2172107276946414463]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":51,"id":{"name":"rand_chacha","disambiguator":[5821611541543872135,256988615729141104]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":52,"id":{"name":"ppv_lite86","disambiguator":[2483357076725709498,12969028423603202931]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":53,"id":{"name":"rand_pcg","disambiguator":[1329119161985853472,9189108109752656620]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":54,"id":{"name":"parking_lot","disambiguator":[4077664270008470479,11966793794786088639]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":55,"id":{"name":"lock_api","disambiguator":[2863804777762583869,14799884867851676310]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":56,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":57,"id":{"name":"parking_lot_core","disambiguator":[10023082735607659909,12352998360333487442]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":58,"id":{"name":"smallvec","disambiguator":[4204636050770628742,12614792987383810951]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":59,"id":{"name":"regex","disambiguator":[14198027042281804208,86081918665039131]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":60,"id":{"name":"aho_corasick","disambiguator":[6163840134106157642,11678023651240554382]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":61,"id":{"name":"memchr","disambiguator":[1600158827687491313,9258850746937660075]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":62,"id":{"name":"regex_syntax","disambiguator":[6585461900833040906,12117303110178991079]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":63,"id":{"name":"thread_local","disambiguator":[6963393236790488947,14544403037844186749]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":64,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":65,"id":{"name":"base58","disambiguator":[16777386067770725910,11698301221143548428]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":66,"id":{"name":"zeroize","disambiguator":[8419538233743450039,4463467074577268889]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":67,"id":{"name":"zeroize_derive","disambiguator":[2444816796196962847,17316197202642986580]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":68,"id":{"name":"sp_runtime_interface","disambiguator":[682286166039121589,14525474089550891235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":69,"id":{"name":"sp_wasm_interface","disambiguator":[8675793106772160261,13785408035542529938]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","num":70,"id":{"name":"impl_trait_for_tuples","disambiguator":[11683877044574956040,7740304785833687617]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":71,"id":{"name":"wasmi","disambiguator":[2416228699110756094,1766770583142414386]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":72,"id":{"name":"memory_units","disambiguator":[14678550925423856477,13054517670253120849]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":73,"id":{"name":"parity_wasm","disambiguator":[1554235133951985503,17351528177382477681]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":74,"id":{"name":"wasmi_validation","disambiguator":[16639948640573147516,6276059922634634811]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":75,"id":{"name":"num_rational","disambiguator":[6975831310803048684,9911959382833982500]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":76,"id":{"name":"num_bigint","disambiguator":[12568277182492191496,17615354144430726922]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":77,"id":{"name":"num_integer","disambiguator":[6615314100295200538,6263506198981215227]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":78,"id":{"name":"num_traits","disambiguator":[17866579788280904889,8893385662677143502]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":79,"id":{"name":"sp_tracing","disambiguator":[11438562976580646038,3002446573349231072]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":80,"id":{"name":"tracing","disambiguator":[13479947174673550820,4133118777693013263]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":81,"id":{"name":"tracing_core","disambiguator":[12837523844224698924,229843443816219795]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":82,"id":{"name":"tracing_attributes","disambiguator":[2263492286649080348,13111413153421272784]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":83,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[10297837370306352563,17721521789272836432]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":84,"id":{"name":"sp_externalities","disambiguator":[13735059725287377343,7074722714493672266]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":85,"id":{"name":"sp_storage","disambiguator":[8388726998902642419,5566405698735839699]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":86,"id":{"name":"ref_cast","disambiguator":[14927837505420523305,6271955165879955941]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":87,"id":{"name":"ref_cast_impl","disambiguator":[4388911118607149955,14232018770742587068]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":88,"id":{"name":"impl_serde","disambiguator":[4240565461243128030,16964821940194849107]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":89,"id":{"name":"environmental","disambiguator":[4327085142237264898,15570963526468317845]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":90,"id":{"name":"primitive_types","disambiguator":[2776970764958629400,18334998628678477911]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":91,"id":{"name":"fixed_hash","disambiguator":[14470681025450579457,6662852255323844967]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":92,"id":{"name":"static_assertions","disambiguator":[2878701793821026304,16986476632016046768]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":93,"id":{"name":"rustc_hex","disambiguator":[10434719161438519964,14346445293922435357]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":94,"id":{"name":"uint","disambiguator":[16452983131080529725,17838387769575104159]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":95,"id":{"name":"impl_codec","disambiguator":[10299275643052968783,3017370659095368483]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":96,"id":{"name":"substrate_bip39","disambiguator":[16026320640443918052,13713051357735189700]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":97,"id":{"name":"hmac","disambiguator":[11460341029875594496,1906197491684850741]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":98,"id":{"name":"crypto_mac","disambiguator":[8320459484509458636,4799276508247752895]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":99,"id":{"name":"subtle","disambiguator":[8535025202508457436,17708549248523872086]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":100,"id":{"name":"pbkdf2","disambiguator":[4851686168477502927,14028351777984925782]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":101,"id":{"name":"schnorrkel","disambiguator":[16900468384019694665,10044191511765835896]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":102,"id":{"name":"arrayref","disambiguator":[16829708543304003037,4144275909003046035]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":103,"id":{"name":"curve25519_dalek","disambiguator":[16644072626332759431,10277902055030964482]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":104,"id":{"name":"subtle","disambiguator":[10234490685617874908,7684466441341660066]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":105,"id":{"name":"merlin","disambiguator":[7121650087445607272,2582201859466345986]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":106,"id":{"name":"keccak","disambiguator":[11472536135153304124,6639515317597576426]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":107,"id":{"name":"bip39","disambiguator":[17568215238128443509,8359727043341043963]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":108,"id":{"name":"failure","disambiguator":[16123704538531388289,16892100019265791353]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":109,"id":{"name":"failure_derive","disambiguator":[3132760448282680033,18074464896337337867]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":110,"id":{"name":"backtrace","disambiguator":[18134607837615136743,9446271803075368385]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":111,"id":{"name":"rustc_demangle","disambiguator":[5146049380465956145,771809060488072883]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":112,"id":{"name":"addr2line","disambiguator":[4367394800532784875,14916486106589456017]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":113,"id":{"name":"gimli","disambiguator":[2365300210788396002,3502160938625290209]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":114,"id":{"name":"object","disambiguator":[14105361202928525417,13644467560032816245]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":115,"id":{"name":"rustc_hash","disambiguator":[642462796696129389,1517420890865137522]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":116,"id":{"name":"once_cell","disambiguator":[9949018888993973705,561490500926270181]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":117,"id":{"name":"unicode_normalization","disambiguator":[5970646019162551857,17803897583820378264]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":118,"id":{"name":"secp256k1","disambiguator":[8656482482167472749,13898755881770913524]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":119,"id":{"name":"hmac_drbg","disambiguator":[1089521263031708807,8798061245638132398]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":120,"id":{"name":"hash_db","disambiguator":[9792644969574235955,776104945287127595]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","num":121,"id":{"name":"hash256_std_hasher","disambiguator":[5964121242482212794,15478076518551278946]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":122,"id":{"name":"futures","disambiguator":[6054638481473170312,13203952068894848752]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":123,"id":{"name":"futures_core","disambiguator":[11059587244940335782,9444176274970569630]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":124,"id":{"name":"futures_util","disambiguator":[2297583133361674607,515887674582286629]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":125,"id":{"name":"pin_utils","disambiguator":[3395662280469368698,5400338344872609158]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":126,"id":{"name":"futures_task","disambiguator":[3375057385569108956,3660099607051496066]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":127,"id":{"name":"futures_sink","disambiguator":[11970731802322653413,20414178876719527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":128,"id":{"name":"pin_project","disambiguator":[8927595869626226213,3154285897060979768]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":129,"id":{"name":"pin_project_internal","disambiguator":[8120037564058734458,5789199392772687002]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":130,"id":{"name":"futures_channel","disambiguator":[13337516612303749283,16221296507189771847]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":131,"id":{"name":"slab","disambiguator":[4729543071339994363,11740316045407999008]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":132,"id":{"name":"futures_io","disambiguator":[14784988759255588471,7048209535732240470]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":133,"id":{"name":"futures_macro","disambiguator":[13580139449298337526,18153847132449885543]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":134,"id":{"name":"proc_macro_nested","disambiguator":[325458717225558210,1907731413471412174]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":135,"id":{"name":"futures_executor","disambiguator":[393111632237910805,16437123074104340741]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":136,"id":{"name":"num_cpus","disambiguator":[3634483020136970562,12375898465086858394]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","num":137,"id":{"name":"log","disambiguator":[9335353625162574946,15944831640773690670]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","num":138,"id":{"name":"parity_util_mem","disambiguator":[3673319352374838710,9109263036345257279]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":139,"id":{"name":"parity_util_mem_derive","disambiguator":[16094718766684562609,9112552796339687964]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":140,"id":{"name":"derive_more","disambiguator":[13664702256915482174,18424806257437289619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":141,"id":{"name":"hex","disambiguator":[18431432733982247784,9665997700775139809]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":142,"id":{"name":"ed25519_dalek","disambiguator":[6077726820243101941,623554713352160653]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","num":143,"id":{"name":"clear_on_drop","disambiguator":[17664436509209251898,11479650557223418245]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":144,"id":{"name":"sp_io","disambiguator":[17240266865883701302,11091636102929359783]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":145,"id":{"name":"sp_trie","disambiguator":[10248385436001548364,13201773522252176679]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":146,"id":{"name":"trie_db","disambiguator":[14058592916532296697,15101355858841735982]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":147,"id":{"name":"hashbrown","disambiguator":[10607846963804169666,8224092687569940531]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":148,"id":{"name":"ahash","disambiguator":[7836108867056887213,9815184329433061515]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":149,"id":{"name":"const_random","disambiguator":[4215802248038723435,8585138714700839987]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":150,"id":{"name":"const_random_macro","disambiguator":[17458909312445488312,12242545549692467389]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":151,"id":{"name":"trie_root","disambiguator":[14527925958066830872,5108783250952835176]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":152,"id":{"name":"memory_db","disambiguator":[8751240236175815197,15856563000382176854]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":153,"id":{"name":"sp_state_machine","disambiguator":[698521374749418897,10707581595686833401]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","num":154,"id":{"name":"sp_panic_handler","disambiguator":[9035826821212920039,325693535763843033]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","num":155,"id":{"name":"sp_arithmetic","disambiguator":[8176318265880389008,7753099555937938416]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","num":156,"id":{"name":"integer_sqrt","disambiguator":[9275225289175460513,11772712138008559603]}}],"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":686,"byte_end":25157,"line_start":18,"line_end":858,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":939,"byte_end":944,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"alias_span":null,"name":"codec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":993,"byte_end":998,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1023,"byte_end":1029,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1055,"byte_end":1060,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"alias_span":null,"name":"paste","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1086,"byte_end":1107,"line_start":39,"line_end":39,"column_start":9,"column_end":30},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1111,"byte_end":1121,"line_start":39,"line_end":39,"column_start":34,"column_end":44},"name":"app_crypto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":272},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1175,"byte_end":1182,"line_start":42,"line_end":42,"column_start":28,"column_end":35},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":258},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1184,"byte_end":1196,"line_start":42,"line_end":42,"column_start":37,"column_end":49},"alias_span":null,"name":"StorageChild","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1429},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31354,"byte_end":31372,"line_start":31,"line_end":31,"column_start":37,"column_end":55},"alias_span":null,"name":"UncheckedExtrinsic","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31374,"byte_end":31387,"line_start":31,"line_end":31,"column_start":57,"column_end":70},"alias_span":null,"name":"SignedPayload","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1466},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31410,"byte_end":31413,"line_start":32,"line_end":32,"column_start":21,"column_end":24},"alias_span":null,"name":"Era","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31415,"byte_end":31420,"line_start":32,"line_end":32,"column_start":26,"column_end":31},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31456,"byte_end":31472,"line_start":33,"line_end":33,"column_start":34,"column_end":50},"alias_span":null,"name":"CheckedExtrinsic","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1575},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31496,"byte_end":31502,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1738},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31526,"byte_end":31531,"line_start":35,"line_end":35,"column_start":23,"column_end":28},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1842},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31533,"byte_end":31544,"line_start":35,"line_end":35,"column_start":30,"column_end":41},"alias_span":null,"name":"SignedBlock","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31546,"byte_end":31553,"line_start":35,"line_end":35,"column_start":43,"column_end":50},"alias_span":null,"name":"BlockId","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":1928},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31581,"byte_end":31587,"line_start":37,"line_end":37,"column_start":2,"column_end":8},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2020},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31589,"byte_end":31599,"line_start":37,"line_end":37,"column_start":10,"column_end":20},"alias_span":null,"name":"DigestItem","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2091},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31601,"byte_end":31614,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"alias_span":null,"name":"DigestItemRef","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2168},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31616,"byte_end":31634,"line_start":37,"line_end":37,"column_start":37,"column_end":55},"alias_span":null,"name":"OpaqueDigestItemId","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":2063},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31636,"byte_end":31653,"line_start":37,"line_end":37,"column_start":57,"column_end":74},"alias_span":null,"name":"ChangesTrieSignal","value":"","parent":{"krate":0,"index":44}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/mod.rs","byte_start":80323,"byte_end":80324,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":444}},{"kind":"Use","ref_id":{"krate":90,"index":1722},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101514,"byte_end":101518,"line_start":29,"line_end":29,"column_start":19,"column_end":23},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":547}},{"kind":"Use","ref_id":{"krate":26,"index":995},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101520,"byte_end":101527,"line_start":29,"line_end":29,"column_start":25,"column_end":32},"alias_span":null,"name":"sr25519","value":"","parent":{"krate":0,"index":547}},{"kind":"Use","ref_id":{"krate":155,"index":124},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113184,"byte_end":113196,"line_start":37,"line_end":37,"column_start":2,"column_end":14},"alias_span":null,"name":"AtLeast32Bit","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":155,"index":130},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113198,"byte_end":113217,"line_start":37,"line_end":37,"column_start":16,"column_end":35},"alias_span":null,"name":"UniqueSaturatedInto","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":155,"index":127},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113219,"byte_end":113238,"line_start":37,"line_end":37,"column_start":37,"column_end":56},"alias_span":null,"name":"UniqueSaturatedFrom","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":155,"index":143},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113240,"byte_end":113250,"line_start":37,"line_end":37,"column_start":58,"column_end":68},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":155,"index":155},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113252,"byte_end":113271,"line_start":37,"line_end":37,"column_start":70,"column_end":89},"alias_span":null,"name":"SaturatedConversion","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":295},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113274,"byte_end":113278,"line_start":38,"line_end":38,"column_start":2,"column_end":6},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":305},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113280,"byte_end":113283,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":87},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113285,"byte_end":113292,"line_start":38,"line_end":38,"column_start":13,"column_end":20},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":360},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113294,"byte_end":113304,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":363},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113306,"byte_end":113316,"line_start":38,"line_end":38,"column_start":34,"column_end":44},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":365},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113318,"byte_end":113328,"line_start":38,"line_end":38,"column_start":46,"column_end":56},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":367},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113330,"byte_end":113340,"line_start":38,"line_end":38,"column_start":58,"column_end":68},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":374},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113343,"byte_end":113353,"line_start":39,"line_end":39,"column_start":2,"column_end":12},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":78,"index":377},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113355,"byte_end":113365,"line_start":39,"line_end":39,"column_start":14,"column_end":24},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":733}},{"kind":"Use","ref_id":{"krate":156,"index":4},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113367,"byte_end":113384,"line_start":39,"line_end":39,"column_start":26,"column_end":43},"alias_span":null,"name":"IntegerSquareRoot","value":"","parent":{"krate":0,"index":733}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1221,"byte_end":1222,"line_start":44,"line_end":44,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2020},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1671,"byte_end":1681,"line_start":63,"line_end":63,"column_start":19,"column_end":29},"alias_span":null,"name":"DigestItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1928},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1683,"byte_end":1689,"line_start":63,"line_end":63,"column_start":31,"column_end":37},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":1923},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1772,"byte_end":1778,"line_start":66,"line_end":66,"column_start":19,"column_end":25},"alias_span":null,"name":"TypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":355},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1789,"byte_end":1798,"line_start":66,"line_end":66,"column_start":36,"column_end":45},"alias_span":null,"name":"key_types","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2249},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1800,"byte_end":1809,"line_start":66,"line_end":66,"column_start":47,"column_end":56},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":343},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1811,"byte_end":1821,"line_start":66,"line_end":66,"column_start":58,"column_end":68},"alias_span":null,"name":"CryptoType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2306},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1823,"byte_end":1835,"line_start":66,"line_end":66,"column_start":70,"column_end":82},"alias_span":null,"name":"CryptoTypeId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":2192},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1837,"byte_end":1848,"line_start":66,"line_end":66,"column_start":84,"column_end":95},"alias_span":null,"name":"AccountId32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":134},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1884,"byte_end":1900,"line_start":67,"line_end":67,"column_start":33,"column_end":49},"alias_span":null,"name":"RuntimeAppPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":145},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1902,"byte_end":1925,"line_start":67,"line_end":67,"column_start":51,"column_end":74},"alias_span":null,"name":"BoundToRuntimeAppPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":43},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2005,"byte_end":2017,"line_start":70,"line_end":70,"column_start":18,"column_end":30},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":927},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2088,"byte_end":2099,"line_start":74,"line_end":74,"column_start":2,"column_end":13},"alias_span":null,"name":"Perquintill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":807},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2101,"byte_end":2108,"line_start":74,"line_end":74,"column_start":15,"column_end":22},"alias_span":null,"name":"Perbill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":687},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2110,"byte_end":2117,"line_start":74,"line_end":74,"column_start":24,"column_end":31},"alias_span":null,"name":"Permill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":447},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2119,"byte_end":2126,"line_start":74,"line_end":74,"column_start":33,"column_end":40},"alias_span":null,"name":"Percent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":567},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2128,"byte_end":2134,"line_start":74,"line_end":74,"column_start":42,"column_end":48},"alias_span":null,"name":"PerU16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":1203},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2136,"byte_end":2147,"line_start":74,"line_end":74,"column_start":50,"column_end":61},"alias_span":null,"name":"Rational128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":1061},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2149,"byte_end":2156,"line_start":74,"line_end":74,"column_start":63,"column_end":70},"alias_span":null,"name":"Fixed64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":1165},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2158,"byte_end":2166,"line_start":74,"line_end":74,"column_start":72,"column_end":80},"alias_span":null,"name":"Fixed128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":182},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2169,"byte_end":2177,"line_start":75,"line_end":75,"column_start":2,"column_end":10},"alias_span":null,"name":"PerThing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":155},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2187,"byte_end":2206,"line_start":75,"line_end":75,"column_start":20,"column_end":39},"alias_span":null,"name":"SaturatedConversion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":273},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2208,"byte_end":2224,"line_start":75,"line_end":75,"column_start":41,"column_end":57},"alias_span":null,"name":"FixedPointNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":73},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2283,"byte_end":2297,"line_start":78,"line_end":78,"column_start":24,"column_end":38},"alias_span":null,"name":"helpers_128bit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":155,"index":4},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2352,"byte_end":2359,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"alias_span":null,"name":"biguint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3384},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2395,"byte_end":2416,"line_start":82,"line_end":82,"column_start":34,"column_end":55},"alias_span":null,"name":"RandomNumberGenerator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1680},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3226,"byte_end":3235,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"Serialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1192},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3237,"byte_end":3248,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1198},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3254,"byte_end":3270,"line_start":104,"line_end":104,"column_start":45,"column_end":61},"alias_span":null,"name":"DeserializeOwned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":686,"byte_end":25157,"line_start":18,"line_end":858,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":44},{"krate":0,"index":444},{"krate":0,"index":547},{"krate":0,"index":733},{"krate":0,"index":1125},{"krate":0,"index":1174},{"krate":0,"index":1190},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":3416},{"krate":0,"index":3444},{"krate":0,"index":3443},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3425},{"krate":0,"index":3420},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1267},{"krate":0,"index":1271},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":3447},{"krate":0,"index":3520},{"krate":0,"index":3479},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3470},{"krate":0,"index":3464},{"krate":0,"index":3459},{"krate":0,"index":3457},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":3526},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3604},{"krate":0,"index":3598},{"krate":0,"index":3596},{"krate":0,"index":3590},{"krate":0,"index":3585},{"krate":0,"index":3583},{"krate":0,"index":3577},{"krate":0,"index":3536},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":3613},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3660},{"krate":0,"index":3658},{"krate":0,"index":3648},{"krate":0,"index":3643},{"krate":0,"index":3641},{"krate":0,"index":3635},{"krate":0,"index":3616},{"krate":0,"index":1330},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":3669},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3701},{"krate":0,"index":3700},{"krate":0,"index":3694},{"krate":0,"index":3689},{"krate":0,"index":3687},{"krate":0,"index":3681},{"krate":0,"index":3710},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3733},{"krate":0,"index":3731},{"krate":0,"index":3723},{"krate":0,"index":3717},{"krate":0,"index":3714},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":3747},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3767},{"krate":0,"index":3765},{"krate":0,"index":3755},{"krate":0,"index":3750},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409}],"decl_id":null,"docs":" Runtime Modules shared primitive types.\n","sig":null,"attributes":[{"value":"! Runtime Modules shared primitive types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":686,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":731,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"curve","qualname":"::curve","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":32},{"krate":0,"index":1411},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1415},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":42}],"decl_id":null,"docs":" Provides some utilities to define a piecewise linear function.\n","sig":null,"attributes":[{"value":"! Provides some utilities to define a piecewise linear function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":25845,"byte_end":25911,"line_start":18,"line_end":18,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1411},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26111,"byte_end":26126,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"PiecewiseLinear","qualname":"::curve::PiecewiseLinear","value":"PiecewiseLinear { points, maximum }","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"decl_id":null,"docs":" Piecewise Linear function in [0, 1] -> [0, 1].\n","sig":null,"attributes":[{"value":"/ Piecewise Linear function in [0, 1] -> [0, 1].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26001,"byte_end":26051,"line_start":23,"line_end":23,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1413},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26219,"byte_end":26225,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"name":"points","qualname":"::curve::PiecewiseLinear::points","value":"&'a [(sp_arithmetic::per_things::Perbill, sp_arithmetic::per_things::Perbill)]","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" Array of points. Must be in order from the lowest abscissas to the highest.\n","sig":null,"attributes":[{"value":"/ Array of points. Must be in order from the lowest abscissas to the highest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26134,"byte_end":26213,"line_start":26,"line_end":26,"column_start":2,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26303,"byte_end":26310,"line_start":29,"line_end":29,"column_start":6,"column_end":13},"name":"maximum","qualname":"::curve::PiecewiseLinear::maximum","value":"sp_arithmetic::per_things::Perbill","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" The maximum value that can be returned.\n","sig":null,"attributes":[{"value":"/ The maximum value that can be returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26254,"byte_end":26297,"line_start":28,"line_end":28,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26553,"byte_end":26593,"line_start":38,"line_end":38,"column_start":9,"column_end":49},"name":"calculate_for_fraction_times_denominator","qualname":"<PiecewiseLinear>::calculate_for_fraction_times_denominator","value":"fn <N> (&self, n: N, d: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Compute `f(n/d)*d` with `n <= d`. This is useful to avoid loss of precision.\n","sig":null,"attributes":[{"value":"/ Compute `f(n/d)*d` with `n <= d`. This is useful to avoid loss of precision.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26464,"byte_end":26544,"line_start":37,"line_end":37,"column_start":2,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"generic","qualname":"::generic","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":173},{"krate":0,"index":198},{"krate":0,"index":223},{"krate":0,"index":297},{"krate":0,"index":337},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" Generic implementations of Extrinsic/Header/Block.\n","sig":null,"attributes":[{"value":"! Generic implementations of Extrinsic/Header/Block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/mod.rs","byte_start":31123,"byte_end":31177,"line_start":19,"line_end":19,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33573,"byte_end":33591,"line_start":37,"line_end":37,"column_start":12,"column_end":30},"name":"UncheckedExtrinsic","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic","value":"UncheckedExtrinsic { signature, function }","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435}],"decl_id":null,"docs":" A extrinsic right from the external world. This is unchecked and so\n can contain a signature.\n","sig":null,"attributes":[{"value":"/ A extrinsic right from the external world. This is unchecked and so","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33429,"byte_end":33500,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ can contain a signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33501,"byte_end":33529,"line_start":35,"line_end":35,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33848,"byte_end":33857,"line_start":44,"line_end":44,"column_start":6,"column_end":15},"name":"signature","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic::signature","value":"std::option::Option<(Address, Signature, Extra)>","parent":{"krate":0,"index":1429},"children":[],"decl_id":null,"docs":" The signature, address, number of extrinsics have come before from\n the same signer and an era describing the longevity of this transaction,\n if this is a signed extrinsic.\n","sig":null,"attributes":[{"value":"/ The signature, address, number of extrinsics have come before from","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33658,"byte_end":33728,"line_start":41,"line_end":41,"column_start":2,"column_end":72}},{"value":"/ the same signer and an era describing the longevity of this transaction,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33730,"byte_end":33806,"line_start":42,"line_end":42,"column_start":2,"column_end":78}},{"value":"/ if this is a signed extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33808,"byte_end":33842,"line_start":43,"line_end":43,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1435},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33942,"byte_end":33950,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"name":"function","qualname":"::generic::unchecked_extrinsic::UncheckedExtrinsic::function","value":"Call","parent":{"krate":0,"index":1429},"children":[],"decl_id":null,"docs":" The function that should be called.\n","sig":null,"attributes":[{"value":"/ The function that should be called.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":33897,"byte_end":33936,"line_start":45,"line_end":45,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34439,"byte_end":34449,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"new_signed","qualname":"<UncheckedExtrinsic<Address, Call, Signature, Extra>>::new_signed","value":"fn (function: Call, signed: Address, signature: Signature, extra: Extra) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of a signed extrinsic aka \"transaction\".\n","sig":null,"attributes":[{"value":"/ New instance of a signed extrinsic aka \"transaction\".","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34373,"byte_end":34430,"line_start":64,"line_end":64,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34699,"byte_end":34711,"line_start":78,"line_end":78,"column_start":9,"column_end":21},"name":"new_unsigned","qualname":"<UncheckedExtrinsic<Address, Call, Signature, Extra>>::new_unsigned","value":"fn (function: Call) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of an unsigned extrinsic aka \"inherent\".\n","sig":null,"attributes":[{"value":"/ New instance of an unsigned extrinsic aka \"inherent\".","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34633,"byte_end":34690,"line_start":77,"line_end":77,"column_start":2,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37026,"byte_end":37039,"line_start":162,"line_end":162,"column_start":12,"column_end":25},"name":"SignedPayload","qualname":"::generic::unchecked_extrinsic::SignedPayload","value":"","parent":null,"children":[],"decl_id":null,"docs":" A payload that has been signed for an unchecked extrinsics.","sig":null,"attributes":[{"value":"/ A payload that has been signed for an unchecked extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36758,"byte_end":36821,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36822,"byte_end":36825,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Note that the payload that we sign to produce unchecked extrinsic signature","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36826,"byte_end":36905,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ is going to be different than the `SignaturePayload` - so the thing the extrinsic","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36906,"byte_end":36991,"line_start":160,"line_end":160,"column_start":1,"column_end":86}},{"value":"/ actually contains.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36992,"byte_end":37014,"line_start":161,"line_end":161,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37337,"byte_end":37340,"line_start":175,"line_end":175,"column_start":9,"column_end":12},"name":"new","qualname":"<SignedPayload<Call, Extra>>::new","value":"fn (call: Call, extra: Extra) -> Result<Self, TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Create new `SignedPayload`.","sig":null,"attributes":[{"value":"/ Create new `SignedPayload`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37212,"byte_end":37243,"line_start":172,"line_end":172,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37245,"byte_end":37248,"line_start":173,"line_end":173,"column_start":2,"column_end":5}},{"value":"/ This function may fail if `additional_signed` of `Extra` is not available.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37250,"byte_end":37328,"line_start":174,"line_end":174,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37608,"byte_end":37616,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<SignedPayload<Call, Extra>>::from_raw","value":"fn (call: Call, extra: Extra, additional_signed: Extra::AdditionalSigned) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `SignedPayload` from raw components.\n","sig":null,"attributes":[{"value":"/ Create new `SignedPayload` from raw components.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37548,"byte_end":37599,"line_start":181,"line_end":181,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37801,"byte_end":37812,"line_start":187,"line_end":187,"column_start":9,"column_end":20},"name":"deconstruct","qualname":"<SignedPayload<Call, Extra>>::deconstruct","value":"fn (self) -> (Call, Extra, Extra::AdditionalSigned)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct the payload into it's components.\n","sig":null,"attributes":[{"value":"/ Deconstruct the payload into it's components.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37743,"byte_end":37792,"line_start":186,"line_end":186,"column_start":2,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":184},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45144,"byte_end":45149,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"name":"Phase","qualname":"::generic::era::Phase","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Era phase\n","sig":null,"attributes":[{"value":"/ Era phase","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45121,"byte_end":45134,"line_start":28,"line_end":28,"column_start":1,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1467},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45446,"byte_end":45454,"line_start":36,"line_end":36,"column_start":2,"column_end":10},"name":"Immortal","qualname":"::generic::era::Era::Immortal","value":"Era::Immortal","parent":{"krate":0,"index":1466},"children":[],"decl_id":null,"docs":" The transaction is valid forever. The genesis hash must be present in the signed content.\n","sig":null,"attributes":[{"value":"/ The transaction is valid forever. The genesis hash must be present in the signed content.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45351,"byte_end":45444,"line_start":35,"line_end":35,"column_start":2,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45982,"byte_end":45988,"line_start":47,"line_end":47,"column_start":2,"column_end":8},"name":"Mortal","qualname":"::generic::era::Era::Mortal","value":"Era::Mortal(Period, Phase)","parent":{"krate":0,"index":1466},"children":[],"decl_id":null,"docs":" Period and phase are encoded:\n - The period of validity from the block hash found in the signing material.\n - The phase in the period that this transaction's lifetime begins (and, importantly,\n implies which block hash is included in the signature material). If the `period` is\n greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that\n `period` is.","sig":null,"attributes":[{"value":"/ Period and phase are encoded:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45458,"byte_end":45491,"line_start":38,"line_end":38,"column_start":2,"column_end":35}},{"value":"/ - The period of validity from the block hash found in the signing material.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45493,"byte_end":45572,"line_start":39,"line_end":39,"column_start":2,"column_end":81}},{"value":"/ - The phase in the period that this transaction's lifetime begins (and, importantly,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45574,"byte_end":45662,"line_start":40,"line_end":40,"column_start":2,"column_end":90}},{"value":"/ implies which block hash is included in the signature material). If the `period` is","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45664,"byte_end":45751,"line_start":41,"line_end":41,"column_start":2,"column_end":89}},{"value":"/ greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45753,"byte_end":45840,"line_start":42,"line_end":42,"column_start":2,"column_end":89}},{"value":"/ `period` is.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45842,"byte_end":45858,"line_start":43,"line_end":43,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45860,"byte_end":45863,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ When used on `FRAME`-based runtimes, `period` cannot exceed `BlockHashCount` parameter","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45865,"byte_end":45955,"line_start":45,"line_end":45,"column_start":2,"column_end":92}},{"value":"/ of `system` module.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45957,"byte_end":45980,"line_start":46,"line_end":46,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1466},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45344,"byte_end":45347,"line_start":34,"line_end":34,"column_start":10,"column_end":13},"name":"Era","qualname":"::generic::era::Era","value":"Era::{Immortal, Mortal}","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1469}],"decl_id":null,"docs":" An era to describe the longevity of a transaction.\n","sig":null,"attributes":[{"value":"/ An era to describe the longevity of a transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":45158,"byte_end":45212,"line_start":31,"line_end":31,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46703,"byte_end":46709,"line_start":66,"line_end":66,"column_start":9,"column_end":15},"name":"mortal","qualname":"<Era>::mortal","value":"fn (period: u64, current: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new era based on a period (which should be a power of two between 4 and 65536 inclusive)\n and a block number on which it should start (or, for long periods, be shortly after the start).","sig":null,"attributes":[{"value":"/ Create a new era based on a period (which should be a power of two between 4 and 65536 inclusive)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46253,"byte_end":46354,"line_start":60,"line_end":60,"column_start":2,"column_end":103}},{"value":"/ and a block number on which it should start (or, for long periods, be shortly after the start).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46356,"byte_end":46455,"line_start":61,"line_end":61,"column_start":2,"column_end":101}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46457,"byte_end":46460,"line_start":62,"line_end":62,"column_start":2,"column_end":5}},{"value":"/ If using `Era` in the context of `FRAME` runtime, make sure that `period`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46462,"byte_end":46539,"line_start":63,"line_end":63,"column_start":2,"column_end":79}},{"value":"/ does not exceed `BlockHashCount` parameter passed to `system` module, since that","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46541,"byte_end":46625,"line_start":64,"line_end":64,"column_start":2,"column_end":86}},{"value":"/ prunes old blocks and renders transactions immediately invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46627,"byte_end":46694,"line_start":65,"line_end":65,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47086,"byte_end":47094,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"immortal","qualname":"<Era>::immortal","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an \"immortal\" transaction.\n","sig":null,"attributes":[{"value":"/ Create an \"immortal\" transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47040,"byte_end":47077,"line_start":78,"line_end":78,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47183,"byte_end":47194,"line_start":84,"line_end":84,"column_start":9,"column_end":20},"name":"is_immortal","qualname":"<Era>::is_immortal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if this is an immortal transaction.\n","sig":null,"attributes":[{"value":"/ `true` if this is an immortal transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47128,"byte_end":47174,"line_start":83,"line_end":83,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47405,"byte_end":47410,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"birth","qualname":"<Era>::birth","value":"fn (self, current: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the block number of the start of the era whose properties this object\n describes that `current` belongs to.\n","sig":null,"attributes":[{"value":"/ Get the block number of the start of the era whose properties this object","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47277,"byte_end":47354,"line_start":91,"line_end":91,"column_start":2,"column_end":79}},{"value":"/ describes that `current` belongs to.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47356,"byte_end":47396,"line_start":92,"line_end":92,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47656,"byte_end":47661,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"death","qualname":"<Era>::death","value":"fn (self, current: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the block number of the first block at which the era has ended.\n","sig":null,"attributes":[{"value":"/ Get the block number of the first block at which the era has ended.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47576,"byte_end":47647,"line_start":100,"line_end":100,"column_start":2,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":51902,"byte_end":51918,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"CheckedExtrinsic","qualname":"::generic::checked_extrinsic::CheckedExtrinsic","value":"CheckedExtrinsic { signed, function }","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"decl_id":null,"docs":" Definition of something that the external world might want to say; its\n existence implies that it has been checked and is good, particularly with\n regards to the signature.\n","sig":null,"attributes":[{"value":"/ Definition of something that the external world might want to say; its","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":51653,"byte_end":51727,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ existence implies that it has been checked and is good, particularly with","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":51728,"byte_end":51805,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ regards to the signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":51806,"byte_end":51835,"line_start":29,"line_end":29,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1544},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":52099,"byte_end":52105,"line_start":34,"line_end":34,"column_start":6,"column_end":12},"name":"signed","qualname":"::generic::checked_extrinsic::CheckedExtrinsic::signed","value":"std::option::Option<(AccountId, Extra)>","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Who this purports to be from and the number of extrinsics have come before\n from the same signer, if anyone (note this is not a signature).\n","sig":null,"attributes":[{"value":"/ Who this purports to be from and the number of extrinsics have come before","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":51946,"byte_end":52024,"line_start":32,"line_end":32,"column_start":2,"column_end":80}},{"value":"/ from the same signer, if anyone (note this is not a signature).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":52026,"byte_end":52093,"line_start":33,"line_end":33,"column_start":2,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1545},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":52182,"byte_end":52190,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"name":"function","qualname":"::generic::checked_extrinsic::CheckedExtrinsic::function","value":"Call","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" The function that should be called.\n","sig":null,"attributes":[{"value":"/ The function that should be called.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":52137,"byte_end":52176,"line_start":36,"line_end":36,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1575},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55307,"byte_end":55313,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Header","qualname":"::generic::header::Header","value":"Header { parent_hash, number, state_root, extrinsics_root, digest }","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1582},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"decl_id":null,"docs":" Abstraction over a block header for a substrate chain.\n","sig":null,"attributes":[{"value":"/ Abstraction over a block header for a substrate chain.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55002,"byte_end":55060,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55205,"byte_end":55236,"line_start":38,"line_end":38,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55267,"byte_end":55293,"line_start":39,"line_end":39,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1578},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55399,"byte_end":55410,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"name":"parent_hash","qualname":"::generic::header::Header::parent_hash","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" The parent hash.\n","sig":null,"attributes":[{"value":"/ The parent hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55373,"byte_end":55393,"line_start":41,"line_end":41,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1582},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55574,"byte_end":55580,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"name":"number","qualname":"::generic::header::Header::number","value":"Number","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" The block number.\n","sig":null,"attributes":[{"value":"/ The block number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55427,"byte_end":55448,"line_start":43,"line_end":43,"column_start":2,"column_end":23}},{"value":"serde(serialize_with = \"serialize_number\", deserialize_with =\n        \"deserialize_number\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55478,"byte_end":55566,"line_start":44,"line_end":46,"column_start":30,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1579},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55627,"byte_end":55637,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"name":"state_root","qualname":"::generic::header::Header::state_root","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" The state trie merkle root\n","sig":null,"attributes":[{"value":"/ The state trie merkle root","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55591,"byte_end":55621,"line_start":48,"line_end":48,"column_start":2,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1580},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55698,"byte_end":55713,"line_start":51,"line_end":51,"column_start":6,"column_end":21},"name":"extrinsics_root","qualname":"::generic::header::Header::extrinsics_root","value":"<Hash as traits::Hash>::Output","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" The merkle root of the extrinsics.\n","sig":null,"attributes":[{"value":"/ The merkle root of the extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55654,"byte_end":55692,"line_start":50,"line_end":50,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1581},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55827,"byte_end":55833,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"name":"digest","qualname":"::generic::header::Header::digest","value":"generic::digest::Digest<<Hash as traits::Hash>::Output>","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" A chain-specific digest of data useful for light clients or referencing auxiliary data.\n","sig":null,"attributes":[{"value":"/ A chain-specific digest of data useful for light clients or referencing auxiliary data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55730,"byte_end":55821,"line_start":52,"line_end":52,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":59880,"byte_end":59884,"line_start":180,"line_end":180,"column_start":9,"column_end":13},"name":"hash","qualname":"<Header<Number, Hash>>::hash","value":"fn (&self) -> Hash::Output","parent":null,"children":[],"decl_id":null,"docs":" Convenience helper for computing the hash of the header without having\n to import the trait.\n","sig":null,"attributes":[{"value":"/ Convenience helper for computing the hash of the header without having","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":59771,"byte_end":59845,"line_start":178,"line_end":178,"column_start":2,"column_end":76}},{"value":"/ to import the trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":59847,"byte_end":59871,"line_start":179,"line_end":179,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1708},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62432,"byte_end":62436,"line_start":42,"line_end":42,"column_start":2,"column_end":6},"name":"Hash","qualname":"::generic::block::BlockId::Hash","value":"BlockId::Hash(Block::Hash)","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" Identify by block header hash.\n","sig":null,"attributes":[{"value":"/ Identify by block header hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62396,"byte_end":62430,"line_start":41,"line_end":41,"column_start":2,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1711},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62483,"byte_end":62489,"line_start":44,"line_end":44,"column_start":2,"column_end":8},"name":"Number","qualname":"::generic::block::BlockId::Number","value":"BlockId::Number(NumberFor<Block>)","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" Identify by block number.\n","sig":null,"attributes":[{"value":"/ Identify by block number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62452,"byte_end":62481,"line_start":43,"line_end":43,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1706},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62370,"byte_end":62377,"line_start":40,"line_end":40,"column_start":10,"column_end":17},"name":"BlockId","qualname":"::generic::block::BlockId","value":"BlockId::{Hash, Number}","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1711}],"decl_id":null,"docs":" Something to identify a block.\n","sig":null,"attributes":[{"value":"/ Something to identify a block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62113,"byte_end":62147,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62270,"byte_end":62301,"line_start":38,"line_end":38,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62332,"byte_end":62358,"line_start":39,"line_end":39,"column_start":29,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62593,"byte_end":62597,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"hash","qualname":"<BlockId<Block>>::hash","value":"fn (hash: Block::Hash) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a block ID from a hash.\n","sig":null,"attributes":[{"value":"/ Create a block ID from a hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62550,"byte_end":62584,"line_start":48,"line_end":48,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62699,"byte_end":62705,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"number","qualname":"<BlockId<Block>>::number","value":"fn (number: NumberFor<Block>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a block ID from a number.\n","sig":null,"attributes":[{"value":"/ Create a block ID from a number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62654,"byte_end":62690,"line_start":53,"line_end":53,"column_start":2,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1738},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63312,"byte_end":63317,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Block","qualname":"::generic::block::Block","value":"Block { header, extrinsics }","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"decl_id":null,"docs":" Abstraction over a substrate block.\n","sig":null,"attributes":[{"value":"/ Abstraction over a substrate block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62988,"byte_end":63027,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63210,"byte_end":63241,"line_start":71,"line_end":71,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63272,"byte_end":63298,"line_start":72,"line_end":72,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1741},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63383,"byte_end":63389,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"name":"header","qualname":"::generic::block::Block::header","value":"Header","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" The block header.\n","sig":null,"attributes":[{"value":"/ The block header.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63356,"byte_end":63377,"line_start":74,"line_end":74,"column_start":2,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63438,"byte_end":63448,"line_start":77,"line_end":77,"column_start":6,"column_end":16},"name":"extrinsics","qualname":"::generic::block::Block::extrinsics","value":"std::vec::Vec<Extrinsic>","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" The accompanying extrinsics.\n","sig":null,"attributes":[{"value":"/ The accompanying extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63400,"byte_end":63432,"line_start":76,"line_end":76,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64520,"byte_end":64531,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"SignedBlock","qualname":"::generic::block::SignedBlock","value":"SignedBlock { block, justification }","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845}],"decl_id":null,"docs":" Abstraction over a substrate block and justification.\n","sig":null,"attributes":[{"value":"/ Abstraction over a substrate block and justification.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64209,"byte_end":64266,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64418,"byte_end":64449,"line_start":109,"line_end":109,"column_start":29,"column_end":60}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64480,"byte_end":64506,"line_start":110,"line_end":110,"column_start":29,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1844},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64563,"byte_end":64568,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"name":"block","qualname":"::generic::block::SignedBlock::block","value":"Block","parent":{"krate":0,"index":1842},"children":[],"decl_id":null,"docs":" Full block.\n","sig":null,"attributes":[{"value":"/ Full block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64542,"byte_end":64557,"line_start":112,"line_end":112,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1845},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64608,"byte_end":64621,"line_start":115,"line_end":115,"column_start":6,"column_end":19},"name":"justification","qualname":"::generic::block::SignedBlock::justification","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":1842},"children":[],"decl_id":null,"docs":" Block justification.\n","sig":null,"attributes":[{"value":"/ Block justification.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":64578,"byte_end":64602,"line_start":114,"line_end":114,"column_start":2,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1928},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":65791,"byte_end":65797,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Digest","qualname":"::generic::digest::Digest","value":"Digest { logs }","parent":null,"children":[{"krate":0,"index":1930}],"decl_id":null,"docs":" Generic header digest.\n","sig":null,"attributes":[{"value":"/ Generic header digest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":65599,"byte_end":65625,"line_start":29,"line_end":29,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1930},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":65967,"byte_end":65971,"line_start":38,"line_end":38,"column_start":6,"column_end":10},"name":"logs","qualname":"::generic::digest::Digest::logs","value":"std::vec::Vec<generic::digest::DigestItem<Hash>>","parent":{"krate":0,"index":1928},"children":[],"decl_id":null,"docs":" A list of logs in the digest.\n","sig":null,"attributes":[{"value":"/ A list of logs in the digest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":65807,"byte_end":65840,"line_start":33,"line_end":33,"column_start":2,"column_end":35}},{"value":"serde(bound\n        (serialize = \"Hash: codec::Codec\", deserialize =\n         \"Hash: codec::Codec\"))","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":65875,"byte_end":65957,"line_start":36,"line_end":36,"column_start":3,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66172,"byte_end":66176,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"name":"logs","qualname":"<Digest<Hash>>::logs","value":"fn (&self) -> &[DigestItem<Hash>]","parent":null,"children":[],"decl_id":null,"docs":" Get reference to all digest items.\n","sig":null,"attributes":[{"value":"/ Get reference to all digest items.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66125,"byte_end":66163,"line_start":48,"line_end":48,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66261,"byte_end":66265,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"push","qualname":"<Digest<Hash>>::push","value":"fn (&mut self, item: DigestItem<Hash>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push new digest item.\n","sig":null,"attributes":[{"value":"/ Push new digest item.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66227,"byte_end":66252,"line_start":53,"line_end":53,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66363,"byte_end":66366,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"name":"pop","qualname":"<Digest<Hash>>::pop","value":"fn (&mut self) -> Option<DigestItem<Hash>>","parent":null,"children":[],"decl_id":null,"docs":" Pop a digest item.\n","sig":null,"attributes":[{"value":"/ Pop a digest item.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66332,"byte_end":66354,"line_start":58,"line_end":58,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66517,"byte_end":66520,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"log","qualname":"<Digest<Hash>>::log","value":"fn <T, F> (&self, predicate: F) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get reference to the first digest item that matches the passed predicate.\n","sig":null,"attributes":[{"value":"/ Get reference to the first digest item that matches the passed predicate.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66431,"byte_end":66508,"line_start":63,"line_end":63,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66773,"byte_end":66786,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"convert_first","qualname":"<Digest<Hash>>::convert_first","value":"fn <T, F> (&self, predicate: F) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Get a conversion of the first digest item that successfully converts using the function.\n","sig":null,"attributes":[{"value":"/ Get a conversion of the first digest item that successfully converts using the function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66672,"byte_end":66764,"line_start":70,"line_end":70,"column_start":2,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2022},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67350,"byte_end":67365,"line_start":87,"line_end":87,"column_start":2,"column_end":17},"name":"ChangesTrieRoot","qualname":"::generic::digest::DigestItem::ChangesTrieRoot","value":"DigestItem::ChangesTrieRoot(Hash)","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" System digest item that contains the root of changes trie at given\n block. It is created for every block iff runtime supports changes\n trie creation.\n","sig":null,"attributes":[{"value":"/ System digest item that contains the root of changes trie at given","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67187,"byte_end":67257,"line_start":84,"line_end":84,"column_start":2,"column_end":72}},{"value":"/ block. It is created for every block iff runtime supports changes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67259,"byte_end":67328,"line_start":85,"line_end":85,"column_start":2,"column_end":71}},{"value":"/ trie creation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67330,"byte_end":67348,"line_start":86,"line_end":86,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2025},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68021,"byte_end":68031,"line_start":101,"line_end":101,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::DigestItem::PreRuntime","value":"DigestItem::PreRuntime(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" A pre-runtime digest.","sig":null,"attributes":[{"value":"/ A pre-runtime digest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67375,"byte_end":67400,"line_start":89,"line_end":89,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67402,"byte_end":67405,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ These are messages from the consensus engine to the runtime, although","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67407,"byte_end":67480,"line_start":91,"line_end":91,"column_start":2,"column_end":75}},{"value":"/ the consensus engine can (and should) read them itself to avoid","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67482,"byte_end":67549,"line_start":92,"line_end":92,"column_start":2,"column_end":69}},{"value":"/ code and state duplication. It is erroneous for a runtime to produce","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67551,"byte_end":67623,"line_start":93,"line_end":93,"column_start":2,"column_end":74}},{"value":"/ these, but this is not (yet) checked.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67625,"byte_end":67666,"line_start":94,"line_end":94,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67668,"byte_end":67671,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ NOTE: the runtime is not allowed to panic or fail in an `on_initialize`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67673,"byte_end":67748,"line_start":96,"line_end":96,"column_start":2,"column_end":77}},{"value":"/ call if an expected `PreRuntime` digest is not present. It is the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67750,"byte_end":67819,"line_start":97,"line_end":97,"column_start":2,"column_end":71}},{"value":"/ responsibility of a external block verifier to check this. Runtime API calls","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67821,"byte_end":67901,"line_start":98,"line_end":98,"column_start":2,"column_end":82}},{"value":"/ will initialize the block without pre-runtime digests, so initialization","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67903,"byte_end":67979,"line_start":99,"line_end":99,"column_start":2,"column_end":78}},{"value":"/ cannot fail when they are missing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67981,"byte_end":68019,"line_start":100,"line_end":100,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2029},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68238,"byte_end":68247,"line_start":106,"line_end":106,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::DigestItem::Consensus","value":"DigestItem::Consensus(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" A message from the runtime to the consensus engine. This should *never*\n be generated by the native code of any consensus engine, but this is not\n checked (yet).\n","sig":null,"attributes":[{"value":"/ A message from the runtime to the consensus engine. This should *never*","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68063,"byte_end":68138,"line_start":103,"line_end":103,"column_start":2,"column_end":77}},{"value":"/ be generated by the native code of any consensus engine, but this is not","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68140,"byte_end":68216,"line_start":104,"line_end":104,"column_start":2,"column_end":78}},{"value":"/ checked (yet).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68218,"byte_end":68236,"line_start":105,"line_end":105,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2033},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68372,"byte_end":68376,"line_start":110,"line_end":110,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::DigestItem::Seal","value":"DigestItem::Seal(ConsensusEngineId, Vec<u8>)","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" Put a Seal on it. This is only used by native code, and is never seen\n by runtimes.\n","sig":null,"attributes":[{"value":"/ Put a Seal on it. This is only used by native code, and is never seen","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68279,"byte_end":68352,"line_start":108,"line_end":108,"column_start":2,"column_end":75}},{"value":"/ by runtimes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68354,"byte_end":68370,"line_start":109,"line_end":109,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2037},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68498,"byte_end":68515,"line_start":114,"line_end":114,"column_start":2,"column_end":19},"name":"ChangesTrieSignal","qualname":"::generic::digest::DigestItem::ChangesTrieSignal","value":"DigestItem::ChangesTrieSignal(ChangesTrieSignal)","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" Digest item that contains signal from changes tries manager to the\n native code.\n","sig":null,"attributes":[{"value":"/ Digest item that contains signal from changes tries manager to the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68408,"byte_end":68478,"line_start":112,"line_end":112,"column_start":2,"column_end":72}},{"value":"/ native code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68480,"byte_end":68496,"line_start":113,"line_end":113,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2040},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68591,"byte_end":68596,"line_start":117,"line_end":117,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::DigestItem::Other","value":"DigestItem::Other(Vec<u8>)","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" Some other thing. Unsupported and experimental.\n","sig":null,"attributes":[{"value":"/ Some other thing. Unsupported and experimental.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68538,"byte_end":68589,"line_start":116,"line_end":116,"column_start":2,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2020},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67167,"byte_end":67177,"line_start":83,"line_end":83,"column_start":10,"column_end":20},"name":"DigestItem","qualname":"::generic::digest::DigestItem","value":"DigestItem::{ChangesTrieRoot, PreRuntime, Consensus, Seal, ChangesTrieSignal, Other}","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2029},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2040}],"decl_id":null,"docs":" Digest item that is able to encode/decode 'system' digest items and\n provide opaque access to other items.\n","sig":null,"attributes":[{"value":"/ Digest item that is able to encode/decode 'system' digest items and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66930,"byte_end":67001,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ provide opaque access to other items.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":67002,"byte_end":67043,"line_start":80,"line_end":80,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2064},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69458,"byte_end":69474,"line_start":135,"line_end":135,"column_start":2,"column_end":18},"name":"NewConfiguration","qualname":"::generic::digest::ChangesTrieSignal::NewConfiguration","value":"ChangesTrieSignal::NewConfiguration(Option<ChangesTrieConfiguration>)","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" New changes trie configuration is enacted, starting from **next block**.","sig":null,"attributes":[{"value":"/ New changes trie configuration is enacted, starting from **next block**.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68799,"byte_end":68875,"line_start":124,"line_end":124,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68877,"byte_end":68880,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ The block that emits this signal will contain changes trie (CT) that covers","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68882,"byte_end":68961,"line_start":126,"line_end":126,"column_start":2,"column_end":81}},{"value":"/ blocks range [BEGIN; current block], where BEGIN is (order matters):","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68963,"byte_end":69035,"line_start":127,"line_end":127,"column_start":2,"column_end":74}},{"value":"/ - LAST_TOP_LEVEL_DIGEST_BLOCK+1 if top level digest CT has ever been created","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69037,"byte_end":69117,"line_start":128,"line_end":128,"column_start":2,"column_end":82}},{"value":"/   using current configuration AND the last top level digest CT has been created","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69119,"byte_end":69202,"line_start":129,"line_end":129,"column_start":2,"column_end":85}},{"value":"/   at block LAST_TOP_LEVEL_DIGEST_BLOCK;","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69204,"byte_end":69247,"line_start":130,"line_end":130,"column_start":2,"column_end":45}},{"value":"/ - LAST_CONFIGURATION_CHANGE_BLOCK+1 if there has been CT configuration change","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69249,"byte_end":69330,"line_start":131,"line_end":131,"column_start":2,"column_end":83}},{"value":"/   before and the last configuration change happened at block","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69332,"byte_end":69396,"line_start":132,"line_end":132,"column_start":2,"column_end":66}},{"value":"/   LAST_CONFIGURATION_CHANGE_BLOCK;","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69398,"byte_end":69436,"line_start":133,"line_end":133,"column_start":2,"column_end":40}},{"value":"/ - 1 otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69438,"byte_end":69456,"line_start":134,"line_end":134,"column_start":2,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2063},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68778,"byte_end":68795,"line_start":123,"line_end":123,"column_start":10,"column_end":27},"name":"ChangesTrieSignal","qualname":"::generic::digest::ChangesTrieSignal","value":"ChangesTrieSignal::{NewConfiguration}","parent":null,"children":[{"krate":0,"index":2064}],"decl_id":null,"docs":" Available changes trie signals.\n","sig":null,"attributes":[{"value":"/ Available changes trie signals.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":68610,"byte_end":68645,"line_start":120,"line_end":120,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2094},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70388,"byte_end":70403,"line_start":163,"line_end":163,"column_start":2,"column_end":17},"name":"ChangesTrieRoot","qualname":"::generic::digest::DigestItemRef::ChangesTrieRoot","value":"DigestItemRef::ChangesTrieRoot(&'a Hash)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Reference to `DigestItem::ChangesTrieRoot`.\n","sig":null,"attributes":[{"value":"/ Reference to `DigestItem::ChangesTrieRoot`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70339,"byte_end":70386,"line_start":162,"line_end":162,"column_start":2,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2097},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70710,"byte_end":70720,"line_start":170,"line_end":170,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::DigestItemRef::PreRuntime","value":"DigestItemRef::PreRuntime(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" A pre-runtime digest.","sig":null,"attributes":[{"value":"/ A pre-runtime digest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70416,"byte_end":70441,"line_start":164,"line_end":164,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70443,"byte_end":70446,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ These are messages from the consensus engine to the runtime, although","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70448,"byte_end":70521,"line_start":166,"line_end":166,"column_start":2,"column_end":75}},{"value":"/ the consensus engine can (and should) read them itself to avoid","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70523,"byte_end":70590,"line_start":167,"line_end":167,"column_start":2,"column_end":69}},{"value":"/ code and state duplication.  It is erroneous for a runtime to produce","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70592,"byte_end":70665,"line_start":168,"line_end":168,"column_start":2,"column_end":75}},{"value":"/ these, but this is not (yet) checked.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70667,"byte_end":70708,"line_start":169,"line_end":169,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2101},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70934,"byte_end":70943,"line_start":174,"line_end":174,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::DigestItemRef::Consensus","value":"DigestItemRef::Consensus(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" A message from the runtime to the consensus engine. This should *never*\n be generated by the native code of any consensus engine, but this is not\n checked (yet).\n","sig":null,"attributes":[{"value":"/ A message from the runtime to the consensus engine. This should *never*","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70759,"byte_end":70834,"line_start":171,"line_end":171,"column_start":2,"column_end":77}},{"value":"/ be generated by the native code of any consensus engine, but this is not","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70836,"byte_end":70912,"line_start":172,"line_end":172,"column_start":2,"column_end":78}},{"value":"/ checked (yet).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70914,"byte_end":70932,"line_start":173,"line_end":173,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2105},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71075,"byte_end":71079,"line_start":177,"line_end":177,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::DigestItemRef::Seal","value":"DigestItemRef::Seal(&'a ConsensusEngineId, &'a Vec<u8>)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Put a Seal on it. This is only used by native code, and is never seen\n by runtimes.\n","sig":null,"attributes":[{"value":"/ Put a Seal on it. This is only used by native code, and is never seen","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70982,"byte_end":71055,"line_start":175,"line_end":175,"column_start":2,"column_end":75}},{"value":"/ by runtimes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71057,"byte_end":71073,"line_start":176,"line_end":176,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2109},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71208,"byte_end":71225,"line_start":180,"line_end":180,"column_start":2,"column_end":19},"name":"ChangesTrieSignal","qualname":"::generic::digest::DigestItemRef::ChangesTrieSignal","value":"DigestItemRef::ChangesTrieSignal(&'a ChangesTrieSignal)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Digest item that contains signal from changes tries manager to the\n native code.\n","sig":null,"attributes":[{"value":"/ Digest item that contains signal from changes tries manager to the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71118,"byte_end":71188,"line_start":178,"line_end":178,"column_start":2,"column_end":72}},{"value":"/ native code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71190,"byte_end":71206,"line_start":179,"line_end":179,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2112},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71313,"byte_end":71318,"line_start":182,"line_end":182,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::DigestItemRef::Other","value":"DigestItemRef::Other(&'a Vec<u8>)","parent":{"krate":0,"index":2091},"children":[],"decl_id":null,"docs":" Any 'non-system' digest item, opaque to the native code.\n","sig":null,"attributes":[{"value":"/ Any 'non-system' digest item, opaque to the native code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71251,"byte_end":71311,"line_start":181,"line_end":181,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2091},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70308,"byte_end":70321,"line_start":161,"line_end":161,"column_start":10,"column_end":23},"name":"DigestItemRef","qualname":"::generic::digest::DigestItemRef","value":"DigestItemRef::{ChangesTrieRoot, PreRuntime, Consensus, Seal, ChangesTrieSignal, Other}","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2101},{"krate":0,"index":2105},{"krate":0,"index":2109},{"krate":0,"index":2112}],"decl_id":null,"docs":" A 'referencing view' for digest item. Does not own its contents. Used by\n final runtime implementations for encoding/decoding its log items.\n","sig":null,"attributes":[{"value":"/ A 'referencing view' for digest item. Does not own its contents. Used by","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70105,"byte_end":70181,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ final runtime implementations for encoding/decoding its log items.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":70182,"byte_end":70252,"line_start":159,"line_end":159,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2170},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72097,"byte_end":72107,"line_start":205,"line_end":205,"column_start":2,"column_end":12},"name":"PreRuntime","qualname":"::generic::digest::OpaqueDigestItemId::PreRuntime","value":"OpaqueDigestItemId::PreRuntime(&'a ConsensusEngineId)","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::PreRuntime.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::PreRuntime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72046,"byte_end":72095,"line_start":204,"line_end":204,"column_start":2,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2173},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72183,"byte_end":72192,"line_start":207,"line_end":207,"column_start":2,"column_end":11},"name":"Consensus","qualname":"::generic::digest::OpaqueDigestItemId::Consensus","value":"OpaqueDigestItemId::Consensus(&'a ConsensusEngineId)","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::Consensus.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::Consensus.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72133,"byte_end":72181,"line_start":206,"line_end":206,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2176},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72263,"byte_end":72267,"line_start":209,"line_end":209,"column_start":2,"column_end":6},"name":"Seal","qualname":"::generic::digest::OpaqueDigestItemId::Seal","value":"OpaqueDigestItemId::Seal(&'a ConsensusEngineId)","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":" Type corresponding to DigestItem::Seal.\n","sig":null,"attributes":[{"value":"/ Type corresponding to DigestItem::Seal.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72218,"byte_end":72261,"line_start":208,"line_end":208,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72332,"byte_end":72337,"line_start":211,"line_end":211,"column_start":2,"column_end":7},"name":"Other","qualname":"::generic::digest::OpaqueDigestItemId::Other","value":"OpaqueDigestItemId::Other","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":" Some other (non-prescribed) type.\n","sig":null,"attributes":[{"value":"/ Some other (non-prescribed) type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72293,"byte_end":72330,"line_start":210,"line_end":210,"column_start":2,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":2168},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72020,"byte_end":72038,"line_start":203,"line_end":203,"column_start":10,"column_end":28},"name":"OpaqueDigestItemId","qualname":"::generic::digest::OpaqueDigestItemId","value":"OpaqueDigestItemId::{PreRuntime, Consensus, Seal, Other}","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2179}],"decl_id":null,"docs":" Type of a digest item that contains raw data; this also names the consensus engine ID where\n applicable. Used to identify one or more digest items of interest.\n","sig":null,"attributes":[{"value":"/ Type of a digest item that contains raw data; this also names the consensus engine ID where","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71789,"byte_end":71884,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ applicable. Used to identify one or more digest items of interest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":71885,"byte_end":71955,"line_start":201,"line_end":201,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72436,"byte_end":72440,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"name":"dref","qualname":"<DigestItem<Hash>>::dref","value":"fn <'a> (&'a self) -> DigestItemRef<'a, Hash>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 'referencing view' for this digest item.\n","sig":null,"attributes":[{"value":"/ Returns a 'referencing view' for this digest item.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72373,"byte_end":72427,"line_start":215,"line_end":215,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73007,"byte_end":73027,"line_start":228,"line_end":228,"column_start":9,"column_end":29},"name":"as_changes_trie_root","qualname":"<DigestItem<Hash>>::as_changes_trie_root","value":"fn (&self) -> Option<&Hash>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if the entry is the `ChangesTrieRoot` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if the entry is the `ChangesTrieRoot` entry.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72935,"byte_end":72998,"line_start":227,"line_end":227,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73164,"byte_end":73178,"line_start":233,"line_end":233,"column_start":9,"column_end":23},"name":"as_pre_runtime","qualname":"<DigestItem<Hash>>::as_pre_runtime","value":"fn (&self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `PreRuntime` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `PreRuntime` entry.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73096,"byte_end":73155,"line_start":232,"line_end":232,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73329,"byte_end":73341,"line_start":238,"line_end":238,"column_start":9,"column_end":21},"name":"as_consensus","qualname":"<DigestItem<Hash>>::as_consensus","value":"fn (&self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `Consensus` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `Consensus` entry.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73262,"byte_end":73320,"line_start":237,"line_end":237,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73485,"byte_end":73492,"line_start":243,"line_end":243,"column_start":9,"column_end":16},"name":"as_seal","qualname":"<DigestItem<Hash>>::as_seal","value":"fn (&self) -> Option<(ConsensusEngineId, &[u8])>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if this entry is the `Seal` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if this entry is the `Seal` entry.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73423,"byte_end":73476,"line_start":242,"line_end":242,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73643,"byte_end":73665,"line_start":248,"line_end":248,"column_start":9,"column_end":31},"name":"as_changes_trie_signal","qualname":"<DigestItem<Hash>>::as_changes_trie_signal","value":"fn (&self) -> Option<&ChangesTrieSignal>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` if the entry is the `ChangesTrieSignal` entry.\n","sig":null,"attributes":[{"value":"/ Returns `Some` if the entry is the `ChangesTrieSignal` entry.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73569,"byte_end":73634,"line_start":247,"line_end":247,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73810,"byte_end":73818,"line_start":253,"line_end":253,"column_start":9,"column_end":17},"name":"as_other","qualname":"<DigestItem<Hash>>::as_other","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns Some if `self` is a `DigestItem::Other`.\n","sig":null,"attributes":[{"value":"/ Returns Some if `self` is a `DigestItem::Other`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73749,"byte_end":73801,"line_start":252,"line_end":252,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74029,"byte_end":74039,"line_start":261,"line_end":261,"column_start":9,"column_end":19},"name":"try_as_raw","qualname":"<DigestItem<Hash>>::try_as_raw","value":"fn (&self, id: OpaqueDigestItemId) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the opaque data contained in the item if `Some` if this entry has the id given.\n","sig":null,"attributes":[{"value":"/ Returns the opaque data contained in the item if `Some` if this entry has the id given.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":73929,"byte_end":74020,"line_start":260,"line_end":260,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74256,"byte_end":74262,"line_start":267,"line_end":267,"column_start":9,"column_end":15},"name":"try_to","qualname":"<DigestItem<Hash>>::try_to","value":"fn <T> (&self, id: OpaqueDigestItemId) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the data contained in the item if `Some` if this entry has the id given, decoded\n to the type provided `T`.\n","sig":null,"attributes":[{"value":"/ Returns the data contained in the item if `Some` if this entry has the id given, decoded","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74124,"byte_end":74216,"line_start":265,"line_end":265,"column_start":2,"column_end":94}},{"value":"/ to the type provided `T`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74218,"byte_end":74247,"line_start":266,"line_end":266,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":75602,"byte_end":75622,"line_start":312,"line_end":312,"column_start":9,"column_end":29},"name":"as_changes_trie_root","qualname":"<DigestItemRef>::as_changes_trie_root","value":"fn (&self) -> Option<&'a Hash>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `ChangesTrieRoot`.\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `ChangesTrieRoot`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":75544,"byte_end":75593,"line_start":311,"line_end":311,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":75828,"byte_end":75842,"line_start":320,"line_end":320,"column_start":9,"column_end":23},"name":"as_pre_runtime","qualname":"<DigestItemRef>::as_pre_runtime","value":"fn (&self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `PreRuntime`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `PreRuntime`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":75776,"byte_end":75819,"line_start":319,"line_end":319,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76082,"byte_end":76094,"line_start":328,"line_end":328,"column_start":9,"column_end":21},"name":"as_consensus","qualname":"<DigestItemRef>::as_consensus","value":"fn (&self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `Consensus`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `Consensus`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76031,"byte_end":76073,"line_start":327,"line_end":327,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76328,"byte_end":76335,"line_start":336,"line_end":336,"column_start":9,"column_end":16},"name":"as_seal","qualname":"<DigestItemRef>::as_seal","value":"fn (&self) -> Option<(ConsensusEngineId, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `Seal`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `Seal`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76282,"byte_end":76319,"line_start":335,"line_end":335,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76578,"byte_end":76600,"line_start":344,"line_end":344,"column_start":9,"column_end":31},"name":"as_changes_trie_signal","qualname":"<DigestItemRef>::as_changes_trie_signal","value":"fn (&self) -> Option<&'a ChangesTrieSignal>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `ChangesTrieSignal`.\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `ChangesTrieSignal`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76518,"byte_end":76569,"line_start":343,"line_end":343,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76825,"byte_end":76833,"line_start":352,"line_end":352,"column_start":9,"column_end":17},"name":"as_other","qualname":"<DigestItemRef>::as_other","value":"fn (&self) -> Option<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Cast this digest item into `PreRuntime`\n","sig":null,"attributes":[{"value":"/ Cast this digest item into `PreRuntime`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76773,"byte_end":76816,"line_start":351,"line_end":351,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77091,"byte_end":77101,"line_start":361,"line_end":361,"column_start":9,"column_end":19},"name":"try_as_raw","qualname":"<DigestItemRef>::try_as_raw","value":"fn (&self, id: OpaqueDigestItemId) -> Option<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Try to match this digest item to the given opaque item identifier; if it matches, then\n return the opaque data it contains.\n","sig":null,"attributes":[{"value":"/ Try to match this digest item to the given opaque item identifier; if it matches, then","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":76951,"byte_end":77041,"line_start":359,"line_end":359,"column_start":2,"column_end":92}},{"value":"/ return the opaque data it contains.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77043,"byte_end":77082,"line_start":360,"line_end":360,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77681,"byte_end":77687,"line_start":374,"line_end":374,"column_start":9,"column_end":15},"name":"try_to","qualname":"<DigestItemRef>::try_to","value":"fn <T> (&self, id: OpaqueDigestItemId) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Try to match this digest item to the given opaque item identifier; if it matches, then\n try to cast to the given data type; if that works, return it.\n","sig":null,"attributes":[{"value":"/ Try to match this digest item to the given opaque item identifier; if it matches, then","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77515,"byte_end":77605,"line_start":372,"line_end":372,"column_start":2,"column_end":92}},{"value":"/ try to cast to the given data type; if that works, return it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77607,"byte_end":77672,"line_start":373,"line_end":373,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":78883,"byte_end":78903,"line_start":416,"line_end":416,"column_start":9,"column_end":29},"name":"as_new_configuration","qualname":"<ChangesTrieSignal>::as_new_configuration","value":"fn (&self) -> Option<&Option<ChangesTrieConfiguration>>","parent":null,"children":[],"decl_id":null,"docs":" Try to cast this signal to NewConfiguration.\n","sig":null,"attributes":[{"value":"/ Try to cast this signal to NewConfiguration.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":78826,"byte_end":78874,"line_start":415,"line_end":415,"column_start":2,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":444},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offchain","qualname":"::offchain","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/mod.rs","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":523},{"krate":0,"index":546}],"decl_id":null,"docs":" A collection of higher lever helpers for offchain calls.\n","sig":null,"attributes":[{"value":"! A collection of higher lever helpers for offchain calls.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/mod.rs","byte_start":80202,"byte_end":80262,"line_start":18,"line_end":18,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":445},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"http","qualname":"::offchain::http","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":2207},{"krate":0,"index":2230},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2221},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":2246},{"krate":0,"index":2273},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2254},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":472},{"krate":0,"index":481},{"krate":0,"index":2277},{"krate":0,"index":2292},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2284},{"krate":0,"index":2294},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2296},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":2305},{"krate":0,"index":2309},{"krate":0,"index":499},{"krate":0,"index":2311},{"krate":0,"index":2319},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":511},{"krate":0,"index":2321},{"krate":0,"index":2332},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2323},{"krate":0,"index":514},{"krate":0,"index":2334},{"krate":0,"index":2341},{"krate":0,"index":2338},{"krate":0,"index":517}],"decl_id":null,"docs":" A high-level helpers for making HTTP requests from Offchain Workers.","sig":null,"attributes":[{"value":"! A high-level helpers for making HTTP requests from Offchain Workers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81013,"byte_end":81085,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81086,"byte_end":81089,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! `sp-io` crate exposes a low level methods to make and control HTTP requests","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81090,"byte_end":81169,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! available only for Offchain Workers. Those might be hard to use","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81170,"byte_end":81237,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"! and usually that level of control is not really necessary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81238,"byte_end":81300,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"! This module aims to provide high-level wrappers for those APIs","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81301,"byte_end":81367,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"! to simplify making HTTP requests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81368,"byte_end":81405,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81406,"byte_end":81409,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81410,"byte_end":81413,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Example:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81414,"byte_end":81426,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"! ```rust,no_run","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81427,"byte_end":81445,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! use sp_runtime::offchain::http::Request;","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81446,"byte_end":81490,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81491,"byte_end":81494,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! // initiate a GET request to localhost:1234","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81495,"byte_end":81542,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"! let request: Request = Request::get(\"http://localhost:1234\");","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81543,"byte_end":81608,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"! let pending = request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81609,"byte_end":81634,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"! \t.add_header(\"X-Auth\", \"hunter2\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81635,"byte_end":81672,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"! \t.send()","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81673,"byte_end":81685,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"! \t.unwrap();","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81686,"byte_end":81701,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81702,"byte_end":81705,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! // wait for the response indefinitely","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81706,"byte_end":81747,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"! let mut response = pending.wait().unwrap();","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81748,"byte_end":81795,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81796,"byte_end":81799,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! // then check the headers","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81800,"byte_end":81829,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"! let mut headers = response.headers().into_iter();","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81830,"byte_end":81883,"line_start":42,"line_end":42,"column_start":1,"column_end":54}},{"value":"! assert_eq!(headers.current(), None);","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81884,"byte_end":81924,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81925,"byte_end":81928,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! // and collect the body","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81929,"byte_end":81956,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"! let body = response.body();","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81957,"byte_end":81988,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"! assert_eq!(body.clone().collect::<Vec<_>>(), b\"1234\".to_vec());","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":81989,"byte_end":82056,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"! assert_eq!(body.error(), &None);","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82057,"byte_end":82093,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82094,"byte_end":82101,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82460,"byte_end":82463,"line_start":67,"line_end":67,"column_start":2,"column_end":5},"name":"Get","qualname":"::offchain::http::Method::Get","value":"Method::Get","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" GET request\n","sig":null,"attributes":[{"value":"/ GET request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82443,"byte_end":82458,"line_start":66,"line_end":66,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2210},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82484,"byte_end":82488,"line_start":69,"line_end":69,"column_start":2,"column_end":6},"name":"Post","qualname":"::offchain::http::Method::Post","value":"Method::Post","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" POST request\n","sig":null,"attributes":[{"value":"/ POST request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82466,"byte_end":82482,"line_start":68,"line_end":68,"column_start":2,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82508,"byte_end":82511,"line_start":71,"line_end":71,"column_start":2,"column_end":5},"name":"Put","qualname":"::offchain::http::Method::Put","value":"Method::Put","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" PUT request\n","sig":null,"attributes":[{"value":"/ PUT request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82491,"byte_end":82506,"line_start":70,"line_end":70,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82533,"byte_end":82538,"line_start":73,"line_end":73,"column_start":2,"column_end":7},"name":"Patch","qualname":"::offchain::http::Method::Patch","value":"Method::Patch","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" PATCH request\n","sig":null,"attributes":[{"value":"/ PATCH request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82514,"byte_end":82531,"line_start":72,"line_end":72,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82561,"byte_end":82567,"line_start":75,"line_end":75,"column_start":2,"column_end":8},"name":"Delete","qualname":"::offchain::http::Method::Delete","value":"Method::Delete","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" DELETE request\n","sig":null,"attributes":[{"value":"/ DELETE request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82541,"byte_end":82559,"line_start":74,"line_end":74,"column_start":2,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82587,"byte_end":82592,"line_start":77,"line_end":77,"column_start":2,"column_end":7},"name":"Other","qualname":"::offchain::http::Method::Other","value":"Method::Other(&'static str)","parent":{"krate":0,"index":2207},"children":[],"decl_id":null,"docs":" Custom verb\n","sig":null,"attributes":[{"value":"/ Custom verb","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82570,"byte_end":82585,"line_start":76,"line_end":76,"column_start":2,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2207},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82433,"byte_end":82439,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"name":"Method","qualname":"::offchain::http::Method","value":"Method::{Get, Post, Put, Patch, Delete, Other}","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218}],"decl_id":null,"docs":" Request method (HTTP verb)\n","sig":null,"attributes":[{"value":"/ Request method (HTTP verb)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82347,"byte_end":82377,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2246},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83902,"byte_end":83909,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"Request","qualname":"::offchain::http::Request","value":"Request { method, url, body, deadline }","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253}],"decl_id":null,"docs":" An HTTP request builder.\n","sig":null,"attributes":[{"value":"/ An HTTP request builder.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83816,"byte_end":83844,"line_start":130,"line_end":130,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2249},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83965,"byte_end":83971,"line_start":134,"line_end":134,"column_start":6,"column_end":12},"name":"method","qualname":"::offchain::http::Request::method","value":"offchain::http::Method","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Request method\n","sig":null,"attributes":[{"value":"/ Request method","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83941,"byte_end":83959,"line_start":133,"line_end":133,"column_start":2,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2250},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84003,"byte_end":84006,"line_start":136,"line_end":136,"column_start":6,"column_end":9},"name":"url","qualname":"::offchain::http::Request::url","value":"&'a str","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Request URL\n","sig":null,"attributes":[{"value":"/ Request URL","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83982,"byte_end":83997,"line_start":135,"line_end":135,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2251},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84047,"byte_end":84051,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"name":"body","qualname":"::offchain::http::Request::body","value":"T","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Body of the request\n","sig":null,"attributes":[{"value":"/ Body of the request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84018,"byte_end":84041,"line_start":137,"line_end":137,"column_start":2,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2252},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84105,"byte_end":84113,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"name":"deadline","qualname":"::offchain::http::Request::deadline","value":"std::option::Option<sp_core::offchain::Timestamp>","parent":{"krate":0,"index":2246},"children":[],"decl_id":null,"docs":" Deadline to finish sending the request\n","sig":null,"attributes":[{"value":"/ Deadline to finish sending the request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84057,"byte_end":84099,"line_start":139,"line_end":139,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84482,"byte_end":84485,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"name":"get","qualname":"<Request>::get","value":"fn (url: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start a simple GET request\n","sig":null,"attributes":[{"value":"/ Start a simple GET request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84443,"byte_end":84473,"line_start":158,"line_end":158,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84616,"byte_end":84620,"line_start":166,"line_end":166,"column_start":9,"column_end":13},"name":"post","qualname":"<Request>::post","value":"fn (url: &'a str, body: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new POST request with given body.\n","sig":null,"attributes":[{"value":"/ Create new POST request with given body.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84563,"byte_end":84607,"line_start":165,"line_end":165,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84912,"byte_end":84915,"line_start":181,"line_end":181,"column_start":9,"column_end":12},"name":"new","qualname":"<Request>::new","value":"fn (url: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new Request builder with the given URL.\n","sig":null,"attributes":[{"value":"/ Create a new Request builder with the given URL.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84851,"byte_end":84903,"line_start":180,"line_end":180,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85020,"byte_end":85026,"line_start":186,"line_end":186,"column_start":9,"column_end":15},"name":"method","qualname":"<Request>::method","value":"fn (mut self, method: Method) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the method of the request\n","sig":null,"attributes":[{"value":"/ Change the method of the request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84975,"byte_end":85011,"line_start":185,"line_end":185,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85142,"byte_end":85145,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"name":"url","qualname":"<Request>::url","value":"fn (mut self, url: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the URL of the request.\n","sig":null,"attributes":[{"value":"/ Change the URL of the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85099,"byte_end":85133,"line_start":191,"line_end":191,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85251,"byte_end":85255,"line_start":198,"line_end":198,"column_start":9,"column_end":13},"name":"body","qualname":"<Request>::body","value":"fn (mut self, body: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the body of the request.\n","sig":null,"attributes":[{"value":"/ Set the body of the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85210,"byte_end":85242,"line_start":197,"line_end":197,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85343,"byte_end":85353,"line_start":204,"line_end":204,"column_start":9,"column_end":19},"name":"add_header","qualname":"<Request>::add_header","value":"fn (mut self, name: &str, value: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a header.\n","sig":null,"attributes":[{"value":"/ Add a header.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85317,"byte_end":85334,"line_start":203,"line_end":203,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85511,"byte_end":85519,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"name":"deadline","qualname":"<Request>::deadline","value":"fn (mut self, deadline: Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the deadline of the request.\n","sig":null,"attributes":[{"value":"/ Set the deadline of the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85466,"byte_end":85502,"line_start":209,"line_end":209,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85814,"byte_end":85818,"line_start":221,"line_end":221,"column_start":9,"column_end":13},"name":"send","qualname":"<Request>::send","value":"fn (self) -> Result<PendingRequest, HttpError>","parent":null,"children":[],"decl_id":null,"docs":" Send the request and return a handle.","sig":null,"attributes":[{"value":"/ Send the request and return a handle.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85676,"byte_end":85717,"line_start":217,"line_end":217,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85719,"byte_end":85722,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ Err is returned in case the deadline is reached","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85724,"byte_end":85775,"line_start":219,"line_end":219,"column_start":2,"column_end":53}},{"value":"/ or the request timeouts.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85777,"byte_end":85805,"line_start":220,"line_end":220,"column_start":2,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86617,"byte_end":86632,"line_start":258,"line_end":258,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::http::Error::DeadlineReached","value":"Error::DeadlineReached","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Deadline has been reached.\n","sig":null,"attributes":[{"value":"/ Deadline has been reached.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86585,"byte_end":86615,"line_start":257,"line_end":257,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2280},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86663,"byte_end":86670,"line_start":260,"line_end":260,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::http::Error::IoError","value":"Error::IoError","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Request had timed out.\n","sig":null,"attributes":[{"value":"/ Request had timed out.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86635,"byte_end":86661,"line_start":259,"line_end":259,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2282},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86714,"byte_end":86721,"line_start":262,"line_end":262,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::offchain::http::Error::Unknown","value":"Error::Unknown","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Unknown error has been encountered.\n","sig":null,"attributes":[{"value":"/ Unknown error has been encountered.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86673,"byte_end":86712,"line_start":261,"line_end":261,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2277},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86576,"byte_end":86581,"line_start":256,"line_end":256,"column_start":10,"column_end":15},"name":"Error","qualname":"::offchain::http::Error","value":"Error::{DeadlineReached, IoError, Unknown}","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2282}],"decl_id":null,"docs":" A request error\n","sig":null,"attributes":[{"value":"/ A request error","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86501,"byte_end":86520,"line_start":254,"line_end":254,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2294},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86831,"byte_end":86845,"line_start":267,"line_end":267,"column_start":12,"column_end":26},"name":"PendingRequest","qualname":"::offchain::http::PendingRequest","value":"PendingRequest { id }","parent":null,"children":[{"krate":0,"index":2295}],"decl_id":null,"docs":" A struct representing an uncompleted http request.\n","sig":null,"attributes":[{"value":"/ A struct representing an uncompleted http request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86726,"byte_end":86780,"line_start":265,"line_end":265,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2295},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86869,"byte_end":86871,"line_start":269,"line_end":269,"column_start":6,"column_end":8},"name":"id","qualname":"::offchain::http::PendingRequest::id","value":"sp_core::offchain::HttpRequestId","parent":{"krate":0,"index":2294},"children":[],"decl_id":null,"docs":" Request ID\n","sig":null,"attributes":[{"value":"/ Request ID","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86849,"byte_end":86863,"line_start":268,"line_end":268,"column_start":2,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":488},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86943,"byte_end":86953,"line_start":273,"line_end":273,"column_start":10,"column_end":20},"name":"HttpResult","qualname":"::offchain::http::HttpResult","value":"Result<Response, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result of waiting for a pending request.\n","sig":null,"attributes":[{"value":"/ A result of waiting for a pending request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86887,"byte_end":86933,"line_start":272,"line_end":272,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87107,"byte_end":87111,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"wait","qualname":"<PendingRequest>::wait","value":"fn (self) -> HttpResult","parent":null,"children":[],"decl_id":null,"docs":" Wait for the request to complete.","sig":null,"attributes":[{"value":"/ Wait for the request to complete.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87005,"byte_end":87042,"line_start":276,"line_end":276,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87044,"byte_end":87047,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ NOTE this waits for the request indefinitely.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87049,"byte_end":87098,"line_start":278,"line_end":278,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87395,"byte_end":87403,"line_start":288,"line_end":288,"column_start":9,"column_end":17},"name":"try_wait","qualname":"<PendingRequest>::try_wait","value":"fn (self, deadline: impl Into<Option<Timestamp>>) -> Result<HttpResult, PendingRequest>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to wait for the request to finish,\n but will return `Err` in case the deadline is reached.\n","sig":null,"attributes":[{"value":"/ Attempts to wait for the request to finish,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87279,"byte_end":87326,"line_start":286,"line_end":286,"column_start":2,"column_end":49}},{"value":"/ but will return `Err` in case the deadline is reached.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87328,"byte_end":87386,"line_start":287,"line_end":287,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87643,"byte_end":87651,"line_start":293,"line_end":293,"column_start":9,"column_end":17},"name":"wait_all","qualname":"<PendingRequest>::wait_all","value":"fn (requests: Vec<PendingRequest>) -> Vec<HttpResult>","parent":null,"children":[],"decl_id":null,"docs":" Wait for all provided requests.\n","sig":null,"attributes":[{"value":"/ Wait for all provided requests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87599,"byte_end":87634,"line_start":292,"line_end":292,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88096,"byte_end":88108,"line_start":306,"line_end":306,"column_start":9,"column_end":21},"name":"try_wait_all","qualname":"<PendingRequest>::try_wait_all","value":"fn (requests: Vec<PendingRequest>, deadline: impl Into<Option<Timestamp>>) -> Vec<Result<HttpResult, PendingRequest>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to wait for all provided requests, but up to given deadline.","sig":null,"attributes":[{"value":"/ Attempt to wait for all provided requests, but up to given deadline.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87908,"byte_end":87980,"line_start":303,"line_end":303,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87982,"byte_end":87985,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ Requests that are complete will resolve to an `Ok` others will return a `DeadlineReached` error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":87987,"byte_end":88087,"line_start":305,"line_end":305,"column_start":2,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":2305},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88783,"byte_end":88791,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"Response","qualname":"::offchain::http::Response","value":"Response { id, code }","parent":null,"children":[{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308}],"decl_id":null,"docs":" A HTTP response.\n","sig":null,"attributes":[{"value":"/ A HTTP response.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88727,"byte_end":88747,"line_start":326,"line_end":326,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2306},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88815,"byte_end":88817,"line_start":330,"line_end":330,"column_start":6,"column_end":8},"name":"id","qualname":"::offchain::http::Response::id","value":"sp_core::offchain::HttpRequestId","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Request id\n","sig":null,"attributes":[{"value":"/ Request id","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88795,"byte_end":88809,"line_start":329,"line_end":329,"column_start":2,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2307},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88861,"byte_end":88865,"line_start":332,"line_end":332,"column_start":6,"column_end":10},"name":"code","qualname":"::offchain::http::Response::code","value":"u16","parent":{"krate":0,"index":2305},"children":[],"decl_id":null,"docs":" Response status code\n","sig":null,"attributes":[{"value":"/ Response status code","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88831,"byte_end":88855,"line_start":331,"line_end":331,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89096,"byte_end":89103,"line_start":347,"line_end":347,"column_start":9,"column_end":16},"name":"headers","qualname":"<Response>::headers","value":"fn (&mut self) -> &Headers","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the headers for this response.\n","sig":null,"attributes":[{"value":"/ Retrieve the headers for this response.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89044,"byte_end":89087,"line_start":346,"line_end":346,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89377,"byte_end":89381,"line_start":357,"line_end":357,"column_start":9,"column_end":13},"name":"body","qualname":"<Response>::body","value":"fn (&self) -> ResponseBody","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the body of this response.\n","sig":null,"attributes":[{"value":"/ Retrieve the body of this response.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89329,"byte_end":89368,"line_start":356,"line_end":356,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2311},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89919,"byte_end":89931,"line_start":371,"line_end":371,"column_start":12,"column_end":24},"name":"ResponseBody","qualname":"::offchain::http::ResponseBody","value":"ResponseBody {  }","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318}],"decl_id":null,"docs":" A buffered byte iterator over response body.","sig":null,"attributes":[{"value":"/ A buffered byte iterator over response body.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89442,"byte_end":89490,"line_start":362,"line_end":362,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89491,"byte_end":89494,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ Note that reading the body may return `None` in following cases:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89495,"byte_end":89563,"line_start":364,"line_end":364,"column_start":1,"column_end":69}},{"value":"/ 1. Either the deadline you've set is reached (check via `#error`;","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89564,"byte_end":89633,"line_start":365,"line_end":365,"column_start":1,"column_end":70}},{"value":"/\t   In such case you can resume the reader by setting a new deadline)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89634,"byte_end":89706,"line_start":366,"line_end":366,"column_start":1,"column_end":73}},{"value":"/ 2. Or because of IOError. In such case the reader is not resumable and will keep","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89707,"byte_end":89791,"line_start":367,"line_end":367,"column_start":1,"column_end":85}},{"value":"/    returning `None`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89792,"byte_end":89816,"line_start":368,"line_end":368,"column_start":1,"column_end":25}},{"value":"/ 3. The body has been returned. The reader will keep returning `None`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":89817,"byte_end":89890,"line_start":369,"line_end":369,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90721,"byte_end":90729,"line_start":407,"line_end":407,"column_start":9,"column_end":17},"name":"deadline","qualname":"<ResponseBody>::deadline","value":"fn (&mut self, deadline: impl Into<Option<Timestamp>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the deadline for reading the body.\n","sig":null,"attributes":[{"value":"/ Set the deadline for reading the body.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90670,"byte_end":90712,"line_start":406,"line_end":406,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91019,"byte_end":91024,"line_start":416,"line_end":416,"column_start":9,"column_end":14},"name":"error","qualname":"<ResponseBody>::error","value":"fn (&self) -> &Option<HttpError>","parent":null,"children":[],"decl_id":null,"docs":" Return an error that caused the iterator to return `None`.","sig":null,"attributes":[{"value":"/ Return an error that caused the iterator to return `None`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90844,"byte_end":90906,"line_start":412,"line_end":412,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90908,"byte_end":90911,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ If the error is `DeadlineReached` you can resume the iterator by setting","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90913,"byte_end":90989,"line_start":414,"line_end":414,"column_start":2,"column_end":78}},{"value":"/ a new deadline.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90991,"byte_end":91010,"line_start":415,"line_end":415,"column_start":2,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91889,"byte_end":91896,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"Headers","qualname":"::offchain::http::Headers","value":"Headers { raw }","parent":null,"children":[{"krate":0,"index":2322}],"decl_id":null,"docs":" A collection of Headers in the response.\n","sig":null,"attributes":[{"value":"/ A collection of Headers in the response.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91787,"byte_end":91831,"line_start":460,"line_end":460,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2322},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91921,"byte_end":91924,"line_start":464,"line_end":464,"column_start":6,"column_end":9},"name":"raw","qualname":"::offchain::http::Headers::raw","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>","parent":{"krate":0,"index":2321},"children":[],"decl_id":null,"docs":" Raw headers\n","sig":null,"attributes":[{"value":"/ Raw headers","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91900,"byte_end":91915,"line_start":463,"line_end":463,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92254,"byte_end":92258,"line_start":474,"line_end":474,"column_start":9,"column_end":13},"name":"find","qualname":"<Headers>::find","value":"fn (&self, name: &str) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a single header from the list of headers.","sig":null,"attributes":[{"value":"/ Retrieve a single header from the list of headers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91970,"byte_end":92024,"line_start":468,"line_end":468,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92026,"byte_end":92029,"line_start":469,"line_end":469,"column_start":2,"column_end":5}},{"value":"/ Note this method is linearly looking from all the headers","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92031,"byte_end":92092,"line_start":470,"line_end":470,"column_start":2,"column_end":63}},{"value":"/ comparing them with the needle byte-by-byte.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92094,"byte_end":92142,"line_start":471,"line_end":471,"column_start":2,"column_end":50}},{"value":"/ If you want to consume multiple headers it's better to iterate","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92144,"byte_end":92210,"line_start":472,"line_end":472,"column_start":2,"column_end":68}},{"value":"/ and collect them on your own.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92212,"byte_end":92245,"line_start":473,"line_end":473,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92497,"byte_end":92506,"line_start":485,"line_end":485,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<Headers>::into_iter","value":"fn (&self) -> HeadersIterator","parent":null,"children":[],"decl_id":null,"docs":" Convert this headers into an iterator.\n","sig":null,"attributes":[{"value":"/ Convert this headers into an iterator.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92446,"byte_end":92488,"line_start":484,"line_end":484,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2334},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92690,"byte_end":92705,"line_start":492,"line_end":492,"column_start":12,"column_end":27},"name":"HeadersIterator","qualname":"::offchain::http::HeadersIterator","value":"HeadersIterator {  }","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2337}],"decl_id":null,"docs":" A custom iterator traversing all the headers.\n","sig":null,"attributes":[{"value":"/ A custom iterator traversing all the headers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92598,"byte_end":92647,"line_start":490,"line_end":490,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92926,"byte_end":92930,"line_start":501,"line_end":501,"column_start":9,"column_end":13},"name":"next","qualname":"<HeadersIterator>::next","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Move the iterator to the next position.","sig":null,"attributes":[{"value":"/ Move the iterator to the next position.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92809,"byte_end":92852,"line_start":498,"line_end":498,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92854,"byte_end":92857,"line_start":499,"line_end":499,"column_start":2,"column_end":5}},{"value":"/ Returns `true` is `current` has been set by this call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92859,"byte_end":92917,"line_start":500,"line_end":500,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":93183,"byte_end":93190,"line_start":510,"line_end":510,"column_start":9,"column_end":16},"name":"current","qualname":"<HeadersIterator>::current","value":"fn (&self) -> Option<(&str, &str)>","parent":null,"children":[],"decl_id":null,"docs":" Returns current element (if any).","sig":null,"attributes":[{"value":"/ Returns current element (if any).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":93071,"byte_end":93108,"line_start":507,"line_end":507,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":93110,"byte_end":93113,"line_start":508,"line_end":508,"column_start":2,"column_end":5}},{"value":"/ Note that you have to call `next` prior to calling this","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":93115,"byte_end":93174,"line_start":509,"line_end":509,"column_start":2,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::offchain::storage","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":530}],"decl_id":null,"docs":" A set of storage helpers for offchain workers.\n","sig":null,"attributes":[{"value":"! A set of storage helpers for offchain workers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96434,"byte_end":96484,"line_start":18,"line_end":18,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":525},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96571,"byte_end":96583,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"StorageValue","qualname":"::offchain::storage::StorageValue","value":"StorageValueRef<'static>","parent":null,"children":[],"decl_id":null,"docs":" A storage value with a static key.\n","sig":null,"attributes":[{"value":"/ A storage value with a static key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96523,"byte_end":96561,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96669,"byte_end":96684,"line_start":26,"line_end":26,"column_start":12,"column_end":27},"name":"StorageValueRef","qualname":"::offchain::storage::StorageValueRef","value":"StorageValueRef {  }","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" An abstraction over local storage value.\n","sig":null,"attributes":[{"value":"/ An abstraction over local storage value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96613,"byte_end":96657,"line_start":25,"line_end":25,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96841,"byte_end":96851,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"persistent","qualname":"<StorageValueRef>::persistent","value":"fn (key: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new reference to a value in the persistent local storage.\n","sig":null,"attributes":[{"value":"/ Create a new reference to a value in the persistent local storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96762,"byte_end":96832,"line_start":32,"line_end":32,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97007,"byte_end":97012,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"local","qualname":"<StorageValueRef>::local","value":"fn (key: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new reference to a value in the fork-aware local storage.\n","sig":null,"attributes":[{"value":"/ Create a new reference to a value in the fork-aware local storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96928,"byte_end":96998,"line_start":37,"line_end":37,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97347,"byte_end":97350,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"set","qualname":"<StorageValueRef>::set","value":"fn (&self, value: &impl codec::Encode) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the storage to encoding of given parameter.","sig":null,"attributes":[{"value":"/ Set the value of the storage to encoding of given parameter.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97084,"byte_end":97148,"line_start":42,"line_end":42,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97150,"byte_end":97153,"line_start":43,"line_end":43,"column_start":2,"column_end":5}},{"value":"/ Note that the storage may be accessed by workers running concurrently,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97155,"byte_end":97229,"line_start":44,"line_end":44,"column_start":2,"column_end":76}},{"value":"/ if you happen to write a `get-check-set` pattern you should most likely","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97231,"byte_end":97306,"line_start":45,"line_end":45,"column_start":2,"column_end":77}},{"value":"/ be using `mutate` instead.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97308,"byte_end":97338,"line_start":46,"line_end":46,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97821,"byte_end":97824,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"get","qualname":"<StorageValueRef>::get","value":"fn <T> (&self) -> Option<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve & decode the value from storage.","sig":null,"attributes":[{"value":"/ Retrieve & decode the value from storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97492,"byte_end":97537,"line_start":53,"line_end":53,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97539,"byte_end":97542,"line_start":54,"line_end":54,"column_start":2,"column_end":5}},{"value":"/ Note that if you want to do some checks based on the value","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97544,"byte_end":97606,"line_start":55,"line_end":55,"column_start":2,"column_end":64}},{"value":"/ and write changes after that you should rather be using `mutate`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97608,"byte_end":97677,"line_start":56,"line_end":56,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97679,"byte_end":97682,"line_start":57,"line_end":57,"column_start":2,"column_end":5}},{"value":"/ The function returns `None` if the value was not found in storage,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97684,"byte_end":97754,"line_start":58,"line_end":58,"column_start":2,"column_end":72}},{"value":"/ otherwise a decoding of the value to requested type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97756,"byte_end":97812,"line_start":59,"line_end":59,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98371,"byte_end":98377,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"name":"mutate","qualname":"<StorageValueRef>::mutate","value":"fn <T, E, F> (&self, f: F) -> Result<Result<T, T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve & decode the value and set it to a new one atomically.","sig":null,"attributes":[{"value":"/ Retrieve & decode the value and set it to a new one atomically.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":97978,"byte_end":98045,"line_start":65,"line_end":65,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98047,"byte_end":98050,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ Function `f` should return a new value that we should attempt to write to storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98052,"byte_end":98138,"line_start":67,"line_end":67,"column_start":2,"column_end":88}},{"value":"/ This function returns:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98140,"byte_end":98166,"line_start":68,"line_end":68,"column_start":2,"column_end":28}},{"value":"/ 1. `Ok(Ok(T))` in case the value has been successfully set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98168,"byte_end":98231,"line_start":69,"line_end":69,"column_start":2,"column_end":65}},{"value":"/ 2. `Ok(Err(T))` in case the value was returned, but it couldn't have been set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98233,"byte_end":98315,"line_start":70,"line_end":70,"column_start":2,"column_end":84}},{"value":"/ 3. `Err(_)` in case `f` returns an error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":98317,"byte_end":98362,"line_start":71,"line_end":71,"column_start":2,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":547},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":554},{"krate":0,"index":560},{"krate":0,"index":564},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":590},{"krate":0,"index":2344},{"krate":0,"index":2409},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2400},{"krate":0,"index":2390},{"krate":0,"index":2385},{"krate":0,"index":2383},{"krate":0,"index":2380},{"krate":0,"index":2374},{"krate":0,"index":2355},{"krate":0,"index":2349},{"krate":0,"index":2347},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":2411},{"krate":0,"index":606},{"krate":0,"index":611},{"krate":0,"index":624},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":2415},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2458},{"krate":0,"index":2456},{"krate":0,"index":2453},{"krate":0,"index":2447},{"krate":0,"index":2430},{"krate":0,"index":2424},{"krate":0,"index":2419},{"krate":0,"index":636},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":2467},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2496},{"krate":0,"index":2490},{"krate":0,"index":2488},{"krate":0,"index":2482},{"krate":0,"index":2477},{"krate":0,"index":2475},{"krate":0,"index":2473},{"krate":0,"index":642},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":2505},{"krate":0,"index":2541},{"krate":0,"index":2543},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2533},{"krate":0,"index":2530},{"krate":0,"index":2518},{"krate":0,"index":2512},{"krate":0,"index":2509},{"krate":0,"index":664},{"krate":0,"index":669},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":2547},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2578},{"krate":0,"index":2571},{"krate":0,"index":2568},{"krate":0,"index":2560},{"krate":0,"index":2554},{"krate":0,"index":2551},{"krate":0,"index":681},{"krate":0,"index":691},{"krate":0,"index":2592},{"krate":0,"index":2625},{"krate":0,"index":2628},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2614},{"krate":0,"index":2604},{"krate":0,"index":2597},{"krate":0,"index":697},{"krate":0,"index":2633},{"krate":0,"index":701},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":717},{"krate":0,"index":724}],"decl_id":null,"docs":" Testing utilities.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1419,"byte_end":1442,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"! Testing utilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101026,"byte_end":101048,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2344},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102129,"byte_end":102144,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"UintAuthorityId","qualname":"::testing::UintAuthorityId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy type which can be used instead of regular cryptographic primitives.","sig":null,"attributes":[{"value":"/ A dummy type which can be used instead of regular cryptographic primitives.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101701,"byte_end":101780,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101781,"byte_end":101784,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ 1. Wraps a `u64` `AccountId` and is able to `IdentifyAccount`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101785,"byte_end":101851,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ 2. Can be converted to any `Public` key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101852,"byte_end":101896,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/ 3. Implements `RuntimeAppPublic` so it can be used instead of regular application-specific","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101897,"byte_end":101991,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/    crypto.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":101992,"byte_end":102006,"line_start":38,"line_end":38,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102419,"byte_end":102432,"line_start":56,"line_end":56,"column_start":9,"column_end":22},"name":"to_public_key","qualname":"<UintAuthorityId>::to_public_key","value":"fn <T> (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Convert this authority id into a public key.\n","sig":null,"attributes":[{"value":"/ Convert this authority id into a public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102362,"byte_end":102410,"line_start":55,"line_end":55,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":103198,"byte_end":103210,"line_start":83,"line_end":83,"column_start":9,"column_end":21},"name":"set_all_keys","qualname":"<UintAuthorityId>::set_all_keys","value":"fn <T> (keys: impl IntoIterator<Item = T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the list of keys returned by the runtime call for all keys of that type.\n","sig":null,"attributes":[{"value":"/ Set the list of keys returned by the runtime call for all keys of that type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":103109,"byte_end":103189,"line_start":82,"line_end":82,"column_start":2,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2415},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104785,"byte_end":104798,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"TestSignature","qualname":"::testing::TestSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dummy signature type, to match `UintAuthorityId`.\n","sig":null,"attributes":[{"value":"/ A dummy signature type, to match `UintAuthorityId`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104633,"byte_end":104688,"line_start":144,"line_end":144,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":640},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105052,"byte_end":105062,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"DigestItem","qualname":"::testing::DigestItem","value":"generic::DigestItem<H256>","parent":null,"children":[],"decl_id":null,"docs":" Digest item\n","sig":null,"attributes":[{"value":"/ Digest item","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105027,"byte_end":105042,"line_start":156,"line_end":156,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":641},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105120,"byte_end":105126,"line_start":160,"line_end":160,"column_start":10,"column_end":16},"name":"Digest","qualname":"::testing::Digest","value":"generic::Digest<H256>","parent":null,"children":[],"decl_id":null,"docs":" Header Digest\n","sig":null,"attributes":[{"value":"/ Header Digest","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105093,"byte_end":105110,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2467},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105352,"byte_end":105358,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"Header","qualname":"::testing::Header","value":"Header { parent_hash, number, state_root, extrinsics_root, digest }","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472}],"decl_id":null,"docs":" Block Header\n","sig":null,"attributes":[{"value":"/ Block Header","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105153,"byte_end":105169,"line_start":162,"line_end":162,"column_start":1,"column_end":17}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105276,"byte_end":105310,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"serde(deny_unknown_fields)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105311,"byte_end":105340,"line_start":165,"line_end":165,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2468},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105383,"byte_end":105394,"line_start":168,"line_end":168,"column_start":6,"column_end":17},"name":"parent_hash","qualname":"::testing::Header::parent_hash","value":"primitive_types::H256","parent":{"krate":0,"index":2467},"children":[],"decl_id":null,"docs":" Parent hash\n","sig":null,"attributes":[{"value":"/ Parent hash","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105362,"byte_end":105377,"line_start":167,"line_end":167,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2469},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105425,"byte_end":105431,"line_start":170,"line_end":170,"column_start":6,"column_end":12},"name":"number","qualname":"::testing::Header::number","value":"u64","parent":{"krate":0,"index":2467},"children":[],"decl_id":null,"docs":" Block Number\n","sig":null,"attributes":[{"value":"/ Block Number","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105403,"byte_end":105419,"line_start":169,"line_end":169,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2470},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105479,"byte_end":105489,"line_start":172,"line_end":172,"column_start":6,"column_end":16},"name":"state_root","qualname":"::testing::Header::state_root","value":"primitive_types::H256","parent":{"krate":0,"index":2467},"children":[],"decl_id":null,"docs":" Post-execution state trie root\n","sig":null,"attributes":[{"value":"/ Post-execution state trie root","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105439,"byte_end":105473,"line_start":171,"line_end":171,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2471},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105541,"byte_end":105556,"line_start":174,"line_end":174,"column_start":6,"column_end":21},"name":"extrinsics_root","qualname":"::testing::Header::extrinsics_root","value":"primitive_types::H256","parent":{"krate":0,"index":2467},"children":[],"decl_id":null,"docs":" Merkle root of block's extrinsics\n","sig":null,"attributes":[{"value":"/ Merkle root of block's extrinsics","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105498,"byte_end":105535,"line_start":173,"line_end":173,"column_start":2,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2472},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105587,"byte_end":105593,"line_start":176,"line_end":176,"column_start":6,"column_end":12},"name":"digest","qualname":"::testing::Header::digest","value":"generic::digest::Digest<primitive_types::H256>","parent":{"krate":0,"index":2467},"children":[],"decl_id":null,"docs":" Digest items\n","sig":null,"attributes":[{"value":"/ Digest items","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105565,"byte_end":105581,"line_start":175,"line_end":175,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":106706,"byte_end":106721,"line_start":218,"line_end":218,"column_start":9,"column_end":24},"name":"new_from_number","qualname":"<Header>::new_from_number","value":"fn (number: <Self as traits::Header>::Number) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new header with the given number and default hash for all other fields.\n","sig":null,"attributes":[{"value":"/ A new header with the given number and default hash for all other fields.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":106620,"byte_end":106697,"line_start":217,"line_end":217,"column_start":2,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2505},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107240,"byte_end":107256,"line_start":236,"line_end":236,"column_start":12,"column_end":28},"name":"ExtrinsicWrapper","qualname":"::testing::ExtrinsicWrapper","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque extrinsic wrapper type.\n","sig":null,"attributes":[{"value":"/ An opaque extrinsic wrapper type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107105,"byte_end":107142,"line_start":234,"line_end":234,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2547},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108015,"byte_end":108020,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"Block","qualname":"::testing::Block","value":"Block { header, extrinsics }","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"decl_id":null,"docs":" Testing block\n","sig":null,"attributes":[{"value":"/ Testing block","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107889,"byte_end":107906,"line_start":269,"line_end":269,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2549},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108050,"byte_end":108056,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"name":"header","qualname":"::testing::Block::header","value":"testing::Header","parent":{"krate":0,"index":2547},"children":[],"decl_id":null,"docs":" Block header\n","sig":null,"attributes":[{"value":"/ Block header","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108028,"byte_end":108044,"line_start":272,"line_end":272,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2550},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108095,"byte_end":108105,"line_start":275,"line_end":275,"column_start":6,"column_end":16},"name":"extrinsics","qualname":"::testing::Block::extrinsics","value":"std::vec::Vec<Xt>","parent":{"krate":0,"index":2547},"children":[],"decl_id":null,"docs":" List of extrinsics\n","sig":null,"attributes":[{"value":"/ List of extrinsics","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108067,"byte_end":108089,"line_start":274,"line_end":274,"column_start":2,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2592},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109355,"byte_end":109361,"line_start":315,"line_end":315,"column_start":12,"column_end":18},"name":"TestXt","qualname":"::testing::TestXt","value":"TestXt { signature, call }","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596}],"decl_id":null,"docs":" Test transaction, tuple of (sender, call, signed_extra)\n with index only used if sender is some.","sig":null,"attributes":[{"value":"/ Test transaction, tuple of (sender, call, signed_extra)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109109,"byte_end":109168,"line_start":310,"line_end":310,"column_start":1,"column_end":60}},{"value":"/ with index only used if sender is some.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109169,"byte_end":109212,"line_start":311,"line_end":311,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109213,"byte_end":109216,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ If sender is some then the transaction is signed otherwise it is unsigned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109217,"byte_end":109295,"line_start":313,"line_end":313,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2595},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109415,"byte_end":109424,"line_start":317,"line_end":317,"column_start":6,"column_end":15},"name":"signature","qualname":"::testing::TestXt::signature","value":"std::option::Option<(u64, Extra)>","parent":{"krate":0,"index":2592},"children":[],"decl_id":null,"docs":" Signature of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Signature of the extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109378,"byte_end":109409,"line_start":316,"line_end":316,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2596},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109481,"byte_end":109485,"line_start":319,"line_end":319,"column_start":6,"column_end":10},"name":"call","qualname":"::testing::TestXt::call","value":"Call","parent":{"krate":0,"index":2592},"children":[],"decl_id":null,"docs":" Call of the extrinsic.\n","sig":null,"attributes":[{"value":"/ Call of the extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109449,"byte_end":109475,"line_start":318,"line_end":318,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109572,"byte_end":109575,"line_start":324,"line_end":324,"column_start":9,"column_end":12},"name":"new","qualname":"<TestXt<Call, Extra>>::new","value":"fn (call: Call, signature: Option<(u64, Extra)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TextXt`.\n","sig":null,"attributes":[{"value":"/ Create a new `TextXt`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109537,"byte_end":109563,"line_start":323,"line_end":323,"column_start":2,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":733},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":754},{"krate":0,"index":758},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":808},{"krate":0,"index":812},{"krate":0,"index":816},{"krate":0,"index":820},{"krate":0,"index":824},{"krate":0,"index":2638},{"krate":0,"index":2645},{"krate":0,"index":2640},{"krate":0,"index":831},{"krate":0,"index":2651},{"krate":0,"index":2660},{"krate":0,"index":2655},{"krate":0,"index":2653},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":841},{"krate":0,"index":2666},{"krate":0,"index":2670},{"krate":0,"index":846},{"krate":0,"index":852},{"krate":0,"index":857},{"krate":0,"index":861},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":876},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":889},{"krate":0,"index":2673},{"krate":0,"index":2678},{"krate":0,"index":2683},{"krate":0,"index":2688},{"krate":0,"index":2693},{"krate":0,"index":2698},{"krate":0,"index":2703},{"krate":0,"index":2708},{"krate":0,"index":2713},{"krate":0,"index":2718},{"krate":0,"index":2723},{"krate":0,"index":2728},{"krate":0,"index":2733},{"krate":0,"index":2738},{"krate":0,"index":2743},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":900},{"krate":0,"index":2748},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2773},{"krate":0,"index":2771},{"krate":0,"index":2765},{"krate":0,"index":2750},{"krate":0,"index":907},{"krate":0,"index":912},{"krate":0,"index":2781},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2806},{"krate":0,"index":2804},{"krate":0,"index":2798},{"krate":0,"index":2783},{"krate":0,"index":916},{"krate":0,"index":921},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":955},{"krate":0,"index":965},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":993},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1009},{"krate":0,"index":2832},{"krate":0,"index":2848},{"krate":0,"index":2865},{"krate":0,"index":2883},{"krate":0,"index":2902},{"krate":0,"index":2922},{"krate":0,"index":2943},{"krate":0,"index":2965},{"krate":0,"index":2988},{"krate":0,"index":3012},{"krate":0,"index":3037},{"krate":0,"index":3063},{"krate":0,"index":1024},{"krate":0,"index":1031},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1046},{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1062},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1078},{"krate":0,"index":1087},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3102},{"krate":0,"index":3108},{"krate":0,"index":3115},{"krate":0,"index":3123},{"krate":0,"index":3132},{"krate":0,"index":3142},{"krate":0,"index":3153},{"krate":0,"index":3165},{"krate":0,"index":3178},{"krate":0,"index":1120}],"decl_id":null,"docs":" Primitives for the runtime modules.\n","sig":null,"attributes":[{"value":"! Primitives for the runtime modules.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":112535,"byte_end":112574,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113523,"byte_end":113527,"line_start":46,"line_end":46,"column_start":11,"column_end":15},"name":"Lazy","qualname":"::traits::Lazy","value":"Lazy<T: ?Sized>","parent":null,"children":[{"krate":0,"index":788}],"decl_id":null,"docs":" A lazy value.\n","sig":null,"attributes":[{"value":"/ A lazy value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113495,"byte_end":113512,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113676,"byte_end":113679,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::Lazy::get","value":"fn (&mut self) -> &T","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Get a reference to the underlying value.","sig":null,"attributes":[{"value":"/ Get a reference to the underlying value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113542,"byte_end":113586,"line_start":47,"line_end":47,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113588,"byte_end":113591,"line_start":48,"line_end":48,"column_start":2,"column_end":5}},{"value":"/ This will compute the value if the function is invoked for the first time.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113593,"byte_end":113671,"line_start":49,"line_end":49,"column_start":2,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":792},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113927,"byte_end":113942,"line_start":59,"line_end":59,"column_start":11,"column_end":26},"name":"IdentifyAccount","qualname":"::traits::IdentifyAccount","value":"IdentifyAccount","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"decl_id":null,"docs":" Some type that is able to be collapsed into an account ID. It is not possible to recreate the\n original value from the account ID.\n","sig":null,"attributes":[{"value":"/ Some type that is able to be collapsed into an account ID. It is not possible to recreate the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113779,"byte_end":113876,"line_start":57,"line_end":57,"column_start":1,"column_end":98}},{"value":"/ original value from the account ID.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113877,"byte_end":113916,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":793},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114006,"byte_end":114015,"line_start":61,"line_end":61,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::IdentifyAccount::AccountId","value":"type AccountId;","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" The account ID that this can be transformed into.\n","sig":null,"attributes":[{"value":"/ The account ID that this can be transformed into.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":113946,"byte_end":113999,"line_start":60,"line_end":60,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114053,"byte_end":114065,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"name":"into_account","qualname":"::traits::IdentifyAccount::into_account","value":"fn (self) -> Self::AccountId","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Transform into an account.\n","sig":null,"attributes":[{"value":"/ Transform into an account.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114018,"byte_end":114048,"line_start":62,"line_end":62,"column_start":2,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":804},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114497,"byte_end":114503,"line_start":82,"line_end":82,"column_start":11,"column_end":17},"name":"Verify","qualname":"::traits::Verify","value":"Verify","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"decl_id":null,"docs":" Means of signature verification.\n","sig":null,"attributes":[{"value":"/ Means of signature verification.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114450,"byte_end":114486,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":805},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114537,"byte_end":114543,"line_start":84,"line_end":84,"column_start":7,"column_end":13},"name":"Signer","qualname":"::traits::Verify::Signer","value":"type Signer: IdentifyAccount;","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" Type of the signer.\n","sig":null,"attributes":[{"value":"/ Type of the signer.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114507,"byte_end":114530,"line_start":83,"line_end":83,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114652,"byte_end":114658,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"verify","qualname":"::traits::Verify::verify","value":"fn <L> (&self, msg: L, signer: &<Self::Signer as IdentifyAccount>::AccountId) -> bool","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":" Verify a signature.","sig":null,"attributes":[{"value":"/ Verify a signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114563,"byte_end":114586,"line_start":85,"line_end":85,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114588,"byte_end":114591,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ Return `true` if signature is valid for the value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114593,"byte_end":114647,"line_start":87,"line_end":87,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":820},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115683,"byte_end":115692,"line_start":121,"line_end":121,"column_start":11,"column_end":20},"name":"AppVerify","qualname":"::traits::AppVerify","value":"AppVerify","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"decl_id":null,"docs":" Means of signature verification of an application key.\n","sig":null,"attributes":[{"value":"/ Means of signature verification of an application key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115614,"byte_end":115672,"line_start":120,"line_end":120,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":821},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115726,"byte_end":115735,"line_start":123,"line_end":123,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::AppVerify::AccountId","value":"type AccountId;","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" Type of the signer.\n","sig":null,"attributes":[{"value":"/ Type of the signer.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115696,"byte_end":115719,"line_start":122,"line_end":122,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115817,"byte_end":115823,"line_start":125,"line_end":125,"column_start":5,"column_end":11},"name":"verify","qualname":"::traits::AppVerify::verify","value":"fn <L> (&self, msg: L, signer: &Self::AccountId) -> bool","parent":{"krate":0,"index":820},"children":[],"decl_id":null,"docs":" Verify a signature. Return `true` if signature is valid for the value.\n","sig":null,"attributes":[{"value":"/ Verify a signature. Return `true` if signature is valid for the value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115738,"byte_end":115812,"line_start":124,"line_end":124,"column_start":2,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2638},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":116876,"byte_end":116885,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"BadOrigin","qualname":"::traits::BadOrigin","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type that indicates that the origin is invalid.\n","sig":null,"attributes":[{"value":"/ An error type that indicates that the origin is invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":116778,"byte_end":116838,"line_start":146,"line_end":146,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2651},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117091,"byte_end":117102,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"LookupError","qualname":"::traits::LookupError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that indicates that a lookup failed.\n","sig":null,"attributes":[{"value":"/ An error that indicates that a lookup failed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":116990,"byte_end":117039,"line_start":156,"line_end":156,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":837},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117448,"byte_end":117454,"line_start":173,"line_end":173,"column_start":11,"column_end":17},"name":"Lookup","qualname":"::traits::Lookup","value":"Lookup","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"decl_id":null,"docs":" Means of changing one type into another in a manner dependent on the source type.\n","sig":null,"attributes":[{"value":"/ Means of changing one type into another in a manner dependent on the source type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117352,"byte_end":117437,"line_start":172,"line_end":172,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":838},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117489,"byte_end":117495,"line_start":175,"line_end":175,"column_start":7,"column_end":13},"name":"Source","qualname":"::traits::Lookup::Source","value":"type Source;","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Type to lookup from.\n","sig":null,"attributes":[{"value":"/ Type to lookup from.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117458,"byte_end":117482,"line_start":174,"line_end":174,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":839},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117529,"byte_end":117535,"line_start":177,"line_end":177,"column_start":7,"column_end":13},"name":"Target","qualname":"::traits::Lookup::Target","value":"type Target;","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Type to lookup into.\n","sig":null,"attributes":[{"value":"/ Type to lookup into.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117498,"byte_end":117522,"line_start":176,"line_end":176,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117564,"byte_end":117570,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"lookup","qualname":"::traits::Lookup::lookup","value":"fn (&self, s: Self::Source) -> Result<Self::Target, LookupError>","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Attempt a lookup.\n","sig":null,"attributes":[{"value":"/ Attempt a lookup.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117538,"byte_end":117559,"line_start":178,"line_end":178,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":841},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117831,"byte_end":117843,"line_start":185,"line_end":185,"column_start":11,"column_end":23},"name":"StaticLookup","qualname":"::traits::StaticLookup","value":"StaticLookup","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Means of changing one type into another in a manner dependent on the source type.\n This variant is different to `Lookup` in that it doesn't (can cannot) require any\n context.\n","sig":null,"attributes":[{"value":"/ Means of changing one type into another in a manner dependent on the source type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117636,"byte_end":117721,"line_start":182,"line_end":182,"column_start":1,"column_end":86}},{"value":"/ This variant is different to `Lookup` in that it doesn't (can cannot) require any","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117722,"byte_end":117807,"line_start":183,"line_end":183,"column_start":1,"column_end":86}},{"value":"/ context.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117808,"byte_end":117820,"line_start":184,"line_end":184,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":842},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117878,"byte_end":117884,"line_start":187,"line_end":187,"column_start":7,"column_end":13},"name":"Source","qualname":"::traits::StaticLookup::Source","value":"type Source: Codec + Clone + PartialEq + Debug;","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Type to lookup from.\n","sig":null,"attributes":[{"value":"/ Type to lookup from.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117847,"byte_end":117871,"line_start":186,"line_end":186,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":843},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117953,"byte_end":117959,"line_start":189,"line_end":189,"column_start":7,"column_end":13},"name":"Target","qualname":"::traits::StaticLookup::Target","value":"type Target;","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Type to lookup into.\n","sig":null,"attributes":[{"value":"/ Type to lookup into.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117922,"byte_end":117946,"line_start":188,"line_end":188,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117988,"byte_end":117994,"line_start":191,"line_end":191,"column_start":5,"column_end":11},"name":"lookup","qualname":"::traits::StaticLookup::lookup","value":"fn (s: Self::Source) -> Result<Self::Target, LookupError>","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Attempt a lookup.\n","sig":null,"attributes":[{"value":"/ Attempt a lookup.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117962,"byte_end":117983,"line_start":190,"line_end":190,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118095,"byte_end":118103,"line_start":193,"line_end":193,"column_start":5,"column_end":13},"name":"unlookup","qualname":"::traits::StaticLookup::unlookup","value":"fn (t: Self::Target) -> Self::Source","parent":{"krate":0,"index":841},"children":[],"decl_id":null,"docs":" Convert from Target back to Source.\n","sig":null,"attributes":[{"value":"/ Convert from Target back to Source.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118051,"byte_end":118090,"line_start":192,"line_end":192,"column_start":2,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2666},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118226,"byte_end":118240,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"IdentityLookup","qualname":"::traits::IdentityLookup","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lookup implementation returning the input value.\n","sig":null,"attributes":[{"value":"/ A lookup implementation returning the input value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118141,"byte_end":118195,"line_start":196,"line_end":196,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":857},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118692,"byte_end":118699,"line_start":213,"line_end":213,"column_start":11,"column_end":18},"name":"Convert","qualname":"::traits::Convert","value":"Convert<A, B>","parent":null,"children":[{"krate":0,"index":860}],"decl_id":null,"docs":" Extensible conversion trait. Generic over both source and destination types.\n","sig":null,"attributes":[{"value":"/ Extensible conversion trait. Generic over both source and destination types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118601,"byte_end":118681,"line_start":212,"line_end":212,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118734,"byte_end":118741,"line_start":215,"line_end":215,"column_start":5,"column_end":12},"name":"convert","qualname":"::traits::Convert::convert","value":"fn (a: A) -> B","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":" Make conversion.\n","sig":null,"attributes":[{"value":"/ Make conversion.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118709,"byte_end":118729,"line_start":214,"line_end":214,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":865},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118911,"byte_end":118919,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"Identity","qualname":"::traits::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure that performs identity conversion.\n","sig":null,"attributes":[{"value":"/ A structure that performs identity conversion.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118849,"byte_end":118899,"line_start":222,"line_end":222,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":870},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119094,"byte_end":119105,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"ConvertInto","qualname":"::traits::ConvertInto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structure that performs standard conversion using the standard Rust conversion traits.\n","sig":null,"attributes":[{"value":"/ A structure that performs standard conversion using the standard Rust conversion traits.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118990,"byte_end":119082,"line_start":228,"line_end":228,"column_start":1,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":876},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119381,"byte_end":119398,"line_start":237,"line_end":237,"column_start":11,"column_end":28},"name":"CheckedConversion","qualname":"::traits::CheckedConversion","value":"CheckedConversion","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":879}],"decl_id":null,"docs":" Convenience type to work around the highly unergonomic syntax needed\n to invoke the functions of overloaded generic traits, in this case\n `TryFrom` and `TryInto`.\n","sig":null,"attributes":[{"value":"/ Convenience type to work around the highly unergonomic syntax needed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119198,"byte_end":119270,"line_start":234,"line_end":234,"column_start":1,"column_end":73}},{"value":"/ to invoke the functions of overloaded generic traits, in this case","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119271,"byte_end":119341,"line_start":235,"line_end":235,"column_start":1,"column_end":71}},{"value":"/ `TryFrom` and `TryInto`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119342,"byte_end":119370,"line_start":236,"line_end":236,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119676,"byte_end":119688,"line_start":243,"line_end":243,"column_start":5,"column_end":17},"name":"checked_from","qualname":"::traits::CheckedConversion::checked_from","value":"fn <T> (t: T) -> Option<Self>","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Option<Self>`.","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Option<Self>`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119402,"byte_end":119480,"line_start":238,"line_end":238,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119482,"byte_end":119485,"line_start":239,"line_end":239,"column_start":2,"column_end":5}},{"value":"/ This just uses `TryFrom` internally but with this","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119487,"byte_end":119540,"line_start":240,"line_end":240,"column_start":2,"column_end":55}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119542,"byte_end":119613,"line_start":241,"line_end":241,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119615,"byte_end":119671,"line_start":242,"line_end":242,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120046,"byte_end":120058,"line_start":251,"line_end":251,"column_start":5,"column_end":17},"name":"checked_into","qualname":"::traits::CheckedConversion::checked_into","value":"fn <T> (self) -> Option<T>","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" Consume self to return `Some` equivalent value of `Option<T>`.","sig":null,"attributes":[{"value":"/ Consume self to return `Some` equivalent value of `Option<T>`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119784,"byte_end":119850,"line_start":246,"line_end":246,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119852,"byte_end":119855,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ This just uses `TryInto` internally but with this","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119857,"byte_end":119910,"line_start":248,"line_end":248,"column_start":2,"column_end":55}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119912,"byte_end":119983,"line_start":249,"line_end":249,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119985,"byte_end":120041,"line_start":250,"line_end":250,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":883},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120380,"byte_end":120385,"line_start":259,"line_end":259,"column_start":11,"column_end":16},"name":"Scale","qualname":"::traits::Scale","value":"Scale<Other>","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"decl_id":null,"docs":" Multiply and divide by a number that isn't necessarily the same type. Basically just the same\n as `Mul` and `Div` except it can be used for all basic numeric types.\n","sig":null,"attributes":[{"value":"/ Multiply and divide by a number that isn't necessarily the same type. Basically just the same","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120198,"byte_end":120295,"line_start":257,"line_end":257,"column_start":1,"column_end":98}},{"value":"/ as `Mul` and `Div` except it can be used for all basic numeric types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120296,"byte_end":120369,"line_start":258,"line_end":258,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":885},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120460,"byte_end":120466,"line_start":261,"line_end":261,"column_start":7,"column_end":13},"name":"Output","qualname":"::traits::Scale::Output","value":"type Output;","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" The output type of the product of `self` and `Other`.\n","sig":null,"attributes":[{"value":"/ The output type of the product of `self` and `Other`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120396,"byte_end":120453,"line_start":260,"line_end":260,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120521,"byte_end":120524,"line_start":264,"line_end":264,"column_start":5,"column_end":8},"name":"mul","qualname":"::traits::Scale::mul","value":"fn (self, other: Other) -> Self::Output","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" @return the product of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the product of `self` and `other`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120470,"byte_end":120516,"line_start":263,"line_end":263,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120624,"byte_end":120627,"line_start":267,"line_end":267,"column_start":5,"column_end":8},"name":"div","qualname":"::traits::Scale::div","value":"fn (self, other: Other) -> Self::Output","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" @return the integer division of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the integer division of `self` and `other`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120564,"byte_end":120619,"line_start":266,"line_end":266,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120727,"byte_end":120730,"line_start":270,"line_end":270,"column_start":5,"column_end":8},"name":"rem","qualname":"::traits::Scale::rem","value":"fn (self, other: Other) -> Self::Output","parent":{"krate":0,"index":883},"children":[],"decl_id":null,"docs":" @return the modulo remainder of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ @return the modulo remainder of `self` and `other`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120667,"byte_end":120722,"line_start":269,"line_end":269,"column_start":2,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":890},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121581,"byte_end":121586,"line_start":300,"line_end":300,"column_start":11,"column_end":16},"name":"Clear","qualname":"::traits::Clear","value":"Clear","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"decl_id":null,"docs":" Trait for things that can be clear (have no bits set). For numeric types, essentially the same\n as `Zero`.\n","sig":null,"attributes":[{"value":"/ Trait for things that can be clear (have no bits set). For numeric types, essentially the same","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121457,"byte_end":121555,"line_start":298,"line_end":298,"column_start":1,"column_end":99}},{"value":"/ as `Zero`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121556,"byte_end":121570,"line_start":299,"line_end":299,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121624,"byte_end":121632,"line_start":302,"line_end":302,"column_start":5,"column_end":13},"name":"is_clear","qualname":"::traits::Clear::is_clear","value":"fn (&self) -> bool","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" True iff no bits are set.\n","sig":null,"attributes":[{"value":"/ True iff no bits are set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121590,"byte_end":121619,"line_start":301,"line_end":301,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121699,"byte_end":121704,"line_start":305,"line_end":305,"column_start":5,"column_end":10},"name":"clear","qualname":"::traits::Clear::clear","value":"fn () -> Self","parent":{"krate":0,"index":890},"children":[],"decl_id":null,"docs":" Return the value of Self that is clear.\n","sig":null,"attributes":[{"value":"/ Return the value of Self that is clear.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121651,"byte_end":121694,"line_start":304,"line_end":304,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":897},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121912,"byte_end":121924,"line_start":314,"line_end":314,"column_start":11,"column_end":23},"name":"SimpleBitOps","qualname":"::traits::SimpleBitOps","value":"SimpleBitOps: Sized + Clear + sp_std::ops::BitOr<Self, Output = Self> +\nsp_std::ops::BitXor<Self, Output = Self> + sp_std::ops::BitAnd<Self, Output =\nSelf>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for all bit ops.\n","sig":null,"attributes":[{"value":"/ A meta trait for all bit ops.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121868,"byte_end":121901,"line_start":313,"line_end":313,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":900},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122399,"byte_end":122403,"line_start":330,"line_end":330,"column_start":11,"column_end":15},"name":"Hash","qualname":"::traits::Hash","value":"Hash: 'static + MaybeSerializeDeserialize + Debug + Clone + Eq + PartialEq +\nHasher<Out = <Self as Hash>::Output>","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":906}],"decl_id":null,"docs":" Abstraction around hashing\n","sig":null,"attributes":[{"value":"/ Abstraction around hashing","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122254,"byte_end":122284,"line_start":327,"line_end":327,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":901},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122550,"byte_end":122556,"line_start":332,"line_end":332,"column_start":7,"column_end":13},"name":"Output","qualname":"::traits::Hash::Output","value":"type Output: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash\n\t\t+ AsRef<[u8]> + AsMut<[u8]> + Copy + Default + Encode + Decode;","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" The hash type produced.\n","sig":null,"attributes":[{"value":"/ The hash type produced.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122516,"byte_end":122543,"line_start":331,"line_end":331,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122735,"byte_end":122739,"line_start":336,"line_end":336,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Hash::hash","value":"fn (s: &[u8]) -> Self::Output","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Produce the hash of some byte-slice.\n","sig":null,"attributes":[{"value":"/ Produce the hash of some byte-slice.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122690,"byte_end":122730,"line_start":335,"line_end":335,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122857,"byte_end":122864,"line_start":341,"line_end":341,"column_start":5,"column_end":12},"name":"hash_of","qualname":"::traits::Hash::hash_of","value":"fn <S> (s: &S) -> Self::Output","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" Produce the hash of some codec-encodable value.\n","sig":null,"attributes":[{"value":"/ Produce the hash of some codec-encodable value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122801,"byte_end":122852,"line_start":340,"line_end":340,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123018,"byte_end":123035,"line_start":346,"line_end":346,"column_start":5,"column_end":22},"name":"ordered_trie_root","qualname":"::traits::Hash::ordered_trie_root","value":"fn (input: Vec<Vec<u8>>) -> Self::Output","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" The ordered Patricia tree root of the given `input`.\n","sig":null,"attributes":[{"value":"/ The ordered Patricia tree root of the given `input`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122957,"byte_end":123013,"line_start":345,"line_end":345,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123129,"byte_end":123138,"line_start":349,"line_end":349,"column_start":5,"column_end":14},"name":"trie_root","qualname":"::traits::Hash::trie_root","value":"fn (input: Vec<(Vec<u8>, Vec<u8>)>) -> Self::Output","parent":{"krate":0,"index":900},"children":[],"decl_id":null,"docs":" The Patricia tree root of the given mapping.\n","sig":null,"attributes":[{"value":"/ The Patricia tree root of the given mapping.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123076,"byte_end":123124,"line_start":348,"line_end":348,"column_start":2,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2748},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123345,"byte_end":123356,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"BlakeTwo256","qualname":"::traits::BlakeTwo256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blake2-256 Hash implementation.\n","sig":null,"attributes":[{"value":"/ Blake2-256 Hash implementation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123191,"byte_end":123226,"line_start":352,"line_end":352,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2781},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124011,"byte_end":124020,"line_start":382,"line_end":382,"column_start":12,"column_end":21},"name":"Keccak256","qualname":"::traits::Keccak256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Keccak-256 Hash implementation.\n","sig":null,"attributes":[{"value":"/ Keccak-256 Hash implementation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123857,"byte_end":123892,"line_start":379,"line_end":379,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":925},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124617,"byte_end":124627,"line_start":407,"line_end":407,"column_start":11,"column_end":21},"name":"CheckEqual","qualname":"::traits::CheckEqual","value":"CheckEqual","parent":null,"children":[{"krate":0,"index":926}],"decl_id":null,"docs":" Something that can be checked for equality and printed out to a debug channel if bad.\n","sig":null,"attributes":[{"value":"/ Something that can be checked for equality and printed out to a debug channel if bad.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124517,"byte_end":124606,"line_start":406,"line_end":406,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124667,"byte_end":124678,"line_start":409,"line_end":409,"column_start":5,"column_end":16},"name":"check_equal","qualname":"::traits::CheckEqual::check_equal","value":"fn (&self, other: &Self) -> ()","parent":{"krate":0,"index":925},"children":[],"decl_id":null,"docs":" Perform the equality check.\n","sig":null,"attributes":[{"value":"/ Perform the equality check.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124631,"byte_end":124662,"line_start":408,"line_end":408,"column_start":2,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2814},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125771,"byte_end":125783,"line_start":455,"line_end":455,"column_start":8,"column_end":20},"name":"MaybeDisplay","qualname":"::traits::MaybeDisplay","value":"MaybeDisplay: Display","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Display when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"<::sp_core::impl_maybe_marker macros>","byte_start":10380887,"byte_end":10380912,"line_start":6,"line_end":6,"column_start":22,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2817},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125863,"byte_end":125875,"line_start":458,"line_end":458,"column_start":8,"column_end":20},"name":"MaybeFromStr","qualname":"::traits::MaybeFromStr","value":"MaybeFromStr: FromStr","parent":null,"children":[],"decl_id":null,"docs":" A type that implements FromStr when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"<::sp_core::impl_maybe_marker macros>","byte_start":10380887,"byte_end":10380912,"line_start":6,"line_end":6,"column_start":22,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2820},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125952,"byte_end":125961,"line_start":461,"line_end":461,"column_start":8,"column_end":17},"name":"MaybeHash","qualname":"::traits::MaybeHash","value":"MaybeHash: sp_std::hash::Hash","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Hash when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"<::sp_core::impl_maybe_marker macros>","byte_start":10380887,"byte_end":10380912,"line_start":6,"line_end":6,"column_start":22,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2823},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126054,"byte_end":126068,"line_start":464,"line_end":464,"column_start":8,"column_end":22},"name":"MaybeSerialize","qualname":"::traits::MaybeSerialize","value":"MaybeSerialize: Serialize","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Serialize when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"<::sp_core::impl_maybe_marker macros>","byte_start":10380887,"byte_end":10380912,"line_start":6,"line_end":6,"column_start":22,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2826},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126180,"byte_end":126205,"line_start":467,"line_end":467,"column_start":8,"column_end":33},"name":"MaybeSerializeDeserialize","qualname":"::traits::MaybeSerializeDeserialize","value":"MaybeSerializeDeserialize: DeserializeOwned + Serialize","parent":null,"children":[],"decl_id":null,"docs":" A type that implements Serialize, DeserializeOwned and Debug when in std environment.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"<::sp_core::impl_maybe_marker macros>","byte_start":10380887,"byte_end":10380912,"line_start":6,"line_end":6,"column_start":22,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2829},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126286,"byte_end":126303,"line_start":470,"line_end":470,"column_start":8,"column_end":25},"name":"MaybeMallocSizeOf","qualname":"::traits::MaybeMallocSizeOf","value":"MaybeMallocSizeOf: parity_util_mem::MallocSizeOf","parent":null,"children":[],"decl_id":null,"docs":" A type that implements MallocSizeOf.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"<::sp_core::impl_maybe_marker macros>","byte_start":10380887,"byte_end":10380912,"line_start":6,"line_end":6,"column_start":22,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":933},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126401,"byte_end":126407,"line_start":474,"line_end":474,"column_start":11,"column_end":17},"name":"Member","qualname":"::traits::Member","value":"Member: Send + Sync + Sized + Debug + Eq + PartialEq + Clone + 'static","parent":null,"children":[],"decl_id":null,"docs":" A type that can be used in runtime structures.\n","sig":null,"attributes":[{"value":"/ A type that can be used in runtime structures.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126340,"byte_end":126390,"line_start":473,"line_end":473,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":936},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126623,"byte_end":126631,"line_start":478,"line_end":478,"column_start":11,"column_end":19},"name":"IsMember","qualname":"::traits::IsMember","value":"IsMember<MemberId>","parent":null,"children":[{"krate":0,"index":938}],"decl_id":null,"docs":" Determine if a `MemberId` is a valid member.\n","sig":null,"attributes":[{"value":"/ Determine if a `MemberId` is a valid member.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126564,"byte_end":126612,"line_start":477,"line_end":477,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126693,"byte_end":126702,"line_start":480,"line_end":480,"column_start":5,"column_end":14},"name":"is_member","qualname":"::traits::IsMember::is_member","value":"fn (member_id: &MemberId) -> bool","parent":{"krate":0,"index":936},"children":[],"decl_id":null,"docs":" Is the given `MemberId` a valid member?\n","sig":null,"attributes":[{"value":"/ Is the given `MemberId` a valid member?","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126645,"byte_end":126688,"line_start":479,"line_end":479,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":939},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127059,"byte_end":127065,"line_start":488,"line_end":488,"column_start":11,"column_end":17},"name":"Header","qualname":"::traits::Header","value":"Header: Clone + Send + Sync + Codec + Eq + MaybeSerialize + Debug +\nMaybeMallocSizeOf + 'static","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"decl_id":null,"docs":" Something which fulfills the abstract idea of a Substrate header. It has types for a `Number`,\n a `Hash` and a `Hashing`. It provides access to an `extrinsics_root`, `state_root` and\n `parent_hash`, as well as a `digest` and a block `number`.","sig":null,"attributes":[{"value":"/ Something which fulfills the abstract idea of a Substrate header. It has types for a `Number`,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126737,"byte_end":126835,"line_start":483,"line_end":483,"column_start":1,"column_end":99}},{"value":"/ a `Hash` and a `Hashing`. It provides access to an `extrinsics_root`, `state_root` and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126836,"byte_end":126926,"line_start":484,"line_end":484,"column_start":1,"column_end":91}},{"value":"/ `parent_hash`, as well as a `digest` and a block `number`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126927,"byte_end":126989,"line_start":485,"line_end":485,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126990,"byte_end":126993,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ You can also create a `new` one from those fields.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126994,"byte_end":127048,"line_start":487,"line_end":487,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":940},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127185,"byte_end":127191,"line_start":493,"line_end":493,"column_start":7,"column_end":13},"name":"Number","qualname":"::traits::Header::Number","value":"type Number: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash\n\t\t+ Copy + MaybeDisplay + AtLeast32Bit + Codec + sp_std::str::FromStr\n\t\t+ MaybeMallocSizeOf;","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Header number.\n","sig":null,"attributes":[{"value":"/ Header number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127160,"byte_end":127178,"line_start":492,"line_end":492,"column_start":2,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":941},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127378,"byte_end":127382,"line_start":497,"line_end":497,"column_start":7,"column_end":11},"name":"Hash","qualname":"::traits::Header::Hash","value":"type Hash: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Ord\n\t\t+ Copy + MaybeDisplay + Default + SimpleBitOps + Codec + AsRef<[u8]>\n\t\t+ AsMut<[u8]> + MaybeMallocSizeOf;","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Header hash type\n","sig":null,"attributes":[{"value":"/ Header hash type","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127351,"byte_end":127371,"line_start":496,"line_end":496,"column_start":2,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":942},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127591,"byte_end":127598,"line_start":501,"line_end":501,"column_start":7,"column_end":14},"name":"Hashing","qualname":"::traits::Header::Hashing","value":"type Hashing: Hash<Output = Self::Hash>;","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Hashing algorithm\n","sig":null,"attributes":[{"value":"/ Hashing algorithm","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127563,"byte_end":127584,"line_start":500,"line_end":500,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127657,"byte_end":127660,"line_start":504,"line_end":504,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Header::new","value":"fn (number: Self::Number, extrinsics_root: Self::Hash, state_root: Self::Hash, parent_hash: Self::Hash, digest: Digest<Self::Hash>) -> Self","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Creates new header.\n","sig":null,"attributes":[{"value":"/ Creates new header.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127629,"byte_end":127652,"line_start":503,"line_end":503,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127864,"byte_end":127870,"line_start":513,"line_end":513,"column_start":5,"column_end":11},"name":"number","qualname":"::traits::Header::number","value":"fn (&self) -> &Self::Number","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Returns a reference to the header number.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127814,"byte_end":127859,"line_start":512,"line_end":512,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127929,"byte_end":127939,"line_start":515,"line_end":515,"column_start":5,"column_end":15},"name":"set_number","qualname":"::traits::Header::set_number","value":"fn (&mut self, number: Self::Number) -> ()","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Sets the header number.\n","sig":null,"attributes":[{"value":"/ Sets the header number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127897,"byte_end":127924,"line_start":514,"line_end":514,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128028,"byte_end":128043,"line_start":518,"line_end":518,"column_start":5,"column_end":20},"name":"extrinsics_root","qualname":"::traits::Header::extrinsics_root","value":"fn (&self) -> &Self::Hash","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Returns a reference to the extrinsics root.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the extrinsics root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127976,"byte_end":128023,"line_start":517,"line_end":517,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128101,"byte_end":128120,"line_start":520,"line_end":520,"column_start":5,"column_end":24},"name":"set_extrinsics_root","qualname":"::traits::Header::set_extrinsics_root","value":"fn (&mut self, root: Self::Hash) -> ()","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Sets the extrinsic root.\n","sig":null,"attributes":[{"value":"/ Sets the extrinsic root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128068,"byte_end":128096,"line_start":519,"line_end":519,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128200,"byte_end":128210,"line_start":523,"line_end":523,"column_start":5,"column_end":15},"name":"state_root","qualname":"::traits::Header::state_root","value":"fn (&self) -> &Self::Hash","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Returns a reference to the state root.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the state root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128153,"byte_end":128195,"line_start":522,"line_end":522,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128264,"byte_end":128278,"line_start":525,"line_end":525,"column_start":5,"column_end":19},"name":"set_state_root","qualname":"::traits::Header::set_state_root","value":"fn (&mut self, root: Self::Hash) -> ()","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Sets the state root.\n","sig":null,"attributes":[{"value":"/ Sets the state root.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128235,"byte_end":128259,"line_start":524,"line_end":524,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128359,"byte_end":128370,"line_start":528,"line_end":528,"column_start":5,"column_end":16},"name":"parent_hash","qualname":"::traits::Header::parent_hash","value":"fn (&self) -> &Self::Hash","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Returns a reference to the parent hash.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the parent hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128311,"byte_end":128354,"line_start":527,"line_end":527,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128425,"byte_end":128440,"line_start":530,"line_end":530,"column_start":5,"column_end":20},"name":"set_parent_hash","qualname":"::traits::Header::set_parent_hash","value":"fn (&mut self, hash: Self::Hash) -> ()","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Sets the parent hash.\n","sig":null,"attributes":[{"value":"/ Sets the parent hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128395,"byte_end":128420,"line_start":529,"line_end":529,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128516,"byte_end":128522,"line_start":533,"line_end":533,"column_start":5,"column_end":11},"name":"digest","qualname":"::traits::Header::digest","value":"fn (&self) -> &Digest<Self::Hash>","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Returns a reference to the digest.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the digest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128473,"byte_end":128511,"line_start":532,"line_end":532,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128602,"byte_end":128612,"line_start":535,"line_end":535,"column_start":5,"column_end":15},"name":"digest_mut","qualname":"::traits::Header::digest_mut","value":"fn (&mut self) -> &mut Digest<Self::Hash>","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Get a mutable reference to the digest.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the digest.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128555,"byte_end":128597,"line_start":534,"line_end":534,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128694,"byte_end":128698,"line_start":538,"line_end":538,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Header::hash","value":"fn (&self) -> Self::Hash","parent":{"krate":0,"index":939},"children":[],"decl_id":null,"docs":" Returns the hash of the header.\n","sig":null,"attributes":[{"value":"/ Returns the hash of the header.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128654,"byte_end":128689,"line_start":537,"line_end":537,"column_start":2,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":955},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129015,"byte_end":129020,"line_start":547,"line_end":547,"column_start":11,"column_end":16},"name":"Block","qualname":"::traits::Block","value":"Block: Clone + Send + Sync + Codec + Eq + MaybeSerialize + Debug +\nMaybeMallocSizeOf + 'static","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"decl_id":null,"docs":" Something which fulfills the abstract idea of a Substrate block. It has types for\n `Extrinsic` pieces of information as well as a `Header`.","sig":null,"attributes":[{"value":"/ Something which fulfills the abstract idea of a Substrate block. It has types for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128769,"byte_end":128854,"line_start":543,"line_end":543,"column_start":1,"column_end":86}},{"value":"/ `Extrinsic` pieces of information as well as a `Header`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128855,"byte_end":128915,"line_start":544,"line_end":544,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128916,"byte_end":128919,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ You can get an iterator over each of the `extrinsics` and retrieve the `header`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":128920,"byte_end":129004,"line_start":546,"line_end":546,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":956},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129144,"byte_end":129153,"line_start":549,"line_end":549,"column_start":7,"column_end":16},"name":"Extrinsic","qualname":"::traits::Block::Extrinsic","value":"type Extrinsic: Member + Codec + Extrinsic + MaybeSerialize + MaybeMallocSizeOf;","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Type for extrinsics.\n","sig":null,"attributes":[{"value":"/ Type for extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129113,"byte_end":129137,"line_start":548,"line_end":548,"column_start":2,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":957},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129244,"byte_end":129250,"line_start":551,"line_end":551,"column_start":7,"column_end":13},"name":"Header","qualname":"::traits::Block::Header","value":"type Header: Header<Hash=Self::Hash> + MaybeMallocSizeOf;","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Header type.\n","sig":null,"attributes":[{"value":"/ Header type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129221,"byte_end":129237,"line_start":550,"line_end":550,"column_start":2,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":958},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129325,"byte_end":129329,"line_start":553,"line_end":553,"column_start":7,"column_end":11},"name":"Hash","qualname":"::traits::Block::Hash","value":"type Hash: Member + MaybeSerializeDeserialize + Debug + sp_std::hash::Hash + Ord\n\t\t+ Copy + MaybeDisplay + Default + SimpleBitOps + Codec + AsRef<[u8]> + AsMut<[u8]>\n\t\t+ MaybeMallocSizeOf;","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Block hash type.\n","sig":null,"attributes":[{"value":"/ Block hash type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129298,"byte_end":129318,"line_start":552,"line_end":552,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129554,"byte_end":129560,"line_start":558,"line_end":558,"column_start":5,"column_end":11},"name":"header","qualname":"::traits::Block::header","value":"fn (&self) -> &Self::Header","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Returns a reference to the header.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the header.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129511,"byte_end":129549,"line_start":557,"line_end":557,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129642,"byte_end":129652,"line_start":560,"line_end":560,"column_start":5,"column_end":15},"name":"extrinsics","qualname":"::traits::Block::extrinsics","value":"fn (&self) -> &[Self::Extrinsic]","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Returns a reference to the list of extrinsics.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the list of extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129587,"byte_end":129637,"line_start":559,"line_end":559,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129744,"byte_end":129755,"line_start":562,"line_end":562,"column_start":5,"column_end":16},"name":"deconstruct","qualname":"::traits::Block::deconstruct","value":"fn (self) -> (Self::Header, Vec<Self::Extrinsic>)","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Split the block into header and list of extrinsics.\n","sig":null,"attributes":[{"value":"/ Split the block into header and list of extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129684,"byte_end":129739,"line_start":561,"line_end":561,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129858,"byte_end":129861,"line_start":564,"line_end":564,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Block::new","value":"fn (header: Self::Header, extrinsics: Vec<Self::Extrinsic>) -> Self","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Creates new block from header and extrinsics.\n","sig":null,"attributes":[{"value":"/ Creates new block from header and extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129804,"byte_end":129853,"line_start":563,"line_end":563,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129967,"byte_end":129971,"line_start":566,"line_end":566,"column_start":5,"column_end":9},"name":"hash","qualname":"::traits::Block::hash","value":"fn (&self) -> Self::Hash","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Returns the hash of the block.\n","sig":null,"attributes":[{"value":"/ Returns the hash of the block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129928,"byte_end":129962,"line_start":565,"line_end":565,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130195,"byte_end":130206,"line_start":571,"line_end":571,"column_start":5,"column_end":16},"name":"encode_from","qualname":"::traits::Block::encode_from","value":"fn (header: &Self::Header, extrinsics: &[Self::Extrinsic]) -> Vec<u8>","parent":{"krate":0,"index":955},"children":[],"decl_id":null,"docs":" Creates an encoded block from the given `header` and `extrinsics` without requiring the\n creation of an instance.\n","sig":null,"attributes":[{"value":"/ Creates an encoded block from the given `header` and `extrinsics` without requiring the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130069,"byte_end":130160,"line_start":569,"line_end":569,"column_start":2,"column_end":93}},{"value":"/ creation of an instance.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130162,"byte_end":130190,"line_start":570,"line_end":570,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":965},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130333,"byte_end":130342,"line_start":576,"line_end":576,"column_start":11,"column_end":20},"name":"Extrinsic","qualname":"::traits::Extrinsic","value":"Extrinsic: Sized + MaybeMallocSizeOf","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"decl_id":null,"docs":" Something that acts like an `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ Something that acts like an `Extrinsic`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130278,"byte_end":130322,"line_start":575,"line_end":575,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":966},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130402,"byte_end":130406,"line_start":578,"line_end":578,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::Extrinsic::Call","value":"type Call;","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" The function call.\n","sig":null,"attributes":[{"value":"/ The function call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130373,"byte_end":130395,"line_start":577,"line_end":577,"column_start":2,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":967},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130599,"byte_end":130615,"line_start":585,"line_end":585,"column_start":7,"column_end":23},"name":"SignaturePayload","qualname":"::traits::Extrinsic::SignaturePayload","value":"type SignaturePayload;","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" The payload we carry for signed extrinsics.","sig":null,"attributes":[{"value":"/ The payload we carry for signed extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130410,"byte_end":130457,"line_start":580,"line_end":580,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130459,"byte_end":130462,"line_start":581,"line_end":581,"column_start":2,"column_end":5}},{"value":"/ Usually it will contain a `Signature` and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130464,"byte_end":130509,"line_start":582,"line_end":582,"column_start":2,"column_end":47}},{"value":"/ may include some additional data that are specific to signed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130511,"byte_end":130575,"line_start":583,"line_end":583,"column_start":2,"column_end":66}},{"value":"/ extrinsics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130577,"byte_end":130592,"line_start":584,"line_end":584,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130742,"byte_end":130751,"line_start":589,"line_end":589,"column_start":5,"column_end":14},"name":"is_signed","qualname":"::traits::Extrinsic::is_signed","value":"fn (&self) -> Option<bool>","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" Is this `Extrinsic` signed?\n If no information are available about signed/unsigned, `None` should be returned.\n","sig":null,"attributes":[{"value":"/ Is this `Extrinsic` signed?","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130619,"byte_end":130650,"line_start":587,"line_end":587,"column_start":2,"column_end":33}},{"value":"/ If no information are available about signed/unsigned, `None` should be returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130652,"byte_end":130737,"line_start":588,"line_end":588,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131142,"byte_end":131145,"line_start":597,"line_end":597,"column_start":5,"column_end":8},"name":"new","qualname":"::traits::Extrinsic::new","value":"fn (_call: Self::Call, _signed_data: Option<Self::SignaturePayload>) -> Option<Self>","parent":{"krate":0,"index":965},"children":[],"decl_id":null,"docs":" Create new instance of the extrinsic.","sig":null,"attributes":[{"value":"/ Create new instance of the extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130786,"byte_end":130827,"line_start":591,"line_end":591,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130829,"byte_end":130832,"line_start":592,"line_end":592,"column_start":2,"column_end":5}},{"value":"/ Extrinsics can be split into:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130834,"byte_end":130867,"line_start":593,"line_end":593,"column_start":2,"column_end":35}},{"value":"/ 1. Inherents (no signature; created by validators during block production)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130869,"byte_end":130947,"line_start":594,"line_end":594,"column_start":2,"column_end":80}},{"value":"/ 2. Unsigned Transactions (no signature; represent \"system calls\" or other special kinds of calls)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130949,"byte_end":131050,"line_start":595,"line_end":595,"column_start":2,"column_end":103}},{"value":"/ 3. Signed Transactions (with signature; a regular transactions with known origin)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131052,"byte_end":131137,"line_start":596,"line_end":596,"column_start":2,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":970},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131329,"byte_end":131346,"line_start":601,"line_end":601,"column_start":11,"column_end":28},"name":"ExtrinsicMetadata","qualname":"::traits::ExtrinsicMetadata","value":"ExtrinsicMetadata","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"decl_id":null,"docs":" Implementor is an [`Extrinsic`] and provides metadata about this extrinsic.\n","sig":null,"attributes":[{"value":"/ Implementor is an [`Extrinsic`] and provides metadata about this extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131239,"byte_end":131318,"line_start":600,"line_end":600,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":971},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131393,"byte_end":131400,"line_start":603,"line_end":603,"column_start":8,"column_end":15},"name":"VERSION","qualname":"::traits::ExtrinsicMetadata::VERSION","value":"u8","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" The version of the `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ The version of the `Extrinsic`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131350,"byte_end":131385,"line_start":602,"line_end":602,"column_start":2,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":972},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131466,"byte_end":131482,"line_start":606,"line_end":606,"column_start":7,"column_end":23},"name":"SignedExtensions","qualname":"::traits::ExtrinsicMetadata::SignedExtensions","value":"type SignedExtensions: SignedExtension;","parent":{"krate":0,"index":970},"children":[],"decl_id":null,"docs":" Signed extensions attached to this `Extrinsic`.\n","sig":null,"attributes":[{"value":"/ Signed extensions attached to this `Extrinsic`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131408,"byte_end":131459,"line_start":605,"line_end":605,"column_start":2,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":973},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131555,"byte_end":131562,"line_start":610,"line_end":610,"column_start":10,"column_end":17},"name":"HashFor","qualname":"::traits::HashFor","value":"<<B as Block>::Header as Header>::Hashing","parent":null,"children":[],"decl_id":null,"docs":" Extract the hashing type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the hashing type for a block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131504,"byte_end":131545,"line_start":609,"line_end":609,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":975},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131661,"byte_end":131670,"line_start":612,"line_end":612,"column_start":10,"column_end":19},"name":"NumberFor","qualname":"::traits::NumberFor","value":"<<B as Block>::Header as Header>::Number","parent":null,"children":[],"decl_id":null,"docs":" Extract the number type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the number type for a block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131611,"byte_end":131651,"line_start":611,"line_end":611,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":977},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131768,"byte_end":131777,"line_start":614,"line_end":614,"column_start":10,"column_end":19},"name":"DigestFor","qualname":"::traits::DigestFor","value":"Digest<<<B as Block>::Header as Header>::Hash>","parent":null,"children":[],"decl_id":null,"docs":" Extract the digest type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the digest type for a block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131718,"byte_end":131758,"line_start":613,"line_end":613,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":979},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131886,"byte_end":131899,"line_start":616,"line_end":616,"column_start":10,"column_end":23},"name":"DigestItemFor","qualname":"::traits::DigestItemFor","value":"DigestItem<<<B as Block>::Header as Header>::Hash>","parent":null,"children":[],"decl_id":null,"docs":" Extract the digest item type for a block.\n","sig":null,"attributes":[{"value":"/ Extract the digest item type for a block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131831,"byte_end":131876,"line_start":615,"line_end":615,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":981},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132272,"byte_end":132281,"line_start":622,"line_end":622,"column_start":11,"column_end":20},"name":"Checkable","qualname":"::traits::Checkable","value":"Checkable<Context>: Sized","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984}],"decl_id":null,"docs":" A \"checkable\" piece of information, used by the standard Substrate Executive in order to\n check the validity of a piece of extrinsic information, usually by verifying the signature.\n Implement for pieces of information that require some additional context `Context` in order to be\n checked.\n","sig":null,"attributes":[{"value":"/ A \"checkable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":131958,"byte_end":132050,"line_start":618,"line_end":618,"column_start":1,"column_end":93}},{"value":"/ check the validity of a piece of extrinsic information, usually by verifying the signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132051,"byte_end":132146,"line_start":619,"line_end":619,"column_start":1,"column_end":96}},{"value":"/ Implement for pieces of information that require some additional context `Context` in order to be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132147,"byte_end":132248,"line_start":620,"line_end":620,"column_start":1,"column_end":102}},{"value":"/ checked.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132249,"byte_end":132261,"line_start":621,"line_end":621,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":983},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132341,"byte_end":132348,"line_start":624,"line_end":624,"column_start":7,"column_end":14},"name":"Checked","qualname":"::traits::Checkable::Checked","value":"type Checked;","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":" Returned if `check` succeeds.\n","sig":null,"attributes":[{"value":"/ Returned if `check` succeeds.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132301,"byte_end":132334,"line_start":623,"line_end":623,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132402,"byte_end":132407,"line_start":627,"line_end":627,"column_start":5,"column_end":10},"name":"check","qualname":"::traits::Checkable::check","value":"fn (self, c: &Context) -> Result<Self::Checked, TransactionValidityError>","parent":{"krate":0,"index":981},"children":[],"decl_id":null,"docs":" Check self, given an instance of Context.\n","sig":null,"attributes":[{"value":"/ Check self, given an instance of Context.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132352,"byte_end":132397,"line_start":626,"line_end":626,"column_start":2,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":985},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132787,"byte_end":132801,"line_start":634,"line_end":634,"column_start":11,"column_end":25},"name":"BlindCheckable","qualname":"::traits::BlindCheckable","value":"BlindCheckable: Sized","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987}],"decl_id":null,"docs":" A \"checkable\" piece of information, used by the standard Substrate Executive in order to\n check the validity of a piece of extrinsic information, usually by verifying the signature.\n Implement for pieces of information that don't require additional context in order to be\n checked.\n","sig":null,"attributes":[{"value":"/ A \"checkable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132482,"byte_end":132574,"line_start":630,"line_end":630,"column_start":1,"column_end":93}},{"value":"/ check the validity of a piece of extrinsic information, usually by verifying the signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132575,"byte_end":132670,"line_start":631,"line_end":631,"column_start":1,"column_end":96}},{"value":"/ Implement for pieces of information that don't require additional context in order to be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132671,"byte_end":132763,"line_start":632,"line_end":632,"column_start":1,"column_end":93}},{"value":"/ checked.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132764,"byte_end":132776,"line_start":633,"line_end":633,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":986},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132852,"byte_end":132859,"line_start":636,"line_end":636,"column_start":7,"column_end":14},"name":"Checked","qualname":"::traits::BlindCheckable::Checked","value":"type Checked;","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Returned if `check` succeeds.\n","sig":null,"attributes":[{"value":"/ Returned if `check` succeeds.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132812,"byte_end":132845,"line_start":635,"line_end":635,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132883,"byte_end":132888,"line_start":639,"line_end":639,"column_start":5,"column_end":10},"name":"check","qualname":"::traits::BlindCheckable::check","value":"fn (self) -> Result<Self::Checked, TransactionValidityError>","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Check self.\n","sig":null,"attributes":[{"value":"/ Check self.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132863,"byte_end":132878,"line_start":638,"line_end":638,"column_start":2,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133376,"byte_end":133388,"line_start":653,"line_end":653,"column_start":11,"column_end":23},"name":"Dispatchable","qualname":"::traits::Dispatchable","value":"Dispatchable","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"decl_id":null,"docs":" A lazy call (module function and argument values) that can be executed via its `dispatch`\n method.\n","sig":null,"attributes":[{"value":"/ A lazy call (module function and argument values) that can be executed via its `dispatch`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133260,"byte_end":133353,"line_start":651,"line_end":651,"column_start":1,"column_end":94}},{"value":"/ method.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133354,"byte_end":133365,"line_start":652,"line_end":652,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":994},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133682,"byte_end":133688,"line_start":657,"line_end":657,"column_start":7,"column_end":13},"name":"Origin","qualname":"::traits::Dispatchable::Origin","value":"type Origin;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Every function call from your runtime has an origin, which specifies where the extrinsic was\n generated from. In the case of a signed extrinsic (transaction), the origin contains an\n identifier for the caller. The origin can be empty in the case of an inherent extrinsic.\n","sig":null,"attributes":[{"value":"/ Every function call from your runtime has an origin, which specifies where the extrinsic was","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133392,"byte_end":133488,"line_start":654,"line_end":654,"column_start":2,"column_end":98}},{"value":"/ generated from. In the case of a signed extrinsic (transaction), the origin contains an","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133490,"byte_end":133581,"line_start":655,"line_end":655,"column_start":2,"column_end":93}},{"value":"/ identifier for the caller. The origin can be empty in the case of an inherent extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133583,"byte_end":133675,"line_start":656,"line_end":656,"column_start":2,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":995},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133705,"byte_end":133710,"line_start":659,"line_end":659,"column_start":7,"column_end":12},"name":"Trait","qualname":"::traits::Dispatchable::Trait","value":"type Trait;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" ...\n","sig":null,"attributes":[{"value":"/ ...","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133691,"byte_end":133698,"line_start":658,"line_end":658,"column_start":2,"column_end":9}}]},{"kind":"Type","id":{"krate":0,"index":996},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133961,"byte_end":133965,"line_start":663,"line_end":663,"column_start":7,"column_end":11},"name":"Info","qualname":"::traits::Dispatchable::Info","value":"type Info;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" An opaque set of information attached to the transaction. This could be constructed anywhere\n down the line in a runtime. The current Substrate runtime uses a struct with the same name\n to represent the dispatch class and weight.\n","sig":null,"attributes":[{"value":"/ An opaque set of information attached to the transaction. This could be constructed anywhere","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133713,"byte_end":133809,"line_start":660,"line_end":660,"column_start":2,"column_end":98}},{"value":"/ down the line in a runtime. The current Substrate runtime uses a struct with the same name","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133811,"byte_end":133905,"line_start":661,"line_end":661,"column_start":2,"column_end":96}},{"value":"/ to represent the dispatch class and weight.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133907,"byte_end":133954,"line_start":662,"line_end":662,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":997},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134146,"byte_end":134154,"line_start":666,"line_end":666,"column_start":7,"column_end":15},"name":"PostInfo","qualname":"::traits::Dispatchable::PostInfo","value":"type PostInfo: Eq + PartialEq + Clone + Copy + Encode + Decode + Printable;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Additional information that is returned by `dispatch`. Can be used to supply the caller\n with information about a `Dispatchable` that is ownly known post dispatch.\n","sig":null,"attributes":[{"value":"/ Additional information that is returned by `dispatch`. Can be used to supply the caller","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133968,"byte_end":134059,"line_start":664,"line_end":664,"column_start":2,"column_end":93}},{"value":"/ with information about a `Dispatchable` that is ownly known post dispatch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134061,"byte_end":134139,"line_start":665,"line_end":665,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134283,"byte_end":134291,"line_start":668,"line_end":668,"column_start":5,"column_end":13},"name":"dispatch","qualname":"::traits::Dispatchable::dispatch","value":"fn (self, origin: Self::Origin) -> crate::DispatchResultWithInfo<Self::PostInfo>","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Actually dispatch this call and return the result of it.\n","sig":null,"attributes":[{"value":"/ Actually dispatch this call and return the result of it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134218,"byte_end":134278,"line_start":667,"line_end":667,"column_start":2,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":999},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134445,"byte_end":134459,"line_start":672,"line_end":672,"column_start":10,"column_end":24},"name":"DispatchInfoOf","qualname":"::traits::DispatchInfoOf","value":"<T as Dispatchable>::Info","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to reference the `Info` type of a `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Shortcut to reference the `Info` type of a `Dispatchable`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134373,"byte_end":134435,"line_start":671,"line_end":671,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1001},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134568,"byte_end":134586,"line_start":674,"line_end":674,"column_start":10,"column_end":28},"name":"PostDispatchInfoOf","qualname":"::traits::PostDispatchInfoOf","value":"<T as Dispatchable>::PostInfo","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to reference the `PostInfo` type of a `Dispatchable`.\n","sig":null,"attributes":[{"value":"/ Shortcut to reference the `PostInfo` type of a `Dispatchable`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134492,"byte_end":134558,"line_start":673,"line_end":673,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1009},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135097,"byte_end":135112,"line_start":688,"line_end":688,"column_start":11,"column_end":26},"name":"SignedExtension","qualname":"::traits::SignedExtension","value":"SignedExtension: Codec + Debug + Sync + Send + Clone + Eq + PartialEq","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1023}],"decl_id":null,"docs":" Means by which a transaction may be extended. This type embodies both the data and the logic\n that should be additionally associated with the transaction. It should be plain old data.\n","sig":null,"attributes":[{"value":"/ Means by which a transaction may be extended. This type embodies both the data and the logic","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134896,"byte_end":134992,"line_start":686,"line_end":686,"column_start":1,"column_end":97}},{"value":"/ that should be additionally associated with the transaction. It should be plain old data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":134993,"byte_end":135086,"line_start":687,"line_end":687,"column_start":1,"column_end":94}}]},{"kind":"Const","id":{"krate":0,"index":1010},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135332,"byte_end":135342,"line_start":693,"line_end":693,"column_start":8,"column_end":18},"name":"IDENTIFIER","qualname":"::traits::SignedExtension::IDENTIFIER","value":"&'static str","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Unique identifier of this signed extension.","sig":null,"attributes":[{"value":"/ Unique identifier of this signed extension.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135170,"byte_end":135217,"line_start":689,"line_end":689,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135219,"byte_end":135222,"line_start":690,"line_end":690,"column_start":2,"column_end":5}},{"value":"/ This will be exposed in the metadata to identify the signed extension used","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135224,"byte_end":135302,"line_start":691,"line_end":691,"column_start":2,"column_end":80}},{"value":"/ in an extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135304,"byte_end":135324,"line_start":692,"line_end":692,"column_start":2,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1011},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135414,"byte_end":135423,"line_start":696,"line_end":696,"column_start":7,"column_end":16},"name":"AccountId","qualname":"::traits::SignedExtension::AccountId","value":"type AccountId;","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" The type which encodes the sender identity.\n","sig":null,"attributes":[{"value":"/ The type which encodes the sender identity.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135360,"byte_end":135407,"line_start":695,"line_end":695,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1012},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135487,"byte_end":135491,"line_start":699,"line_end":699,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::SignedExtension::Call","value":"type Call: Dispatchable;","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" The type which encodes the call to be dispatched.\n","sig":null,"attributes":[{"value":"/ The type which encodes the call to be dispatched.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135427,"byte_end":135480,"line_start":698,"line_end":698,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1013},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135675,"byte_end":135691,"line_start":703,"line_end":703,"column_start":7,"column_end":23},"name":"AdditionalSigned","qualname":"::traits::SignedExtension::AdditionalSigned","value":"type AdditionalSigned: Encode;","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Any additional data that will go into the signed payload. This may be created dynamically\n from the transaction using the `additional_signed` function.\n","sig":null,"attributes":[{"value":"/ Any additional data that will go into the signed payload. This may be created dynamically","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135509,"byte_end":135602,"line_start":701,"line_end":701,"column_start":2,"column_end":95}},{"value":"/ from the transaction using the `additional_signed` function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135604,"byte_end":135668,"line_start":702,"line_end":702,"column_start":2,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1014},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135802,"byte_end":135805,"line_start":706,"line_end":706,"column_start":7,"column_end":10},"name":"Pre","qualname":"::traits::SignedExtension::Pre","value":"type Pre: Default;","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" The type that encodes information that can be passed from pre_dispatch to post-dispatch.\n","sig":null,"attributes":[{"value":"/ The type that encodes information that can be passed from pre_dispatch to post-dispatch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135703,"byte_end":135795,"line_start":705,"line_end":705,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136004,"byte_end":136021,"line_start":710,"line_end":710,"column_start":5,"column_end":22},"name":"additional_signed","qualname":"::traits::SignedExtension::additional_signed","value":"fn (&self) -> Result<Self::AdditionalSigned, TransactionValidityError>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Construct any additional data that should be in the signed payload of the transaction. Can\n also perform any pre-signature-verification checks and return an error if needed.\n","sig":null,"attributes":[{"value":"/ Construct any additional data that should be in the signed payload of the transaction. Can","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135818,"byte_end":135912,"line_start":708,"line_end":708,"column_start":2,"column_end":96}},{"value":"/ also perform any pre-signature-verification checks and return an error if needed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135914,"byte_end":135999,"line_start":709,"line_end":709,"column_start":2,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136533,"byte_end":136541,"line_start":721,"line_end":721,"column_start":5,"column_end":13},"name":"validate","qualname":"::traits::SignedExtension::validate","value":"fn (&self, _who: &Self::AccountId, _call: &Self::Call, _info: &DispatchInfoOf<Self::Call>, _len: usize) -> TransactionValidity","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Validate a signed transaction for the transaction queue.","sig":null,"attributes":[{"value":"/ Validate a signed transaction for the transaction queue.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136092,"byte_end":136152,"line_start":712,"line_end":712,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136154,"byte_end":136157,"line_start":713,"line_end":713,"column_start":2,"column_end":5}},{"value":"/ This function can be called frequently by the transaction queue,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136159,"byte_end":136227,"line_start":714,"line_end":714,"column_start":2,"column_end":70}},{"value":"/ to obtain transaction validity against current state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136229,"byte_end":136286,"line_start":715,"line_end":715,"column_start":2,"column_end":59}},{"value":"/ It should perform all checks that determine a valid transaction,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136288,"byte_end":136356,"line_start":716,"line_end":716,"column_start":2,"column_end":70}},{"value":"/ that can pay for its execution and quickly eliminate ones","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136358,"byte_end":136419,"line_start":717,"line_end":717,"column_start":2,"column_end":63}},{"value":"/ that are stale or incorrect.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136421,"byte_end":136453,"line_start":718,"line_end":718,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136455,"byte_end":136458,"line_start":719,"line_end":719,"column_start":2,"column_end":5}},{"value":"/ Make sure to perform the same checks in `pre_dispatch` function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136460,"byte_end":136528,"line_start":720,"line_end":720,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137108,"byte_end":137120,"line_start":739,"line_end":739,"column_start":5,"column_end":17},"name":"pre_dispatch","qualname":"::traits::SignedExtension::pre_dispatch","value":"fn (self, who: &Self::AccountId, call: &Self::Call, info: &DispatchInfoOf<Self::Call>, len: usize) -> Result<Self::Pre, TransactionValidityError>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Do any pre-flight stuff for a signed transaction.","sig":null,"attributes":[{"value":"/ Do any pre-flight stuff for a signed transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136720,"byte_end":136773,"line_start":731,"line_end":731,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136775,"byte_end":136778,"line_start":732,"line_end":732,"column_start":2,"column_end":5}},{"value":"/ Note this function by default delegates to `validate`, so that","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136780,"byte_end":136846,"line_start":733,"line_end":733,"column_start":2,"column_end":68}},{"value":"/ all checks performed for the transaction queue are also performed during","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136848,"byte_end":136924,"line_start":734,"line_end":734,"column_start":2,"column_end":78}},{"value":"/ the dispatch phase (applying the extrinsic).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136926,"byte_end":136974,"line_start":735,"line_end":735,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136976,"byte_end":136979,"line_start":736,"line_end":736,"column_start":2,"column_end":5}},{"value":"/ If you ever override this function, you need to make sure to always","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":136981,"byte_end":137052,"line_start":737,"line_end":737,"column_start":2,"column_end":73}},{"value":"/ perform the same validation as in `validate`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137054,"byte_end":137103,"line_start":738,"line_end":738,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137805,"byte_end":137822,"line_start":759,"line_end":759,"column_start":5,"column_end":22},"name":"validate_unsigned","qualname":"::traits::SignedExtension::validate_unsigned","value":"fn (_call: &Self::Call, _info: &DispatchInfoOf<Self::Call>, _len: usize) -> TransactionValidity","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Validate an unsigned transaction for the transaction queue.","sig":null,"attributes":[{"value":"/ Validate an unsigned transaction for the transaction queue.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137380,"byte_end":137443,"line_start":751,"line_end":751,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137445,"byte_end":137448,"line_start":752,"line_end":752,"column_start":2,"column_end":5}},{"value":"/ This function can be called frequently by the transaction queue","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137450,"byte_end":137517,"line_start":753,"line_end":753,"column_start":2,"column_end":69}},{"value":"/ to obtain transaction validity against current state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137519,"byte_end":137576,"line_start":754,"line_end":754,"column_start":2,"column_end":59}},{"value":"/ It should perform all checks that determine a valid unsigned transaction,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137578,"byte_end":137655,"line_start":755,"line_end":755,"column_start":2,"column_end":79}},{"value":"/ and quickly eliminate ones that are stale or incorrect.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137657,"byte_end":137716,"line_start":756,"line_end":756,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137718,"byte_end":137721,"line_start":757,"line_end":757,"column_start":2,"column_end":5}},{"value":"/ Make sure to perform the same checks in `pre_dispatch_unsigned` function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137723,"byte_end":137800,"line_start":758,"line_end":758,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138374,"byte_end":138395,"line_start":775,"line_end":775,"column_start":5,"column_end":26},"name":"pre_dispatch_unsigned","qualname":"::traits::SignedExtension::pre_dispatch_unsigned","value":"fn (call: &Self::Call, info: &DispatchInfoOf<Self::Call>, len: usize) -> Result<Self::Pre, TransactionValidityError>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Do any pre-flight stuff for a unsigned transaction.","sig":null,"attributes":[{"value":"/ Do any pre-flight stuff for a unsigned transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":137966,"byte_end":138021,"line_start":767,"line_end":767,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138023,"byte_end":138026,"line_start":768,"line_end":768,"column_start":2,"column_end":5}},{"value":"/ Note this function by default delegates to `validate_unsigned`, so that","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138028,"byte_end":138103,"line_start":769,"line_end":769,"column_start":2,"column_end":77}},{"value":"/ all checks performed for the transaction queue are also performed during","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138105,"byte_end":138181,"line_start":770,"line_end":770,"column_start":2,"column_end":78}},{"value":"/ the dispatch phase (applying the extrinsic).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138183,"byte_end":138231,"line_start":771,"line_end":771,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138233,"byte_end":138236,"line_start":772,"line_end":772,"column_start":2,"column_end":5}},{"value":"/ If you ever override this function, you need to make sure to always","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138238,"byte_end":138309,"line_start":773,"line_end":773,"column_start":2,"column_end":73}},{"value":"/ perform the same validation as in `validate_unsigned`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138311,"byte_end":138369,"line_start":774,"line_end":774,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139425,"byte_end":139438,"line_start":798,"line_end":798,"column_start":5,"column_end":18},"name":"post_dispatch","qualname":"::traits::SignedExtension::post_dispatch","value":"fn (_pre: Self::Pre, _info: &DispatchInfoOf<Self::Call>, _post_info: &PostDispatchInfoOf<Self::Call>, _len: usize, _result: &DispatchResult) -> Result<(), TransactionValidityError>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Do any post-flight stuff for an extrinsic.","sig":null,"attributes":[{"value":"/ Do any post-flight stuff for an extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138627,"byte_end":138673,"line_start":785,"line_end":785,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138675,"byte_end":138678,"line_start":786,"line_end":786,"column_start":2,"column_end":5}},{"value":"/ This gets given the `DispatchResult` `_result` from the extrinsic and can, if desired,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138680,"byte_end":138770,"line_start":787,"line_end":787,"column_start":2,"column_end":92}},{"value":"/ introduce a `TransactionValidityError`, causing the block to become invalid for including","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138772,"byte_end":138865,"line_start":788,"line_end":788,"column_start":2,"column_end":95}},{"value":"/ it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138867,"byte_end":138874,"line_start":789,"line_end":789,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138876,"byte_end":138879,"line_start":790,"line_end":790,"column_start":2,"column_end":5}},{"value":"/ WARNING: It is dangerous to return an error here. To do so will fundamentally invalidate the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138881,"byte_end":138977,"line_start":791,"line_end":791,"column_start":2,"column_end":98}},{"value":"/ transaction and any block that it is included in, causing the block author to not be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":138979,"byte_end":139067,"line_start":792,"line_end":792,"column_start":2,"column_end":90}},{"value":"/ compensated for their work in validating the transaction or producing the block so far.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139069,"byte_end":139160,"line_start":793,"line_end":793,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139162,"byte_end":139165,"line_start":794,"line_end":794,"column_start":2,"column_end":5}},{"value":"/ It can only be used safely when you *know* that the extrinsic is one that can only be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139167,"byte_end":139256,"line_start":795,"line_end":795,"column_start":2,"column_end":91}},{"value":"/ introduced by the current block author; generally this implies that it is an inherent and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139258,"byte_end":139351,"line_start":796,"line_end":796,"column_start":2,"column_end":95}},{"value":"/ will come from either an offchain-worker or via `InherentData`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139353,"byte_end":139420,"line_start":797,"line_end":797,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":140035,"byte_end":140045,"line_start":815,"line_end":815,"column_start":5,"column_end":15},"name":"identifier","qualname":"::traits::SignedExtension::identifier","value":"fn () -> Vec<&'static str>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Returns the list of unique identifier for this signed extension.","sig":null,"attributes":[{"value":"/ Returns the list of unique identifier for this signed extension.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139646,"byte_end":139714,"line_start":808,"line_end":808,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139716,"byte_end":139719,"line_start":809,"line_end":809,"column_start":2,"column_end":5}},{"value":"/ As a [`SignedExtension`] can be a tuple of [`SignedExtension`]s we need to return a `Vec`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139721,"byte_end":139814,"line_start":810,"line_end":810,"column_start":2,"column_end":95}},{"value":"/ that holds all the unique identifiers. Each individual `SignedExtension` must return","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139816,"byte_end":139904,"line_start":811,"line_end":811,"column_start":2,"column_end":90}},{"value":"/ *exactly* one identifier.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139906,"byte_end":139935,"line_start":812,"line_end":812,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139937,"byte_end":139940,"line_start":813,"line_end":813,"column_start":2,"column_end":5}},{"value":"/ This method provides a default implementation that returns `vec![SELF::IDENTIFIER]`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":139942,"byte_end":140030,"line_start":814,"line_end":814,"column_start":2,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":1031},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142943,"byte_end":142952,"line_start":904,"line_end":904,"column_start":11,"column_end":20},"name":"Applyable","qualname":"::traits::Applyable","value":"Applyable: Sized + Send + Sync","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1035}],"decl_id":null,"docs":" An \"executable\" piece of information, used by the standard Substrate Executive in order to\n enact a piece of extrinsic information by marshalling and dispatching to a named function\n call.","sig":null,"attributes":[{"value":"/ An \"executable\" piece of information, used by the standard Substrate Executive in order to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142567,"byte_end":142661,"line_start":898,"line_end":898,"column_start":1,"column_end":95}},{"value":"/ enact a piece of extrinsic information by marshalling and dispatching to a named function","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142662,"byte_end":142755,"line_start":899,"line_end":899,"column_start":1,"column_end":94}},{"value":"/ call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142756,"byte_end":142765,"line_start":900,"line_end":900,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142766,"byte_end":142769,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ Also provides information on to whom this information is attributable and an index that allows","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142770,"byte_end":142868,"line_start":902,"line_end":902,"column_start":1,"column_end":99}},{"value":"/ each piece of attributable information to be disambiguated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142869,"byte_end":142932,"line_start":903,"line_end":903,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1032},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143058,"byte_end":143062,"line_start":906,"line_end":906,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::Applyable::Call","value":"type Call: Dispatchable;","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Type by which we can dispatch. Restricts the `UnsignedValidator` type.\n","sig":null,"attributes":[{"value":"/ Type by which we can dispatch. Restricts the `UnsignedValidator` type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142977,"byte_end":143051,"line_start":905,"line_end":905,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143172,"byte_end":143180,"line_start":909,"line_end":909,"column_start":5,"column_end":13},"name":"validate","qualname":"::traits::Applyable::validate","value":"fn <V> (&self, source: TransactionSource, info: &DispatchInfoOf<Self::Call>, len: usize) -> TransactionValidity","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Checks to see if this is a valid *transaction*. It returns information on it if so.\n","sig":null,"attributes":[{"value":"/ Checks to see if this is a valid *transaction*. It returns information on it if so.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143080,"byte_end":143167,"line_start":908,"line_end":908,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143460,"byte_end":143465,"line_start":918,"line_end":918,"column_start":5,"column_end":10},"name":"apply","qualname":"::traits::Applyable::apply","value":"fn <V> (self, info: &DispatchInfoOf<Self::Call>, len: usize) -> crate::ApplyExtrinsicResultWithInfo<PostDispatchInfoOf<Self::Call>>","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Executes all necessary logic needed prior to dispatch and deconstructs into function call,\n index and sender.\n","sig":null,"attributes":[{"value":"/ Executes all necessary logic needed prior to dispatch and deconstructs into function call,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143338,"byte_end":143432,"line_start":916,"line_end":916,"column_start":2,"column_end":96}},{"value":"/ index and sender.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143434,"byte_end":143455,"line_start":917,"line_end":917,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1037},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143727,"byte_end":143746,"line_start":926,"line_end":926,"column_start":11,"column_end":30},"name":"GetRuntimeBlockType","qualname":"::traits::GetRuntimeBlockType","value":"GetRuntimeBlockType","parent":null,"children":[{"krate":0,"index":1038}],"decl_id":null,"docs":" A marker trait for something that knows the type of the runtime block.\n","sig":null,"attributes":[{"value":"/ A marker trait for something that knows the type of the runtime block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143642,"byte_end":143716,"line_start":925,"line_end":925,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1038},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143785,"byte_end":143797,"line_start":928,"line_end":928,"column_start":7,"column_end":19},"name":"RuntimeBlock","qualname":"::traits::GetRuntimeBlockType::RuntimeBlock","value":"type RuntimeBlock: self::Block;","parent":{"krate":0,"index":1037},"children":[],"decl_id":null,"docs":" The `RuntimeBlock` type.\n","sig":null,"attributes":[{"value":"/ The `RuntimeBlock` type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143750,"byte_end":143778,"line_start":927,"line_end":927,"column_start":2,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":1039},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143897,"byte_end":143913,"line_start":932,"line_end":932,"column_start":11,"column_end":27},"name":"GetNodeBlockType","qualname":"::traits::GetNodeBlockType","value":"GetNodeBlockType","parent":null,"children":[{"krate":0,"index":1040}],"decl_id":null,"docs":" A marker trait for something that knows the type of the node block.\n","sig":null,"attributes":[{"value":"/ A marker trait for something that knows the type of the node block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143815,"byte_end":143886,"line_start":931,"line_end":931,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143949,"byte_end":143958,"line_start":934,"line_end":934,"column_start":7,"column_end":16},"name":"NodeBlock","qualname":"::traits::GetNodeBlockType::NodeBlock","value":"type NodeBlock: self::Block;","parent":{"krate":0,"index":1039},"children":[],"decl_id":null,"docs":" The `NodeBlock` type.\n","sig":null,"attributes":[{"value":"/ The `NodeBlock` type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143917,"byte_end":143942,"line_start":933,"line_end":933,"column_start":2,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1041},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144317,"byte_end":144333,"line_start":943,"line_end":943,"column_start":11,"column_end":27},"name":"ValidateUnsigned","qualname":"::traits::ValidateUnsigned","value":"ValidateUnsigned","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1045}],"decl_id":null,"docs":" Something that can validate unsigned extrinsics for the transaction pool.","sig":null,"attributes":[{"value":"/ Something that can validate unsigned extrinsics for the transaction pool.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":143976,"byte_end":144053,"line_start":937,"line_end":937,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144054,"byte_end":144057,"line_start":938,"line_end":938,"column_start":1,"column_end":4}},{"value":"/ Note that any checks done here are only used for determining the validity of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144058,"byte_end":144138,"line_start":939,"line_end":939,"column_start":1,"column_end":81}},{"value":"/ the transaction for the transaction pool.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144139,"byte_end":144184,"line_start":940,"line_end":940,"column_start":1,"column_end":46}},{"value":"/ During block execution phase one need to perform the same checks anyway,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144185,"byte_end":144261,"line_start":941,"line_end":941,"column_start":1,"column_end":77}},{"value":"/ since this function is not being called.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144262,"byte_end":144306,"line_start":942,"line_end":942,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1042},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144368,"byte_end":144372,"line_start":945,"line_end":945,"column_start":7,"column_end":11},"name":"Call","qualname":"::traits::ValidateUnsigned::Call","value":"type Call;","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" The call to validate\n","sig":null,"attributes":[{"value":"/ The call to validate","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144337,"byte_end":144361,"line_start":944,"line_end":944,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144857,"byte_end":144869,"line_start":957,"line_end":957,"column_start":5,"column_end":17},"name":"pre_dispatch","qualname":"::traits::ValidateUnsigned::pre_dispatch","value":"fn (call: &Self::Call) -> Result<(), TransactionValidityError>","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" Validate the call right before dispatch.","sig":null,"attributes":[{"value":"/ Validate the call right before dispatch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144376,"byte_end":144420,"line_start":947,"line_end":947,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144422,"byte_end":144425,"line_start":948,"line_end":948,"column_start":2,"column_end":5}},{"value":"/ This method should be used to prevent transactions already in the pool","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144427,"byte_end":144501,"line_start":949,"line_end":949,"column_start":2,"column_end":76}},{"value":"/ (i.e. passing `validate_unsigned`) from being included in blocks","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144503,"byte_end":144571,"line_start":950,"line_end":950,"column_start":2,"column_end":70}},{"value":"/ in case we know they now became invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144573,"byte_end":144617,"line_start":951,"line_end":951,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144619,"byte_end":144622,"line_start":952,"line_end":952,"column_start":2,"column_end":5}},{"value":"/ By default it's a good idea to call `validate_unsigned` from within","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144624,"byte_end":144695,"line_start":953,"line_end":953,"column_start":2,"column_end":73}},{"value":"/ this function again to make sure we never include an invalid transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144697,"byte_end":144774,"line_start":954,"line_end":954,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144776,"byte_end":144779,"line_start":955,"line_end":955,"column_start":2,"column_end":5}},{"value":"/ Changes made to storage WILL be persisted if the call returns `Ok`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":144781,"byte_end":144852,"line_start":956,"line_end":956,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145276,"byte_end":145293,"line_start":969,"line_end":969,"column_start":5,"column_end":22},"name":"validate_unsigned","qualname":"::traits::ValidateUnsigned::validate_unsigned","value":"fn (source: TransactionSource, call: &Self::Call) -> TransactionValidity","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" Return the validity of the call","sig":null,"attributes":[{"value":"/ Return the validity of the call","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145036,"byte_end":145071,"line_start":963,"line_end":963,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145073,"byte_end":145076,"line_start":964,"line_end":964,"column_start":2,"column_end":5}},{"value":"/ This doesn't execute any side-effects; it merely checks","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145078,"byte_end":145137,"line_start":965,"line_end":965,"column_start":2,"column_end":61}},{"value":"/ whether the transaction would panic if it were included or not.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145139,"byte_end":145206,"line_start":966,"line_end":966,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145208,"byte_end":145211,"line_start":967,"line_end":967,"column_start":2,"column_end":5}},{"value":"/ Changes made to storage should be discarded by caller.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145213,"byte_end":145271,"line_start":968,"line_end":968,"column_start":2,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1046},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145495,"byte_end":145505,"line_start":974,"line_end":974,"column_start":11,"column_end":21},"name":"OpaqueKeys","qualname":"::traits::OpaqueKeys","value":"OpaqueKeys: Clone","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1052}],"decl_id":null,"docs":" Opaque data type that may be destructured into a series of raw byte slices (which represent\n individual keys).\n","sig":null,"attributes":[{"value":"/ Opaque data type that may be destructured into a series of raw byte slices (which represent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145367,"byte_end":145462,"line_start":972,"line_end":972,"column_start":1,"column_end":96}},{"value":"/ individual keys).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145463,"byte_end":145484,"line_start":973,"line_end":973,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1047},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145598,"byte_end":145616,"line_start":976,"line_end":976,"column_start":7,"column_end":25},"name":"KeyTypeIdProviders","qualname":"::traits::OpaqueKeys::KeyTypeIdProviders","value":"type KeyTypeIdProviders;","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Types bound to this opaque keys that provide the key type ids returned.\n","sig":null,"attributes":[{"value":"/ Types bound to this opaque keys that provide the key type ids returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145516,"byte_end":145591,"line_start":975,"line_end":975,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145675,"byte_end":145682,"line_start":979,"line_end":979,"column_start":5,"column_end":12},"name":"key_ids","qualname":"::traits::OpaqueKeys::key_ids","value":"fn () -> &'static [crate::KeyTypeId]","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Return the key-type IDs supported by this set.\n","sig":null,"attributes":[{"value":"/ Return the key-type IDs supported by this set.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145620,"byte_end":145670,"line_start":978,"line_end":978,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145773,"byte_end":145780,"line_start":981,"line_end":981,"column_start":5,"column_end":12},"name":"get_raw","qualname":"::traits::OpaqueKeys::get_raw","value":"fn (&self, i: super::KeyTypeId) -> &[u8]","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Get the raw bytes of key with key-type ID `i`.\n","sig":null,"attributes":[{"value":"/ Get the raw bytes of key with key-type ID `i`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145718,"byte_end":145768,"line_start":980,"line_end":980,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145870,"byte_end":145873,"line_start":983,"line_end":983,"column_start":5,"column_end":8},"name":"get","qualname":"::traits::OpaqueKeys::get","value":"fn <T> (&self, i: super::KeyTypeId) -> Option<T>","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Get the decoded key with key-type ID `i`.\n","sig":null,"attributes":[{"value":"/ Get the decoded key with key-type ID `i`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145820,"byte_end":145865,"line_start":982,"line_end":982,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146021,"byte_end":146045,"line_start":987,"line_end":987,"column_start":5,"column_end":29},"name":"ownership_proof_is_valid","qualname":"::traits::OpaqueKeys::ownership_proof_is_valid","value":"fn (&self, _proof: &[u8]) -> bool","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" Verify a proof of ownership for the keys.\n","sig":null,"attributes":[{"value":"/ Verify a proof of ownership for the keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145971,"byte_end":146016,"line_start":986,"line_end":986,"column_start":2,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1053},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146280,"byte_end":146296,"line_start":994,"line_end":994,"column_start":12,"column_end":28},"name":"AppendZerosInput","qualname":"::traits::AppendZerosInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Input that adds infinite number of zero after wrapped input.","sig":null,"attributes":[{"value":"/ Input that adds infinite number of zero after wrapped input.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146088,"byte_end":146152,"line_start":990,"line_end":990,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146153,"byte_end":146156,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ This can add an infinite stream of zeros onto any input, not just a slice as with","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146157,"byte_end":146242,"line_start":992,"line_end":992,"column_start":1,"column_end":86}},{"value":"/ `TrailingZerosInput`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146243,"byte_end":146268,"line_start":993,"line_end":993,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146417,"byte_end":146420,"line_start":998,"line_end":998,"column_start":9,"column_end":12},"name":"new","qualname":"<AppendZerosInput>::new","value":"fn (input: &'a mut T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given byte array.\n","sig":null,"attributes":[{"value":"/ Create a new instance from the given byte array.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146356,"byte_end":146408,"line_start":997,"line_end":997,"column_start":2,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147320,"byte_end":147337,"line_start":1037,"line_end":1037,"column_start":12,"column_end":29},"name":"TrailingZeroInput","qualname":"::traits::TrailingZeroInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" Input that adds infinite number of zero after wrapped input.\n","sig":null,"attributes":[{"value":"/ Input that adds infinite number of zero after wrapped input.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147244,"byte_end":147308,"line_start":1036,"line_end":1036,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147449,"byte_end":147452,"line_start":1041,"line_end":1041,"column_start":9,"column_end":12},"name":"new","qualname":"<TrailingZeroInput>::new","value":"fn (data: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given byte array.\n","sig":null,"attributes":[{"value":"/ Create a new instance from the given byte array.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147388,"byte_end":147440,"line_start":1040,"line_end":1040,"column_start":2,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1078},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148036,"byte_end":148055,"line_start":1064,"line_end":1064,"column_start":11,"column_end":30},"name":"AccountIdConversion","qualname":"::traits::AccountIdConversion","value":"AccountIdConversion<AccountId>: Sized","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085}],"decl_id":null,"docs":" This type can be converted into and possibly from an AccountId (which itself is generic).\n","sig":null,"attributes":[{"value":"/ This type can be converted into and possibly from an AccountId (which itself is generic).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147932,"byte_end":148025,"line_start":1063,"line_end":1063,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148133,"byte_end":148145,"line_start":1066,"line_end":1066,"column_start":5,"column_end":17},"name":"into_account","qualname":"::traits::AccountIdConversion::into_account","value":"fn (&self) -> AccountId","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Convert into an account ID. This is infallible.\n","sig":null,"attributes":[{"value":"/ Convert into an account ID. This is infallible.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148077,"byte_end":148128,"line_start":1065,"line_end":1065,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148271,"byte_end":148287,"line_start":1069,"line_end":1069,"column_start":5,"column_end":21},"name":"try_from_account","qualname":"::traits::AccountIdConversion::try_from_account","value":"fn (a: &AccountId) -> Option<Self>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Try to convert an account ID into this type. Might not succeed.\n","sig":null,"attributes":[{"value":"/ Try to convert an account ID into this type. Might not succeed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148199,"byte_end":148266,"line_start":1068,"line_end":1068,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148885,"byte_end":148901,"line_start":1082,"line_end":1082,"column_start":5,"column_end":21},"name":"into_sub_account","qualname":"::traits::AccountIdConversion::into_sub_account","value":"fn <S> (&self, sub: S) -> AccountId","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Convert this value amalgamated with the a secondary \"sub\" value into an account ID. This is\n infallible.","sig":null,"attributes":[{"value":"/ Convert this value amalgamated with the a secondary \"sub\" value into an account ID. This is","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148377,"byte_end":148472,"line_start":1073,"line_end":1073,"column_start":2,"column_end":97}},{"value":"/ infallible.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148474,"byte_end":148489,"line_start":1074,"line_end":1074,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148491,"byte_end":148494,"line_start":1075,"line_end":1075,"column_start":2,"column_end":5}},{"value":"/ NOTE: The account IDs from this and from `into_account` are *not* guaranteed to be distinct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148496,"byte_end":148591,"line_start":1076,"line_end":1076,"column_start":2,"column_end":97}},{"value":"/ for any given value of `self`, nor are different invocations to this with different types","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148593,"byte_end":148686,"line_start":1077,"line_end":1077,"column_start":2,"column_end":95}},{"value":"/ `T`. For example, the following will all encode to the same account ID value:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148688,"byte_end":148769,"line_start":1078,"line_end":1078,"column_start":2,"column_end":83}},{"value":"/ - `self.into_sub_account(0u32)`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148771,"byte_end":148806,"line_start":1079,"line_end":1079,"column_start":2,"column_end":37}},{"value":"/ - `self.into_sub_account(vec![0u8; 0])`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148808,"byte_end":148851,"line_start":1080,"line_end":1080,"column_start":2,"column_end":45}},{"value":"/ - `self.into_account()`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148853,"byte_end":148880,"line_start":1081,"line_end":1081,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":149016,"byte_end":149036,"line_start":1085,"line_end":1085,"column_start":5,"column_end":25},"name":"try_from_sub_account","qualname":"::traits::AccountIdConversion::try_from_sub_account","value":"fn <S> (x: &AccountId) -> Option<(Self, S)>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Try to convert an account ID into this type. Might not succeed.\n","sig":null,"attributes":[{"value":"/ Try to convert an account ID into this type. Might not succeed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148944,"byte_end":149011,"line_start":1084,"line_end":1084,"column_start":2,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":1099},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":153999,"byte_end":154008,"line_start":1262,"line_end":1262,"column_start":11,"column_end":20},"name":"Printable","qualname":"::traits::Printable","value":"Printable","parent":null,"children":[{"krate":0,"index":1100}],"decl_id":null,"docs":" Trait for things which can be printed from the runtime.\n","sig":null,"attributes":[{"value":"/ Trait for things which can be printed from the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":153929,"byte_end":153988,"line_start":1261,"line_end":1261,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":154038,"byte_end":154043,"line_start":1264,"line_end":1264,"column_start":5,"column_end":10},"name":"print","qualname":"::traits::Printable::print","value":"fn (&self) -> ()","parent":{"krate":0,"index":1099},"children":[],"decl_id":null,"docs":" Print the object.\n","sig":null,"attributes":[{"value":"/ Print the object.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":154012,"byte_end":154033,"line_start":1263,"line_end":1263,"column_start":2,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":1120},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155047,"byte_end":155056,"line_start":1334,"line_end":1334,"column_start":11,"column_end":20},"name":"BlockIdTo","qualname":"::traits::BlockIdTo","value":"BlockIdTo<Block: self::Block>","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"decl_id":null,"docs":" Something that can convert a [`BlockId`](crate::generic::BlockId) to a number or a hash.\n","sig":null,"attributes":[{"value":"/ Something that can convert a [`BlockId`](crate::generic::BlockId) to a number or a hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":154920,"byte_end":155012,"line_start":1332,"line_end":1332,"column_start":1,"column_end":93}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155013,"byte_end":155036,"line_start":1333,"line_end":1333,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":1122},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155145,"byte_end":155150,"line_start":1336,"line_end":1336,"column_start":7,"column_end":12},"name":"Error","qualname":"::traits::BlockIdTo::Error","value":"type Error: std::fmt::Debug;","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" The error type that will be returned by the functions.\n","sig":null,"attributes":[{"value":"/ The error type that will be returned by the functions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155080,"byte_end":155138,"line_start":1335,"line_end":1335,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155241,"byte_end":155248,"line_start":1339,"line_end":1339,"column_start":5,"column_end":12},"name":"to_hash","qualname":"::traits::BlockIdTo::to_hash","value":"fn (&self, block_id: &crate::generic::BlockId<Block>) -> Result<Option<Block::Hash>, Self::Error>","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" Convert the given `block_id` to the corresponding block hash.\n","sig":null,"attributes":[{"value":"/ Convert the given `block_id` to the corresponding block hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155171,"byte_end":155236,"line_start":1338,"line_end":1338,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155426,"byte_end":155435,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14},"name":"to_number","qualname":"::traits::BlockIdTo::to_number","value":"fn (&self, block_id: &crate::generic::BlockId<Block>) -> Result<Option<NumberFor<Block>>, Self::Error>","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" Convert the given `block_id` to the corresponding block number.\n","sig":null,"attributes":[{"value":"/ Convert the given `block_id` to the corresponding block number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":155354,"byte_end":155421,"line_start":1344,"line_end":1344,"column_start":2,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":1125},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transaction_validity","qualname":"::transaction_validity","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":3192},{"krate":0,"index":3241},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3228},{"krate":0,"index":3223},{"krate":0,"index":3222},{"krate":0,"index":3220},{"krate":0,"index":3214},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":3243},{"krate":0,"index":3278},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3265},{"krate":0,"index":3260},{"krate":0,"index":3259},{"krate":0,"index":3257},{"krate":0,"index":3251},{"krate":0,"index":1139},{"krate":0,"index":3280},{"krate":0,"index":3314},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3301},{"krate":0,"index":3296},{"krate":0,"index":3295},{"krate":0,"index":3293},{"krate":0,"index":3287},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":3316},{"krate":0,"index":3346},{"krate":0,"index":3344},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3332},{"krate":0,"index":3327},{"krate":0,"index":3325},{"krate":0,"index":3323},{"krate":0,"index":3347},{"krate":0,"index":3373},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3360},{"krate":0,"index":3355},{"krate":0,"index":3353},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":3375},{"krate":0,"index":3382},{"krate":0,"index":3380},{"krate":0,"index":3378},{"krate":0,"index":1160},{"krate":0,"index":1170},{"krate":0,"index":1172}],"decl_id":null,"docs":" Transaction validity interface.\n","sig":null,"attributes":[{"value":"! Transaction validity interface.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":158768,"byte_end":158803,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1131},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":158960,"byte_end":158979,"line_start":25,"line_end":25,"column_start":10,"column_end":29},"name":"TransactionPriority","qualname":"::transaction_validity::TransactionPriority","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Priority for a transaction. Additive. Higher is better.\n","sig":null,"attributes":[{"value":"/ Priority for a transaction. Additive. Higher is better.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":158891,"byte_end":158950,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1132},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159120,"byte_end":159140,"line_start":29,"line_end":29,"column_start":10,"column_end":30},"name":"TransactionLongevity","qualname":"::transaction_validity::TransactionLongevity","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Minimum number of blocks a transaction will remain valid for.\n `TransactionLongevity::max_value()` means \"forever\".\n","sig":null,"attributes":[{"value":"/ Minimum number of blocks a transaction will remain valid for.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":158988,"byte_end":159053,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ `TransactionLongevity::max_value()` means \"forever\".","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159054,"byte_end":159110,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1133},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159250,"byte_end":159264,"line_start":32,"line_end":32,"column_start":10,"column_end":24},"name":"TransactionTag","qualname":"::transaction_validity::TransactionTag","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Tag for a transaction. No two transactions with the same tag should be placed on-chain.\n","sig":null,"attributes":[{"value":"/ Tag for a transaction. No two transactions with the same tag should be placed on-chain.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159149,"byte_end":159240,"line_start":31,"line_end":31,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3193},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159518,"byte_end":159522,"line_start":39,"line_end":39,"column_start":2,"column_end":6},"name":"Call","qualname":"::transaction_validity::InvalidTransaction::Call","value":"InvalidTransaction::Call","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" The call of the transaction is not expected.\n","sig":null,"attributes":[{"value":"/ The call of the transaction is not expected.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159468,"byte_end":159516,"line_start":38,"line_end":38,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3195},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159618,"byte_end":159625,"line_start":41,"line_end":41,"column_start":2,"column_end":9},"name":"Payment","qualname":"::transaction_validity::InvalidTransaction::Payment","value":"InvalidTransaction::Payment","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" General error to do with the inability to pay some fees (e.g. account balance too low).\n","sig":null,"attributes":[{"value":"/ General error to do with the inability to pay some fees (e.g. account balance too low).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159525,"byte_end":159616,"line_start":40,"line_end":40,"column_start":2,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3197},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159717,"byte_end":159723,"line_start":43,"line_end":43,"column_start":2,"column_end":8},"name":"Future","qualname":"::transaction_validity::InvalidTransaction::Future","value":"InvalidTransaction::Future","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" General error to do with the transaction not yet being valid (e.g. nonce too high).\n","sig":null,"attributes":[{"value":"/ General error to do with the transaction not yet being valid (e.g. nonce too high).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159628,"byte_end":159715,"line_start":42,"line_end":42,"column_start":2,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3199},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159809,"byte_end":159814,"line_start":45,"line_end":45,"column_start":2,"column_end":7},"name":"Stale","qualname":"::transaction_validity::InvalidTransaction::Stale","value":"InvalidTransaction::Stale","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" General error to do with the transaction being outdated (e.g. nonce too low).\n","sig":null,"attributes":[{"value":"/ General error to do with the transaction being outdated (e.g. nonce too low).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159726,"byte_end":159807,"line_start":44,"line_end":44,"column_start":2,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3201},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160387,"byte_end":160395,"line_start":55,"line_end":55,"column_start":2,"column_end":10},"name":"BadProof","qualname":"::transaction_validity::InvalidTransaction::BadProof","value":"InvalidTransaction::BadProof","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" General error to do with the transaction's proofs (e.g. signature).","sig":null,"attributes":[{"value":"/ General error to do with the transaction's proofs (e.g. signature).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159817,"byte_end":159888,"line_start":46,"line_end":46,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159890,"byte_end":159893,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ # Possible causes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159895,"byte_end":159916,"line_start":48,"line_end":48,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159918,"byte_end":159921,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ When using a signed extension that provides additional data for signing, it is required","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159923,"byte_end":160014,"line_start":50,"line_end":50,"column_start":2,"column_end":93}},{"value":"/ that the signing and the verifying side use the same additional data. Additional","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160016,"byte_end":160100,"line_start":51,"line_end":51,"column_start":2,"column_end":86}},{"value":"/ data will only be used to generate the signature, but will not be part of the transaction","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160102,"byte_end":160195,"line_start":52,"line_end":52,"column_start":2,"column_end":95}},{"value":"/ itself. As the verifying side does not know which additional data was used while signing","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160197,"byte_end":160289,"line_start":53,"line_end":53,"column_start":2,"column_end":94}},{"value":"/ it will only be able to assume a bad signature and cannot express a more meaningful error.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160291,"byte_end":160385,"line_start":54,"line_end":54,"column_start":2,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3203},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160443,"byte_end":160460,"line_start":57,"line_end":57,"column_start":2,"column_end":19},"name":"AncientBirthBlock","qualname":"::transaction_validity::InvalidTransaction::AncientBirthBlock","value":"InvalidTransaction::AncientBirthBlock","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" The transaction birth block is ancient.\n","sig":null,"attributes":[{"value":"/ The transaction birth block is ancient.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160398,"byte_end":160441,"line_start":56,"line_end":56,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3205},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160639,"byte_end":160656,"line_start":62,"line_end":62,"column_start":2,"column_end":19},"name":"ExhaustsResources","qualname":"::transaction_validity::InvalidTransaction::ExhaustsResources","value":"InvalidTransaction::ExhaustsResources","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" The transaction would exhaust the resources of current block.","sig":null,"attributes":[{"value":"/ The transaction would exhaust the resources of current block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160463,"byte_end":160528,"line_start":58,"line_end":58,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160530,"byte_end":160533,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ The transaction might be valid, but there are not enough resources","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160535,"byte_end":160605,"line_start":60,"line_end":60,"column_start":2,"column_end":72}},{"value":"/ left in the current block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160607,"byte_end":160637,"line_start":61,"line_end":61,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3207},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160732,"byte_end":160738,"line_start":64,"line_end":64,"column_start":2,"column_end":8},"name":"Custom","qualname":"::transaction_validity::InvalidTransaction::Custom","value":"InvalidTransaction::Custom(u8)","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" Any other custom invalid validity that is not covered by this enum.\n","sig":null,"attributes":[{"value":"/ Any other custom invalid validity that is not covered by this enum.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160659,"byte_end":160730,"line_start":63,"line_end":63,"column_start":2,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3210},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161007,"byte_end":161019,"line_start":68,"line_end":68,"column_start":2,"column_end":14},"name":"BadMandatory","qualname":"::transaction_validity::InvalidTransaction::BadMandatory","value":"InvalidTransaction::BadMandatory","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a\n malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously\n overweight blocks and therefore if found, invalidates the block.\n","sig":null,"attributes":[{"value":"/ An extrinsic with a Mandatory dispatch resulted in Error. This is indicative of either a","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160745,"byte_end":160837,"line_start":65,"line_end":65,"column_start":2,"column_end":94}},{"value":"/ malicious validator or a buggy `provide_inherent`. In any case, it can result in dangerously","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160839,"byte_end":160935,"line_start":66,"line_end":66,"column_start":2,"column_end":98}},{"value":"/ overweight blocks and therefore if found, invalidates the block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":160937,"byte_end":161005,"line_start":67,"line_end":67,"column_start":2,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3212},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161157,"byte_end":161174,"line_start":71,"line_end":71,"column_start":2,"column_end":19},"name":"MandatoryDispatch","qualname":"::transaction_validity::InvalidTransaction::MandatoryDispatch","value":"InvalidTransaction::MandatoryDispatch","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are\n allowed to have mandatory dispatches.\n","sig":null,"attributes":[{"value":"/ A transaction with a mandatory dispatch. This is invalid; only inherent extrinsics are","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161022,"byte_end":161112,"line_start":69,"line_end":69,"column_start":2,"column_end":92}},{"value":"/ allowed to have mandatory dispatches.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161114,"byte_end":161155,"line_start":70,"line_end":70,"column_start":2,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3192},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159446,"byte_end":159464,"line_start":37,"line_end":37,"column_start":10,"column_end":28},"name":"InvalidTransaction","qualname":"::transaction_validity::InvalidTransaction","value":"InvalidTransaction::{Call, Payment, Future, Stale, BadProof, AncientBirthBlock, ExhaustsResources, Custom, BadMandatory, MandatoryDispatch}","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3195},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3212}],"decl_id":null,"docs":" An invalid transaction validity.\n","sig":null,"attributes":[{"value":"/ An invalid transaction validity.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":159277,"byte_end":159313,"line_start":34,"line_end":34,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161290,"byte_end":161309,"line_start":76,"line_end":76,"column_start":9,"column_end":28},"name":"exhausted_resources","qualname":"<InvalidTransaction>::exhausted_resources","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the reason for the invalidity was block resource exhaustion.\n","sig":null,"attributes":[{"value":"/ Returns if the reason for the invalidity was block resource exhaustion.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161206,"byte_end":161281,"line_start":75,"line_end":75,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161485,"byte_end":161498,"line_start":84,"line_end":84,"column_start":9,"column_end":22},"name":"was_mandatory","qualname":"<InvalidTransaction>::was_mandatory","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the reason for the invalidity was a mandatory call failing.\n","sig":null,"attributes":[{"value":"/ Returns if the reason for the invalidity was a mandatory call failing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161402,"byte_end":161476,"line_start":83,"line_end":83,"column_start":2,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3244},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162858,"byte_end":162870,"line_start":118,"line_end":118,"column_start":2,"column_end":14},"name":"CannotLookup","qualname":"::transaction_validity::UnknownTransaction::CannotLookup","value":"UnknownTransaction::CannotLookup","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":" Could not lookup some information that is required to validate the transaction.\n","sig":null,"attributes":[{"value":"/ Could not lookup some information that is required to validate the transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162773,"byte_end":162856,"line_start":117,"line_end":117,"column_start":2,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162933,"byte_end":162952,"line_start":120,"line_end":120,"column_start":2,"column_end":21},"name":"NoUnsignedValidator","qualname":"::transaction_validity::UnknownTransaction::NoUnsignedValidator","value":"UnknownTransaction::NoUnsignedValidator","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":" No validator found for the given unsigned transaction.\n","sig":null,"attributes":[{"value":"/ No validator found for the given unsigned transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162873,"byte_end":162931,"line_start":119,"line_end":119,"column_start":2,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163028,"byte_end":163034,"line_start":122,"line_end":122,"column_start":2,"column_end":8},"name":"Custom","qualname":"::transaction_validity::UnknownTransaction::Custom","value":"UnknownTransaction::Custom(u8)","parent":{"krate":0,"index":3243},"children":[],"decl_id":null,"docs":" Any other custom unknown validity that is not covered by this enum.\n","sig":null,"attributes":[{"value":"/ Any other custom unknown validity that is not covered by this enum.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162955,"byte_end":163026,"line_start":121,"line_end":121,"column_start":2,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3243},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162751,"byte_end":162769,"line_start":116,"line_end":116,"column_start":10,"column_end":28},"name":"UnknownTransaction","qualname":"::transaction_validity::UnknownTransaction","value":"UnknownTransaction::{CannotLookup, NoUnsignedValidator, Custom}","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3246},{"krate":0,"index":3248}],"decl_id":null,"docs":" An unknown transaction validity.\n","sig":null,"attributes":[{"value":"/ An unknown transaction validity.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":162582,"byte_end":162618,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3281},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163743,"byte_end":163750,"line_start":142,"line_end":142,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::transaction_validity::TransactionValidityError::Invalid","value":"TransactionValidityError::Invalid(InvalidTransaction)","parent":{"krate":0,"index":3280},"children":[],"decl_id":null,"docs":" The transaction is invalid.\n","sig":null,"attributes":[{"value":"/ The transaction is invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163710,"byte_end":163741,"line_start":141,"line_end":141,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3284},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163820,"byte_end":163827,"line_start":144,"line_end":144,"column_start":2,"column_end":9},"name":"Unknown","qualname":"::transaction_validity::TransactionValidityError::Unknown","value":"TransactionValidityError::Unknown(UnknownTransaction)","parent":{"krate":0,"index":3280},"children":[],"decl_id":null,"docs":" Transaction validity can't be determined.\n","sig":null,"attributes":[{"value":"/ Transaction validity can't be determined.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163773,"byte_end":163818,"line_start":143,"line_end":143,"column_start":2,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3280},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163682,"byte_end":163706,"line_start":140,"line_end":140,"column_start":10,"column_end":34},"name":"TransactionValidityError","qualname":"::transaction_validity::TransactionValidityError","value":"TransactionValidityError::{Invalid, Unknown}","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3284}],"decl_id":null,"docs":" Errors that can occur while checking the validity of a transaction.\n","sig":null,"attributes":[{"value":"/ Errors that can occur while checking the validity of a transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163478,"byte_end":163549,"line_start":137,"line_end":137,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163971,"byte_end":163990,"line_start":149,"line_end":149,"column_start":9,"column_end":28},"name":"exhausted_resources","qualname":"<TransactionValidityError>::exhausted_resources","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the reason for the error was block resource exhaustion.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the reason for the error was block resource exhaustion.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163885,"byte_end":163962,"line_start":148,"line_end":148,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164246,"byte_end":164259,"line_start":158,"line_end":158,"column_start":9,"column_end":22},"name":"was_mandatory","qualname":"<TransactionValidityError>::was_mandatory","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the reason for the error was it being a mandatory dispatch that could not\n be completed successfully.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the reason for the error was it being a mandatory dispatch that could not","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164110,"byte_end":164205,"line_start":156,"line_end":156,"column_start":2,"column_end":97}},{"value":"/ be completed successfully.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164207,"byte_end":164237,"line_start":157,"line_end":157,"column_start":2,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1150},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165054,"byte_end":165073,"line_start":188,"line_end":188,"column_start":10,"column_end":29},"name":"TransactionValidity","qualname":"::transaction_validity::TransactionValidity","value":"Result<ValidTransaction, TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Information on a transaction's validity and, if valid, on how it relates to other transactions.\n","sig":null,"attributes":[{"value":"/ Information on a transaction's validity and, if valid, on how it relates to other transactions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164945,"byte_end":165044,"line_start":187,"line_end":187,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3317},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166082,"byte_end":166089,"line_start":215,"line_end":215,"column_start":2,"column_end":9},"name":"InBlock","qualname":"::transaction_validity::TransactionSource::InBlock","value":"TransactionSource::InBlock","parent":{"krate":0,"index":3316},"children":[],"decl_id":null,"docs":" Transaction is already included in block.","sig":null,"attributes":[{"value":"/ Transaction is already included in block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165758,"byte_end":165803,"line_start":209,"line_end":209,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165805,"byte_end":165808,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ This means that we can't really tell where the transaction is coming from,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165810,"byte_end":165888,"line_start":211,"line_end":211,"column_start":2,"column_end":80}},{"value":"/ since it's already in the received block. Note that the custom validation logic","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165890,"byte_end":165973,"line_start":212,"line_end":212,"column_start":2,"column_end":85}},{"value":"/ using either `Local` or `External` should most likely just allow `InBlock`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165975,"byte_end":166053,"line_start":213,"line_end":213,"column_start":2,"column_end":80}},{"value":"/ transactions as well.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166055,"byte_end":166080,"line_start":214,"line_end":214,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3319},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166334,"byte_end":166339,"line_start":222,"line_end":222,"column_start":2,"column_end":7},"name":"Local","qualname":"::transaction_validity::TransactionSource::Local","value":"TransactionSource::Local","parent":{"krate":0,"index":3316},"children":[],"decl_id":null,"docs":" Transaction is coming from a local source.","sig":null,"attributes":[{"value":"/ Transaction is coming from a local source.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166093,"byte_end":166139,"line_start":217,"line_end":217,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166141,"byte_end":166144,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ This means that the transaction was produced internally by the node","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166146,"byte_end":166217,"line_start":219,"line_end":219,"column_start":2,"column_end":73}},{"value":"/ (for instance an Off-Chain Worker, or an Off-Chain Call), as opposed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166219,"byte_end":166291,"line_start":220,"line_end":220,"column_start":2,"column_end":74}},{"value":"/ to being received over the network.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166293,"byte_end":166332,"line_start":221,"line_end":221,"column_start":2,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166532,"byte_end":166540,"line_start":228,"line_end":228,"column_start":2,"column_end":10},"name":"External","qualname":"::transaction_validity::TransactionSource::External","value":"TransactionSource::External","parent":{"krate":0,"index":3316},"children":[],"decl_id":null,"docs":" Transaction has been received externally.","sig":null,"attributes":[{"value":"/ Transaction has been received externally.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166343,"byte_end":166388,"line_start":224,"line_end":224,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166390,"byte_end":166393,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ This means the transaction has been received from (usually) \"untrusted\" source,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166395,"byte_end":166478,"line_start":226,"line_end":226,"column_start":2,"column_end":85}},{"value":"/ for instance received over the network or RPC.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166480,"byte_end":166530,"line_start":227,"line_end":227,"column_start":2,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":3316},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165737,"byte_end":165754,"line_start":208,"line_end":208,"column_start":10,"column_end":27},"name":"TransactionSource","qualname":"::transaction_validity::TransactionSource","value":"TransactionSource::{InBlock, Local, External}","parent":null,"children":[{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321}],"decl_id":null,"docs":" The source of the transaction.","sig":null,"attributes":[{"value":"/ The source of the transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165371,"byte_end":165405,"line_start":202,"line_end":202,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165406,"byte_end":165409,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Depending on the source we might apply different validation schemes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165410,"byte_end":165482,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"/ For instance we can disallow specific kinds of transactions if they were not produced","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165483,"byte_end":165572,"line_start":205,"line_end":205,"column_start":1,"column_end":90}},{"value":"/ by our local node (for instance off-chain workers).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165573,"byte_end":165628,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3347},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166666,"byte_end":166682,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"ValidTransaction","qualname":"::transaction_validity::ValidTransaction","value":"ValidTransaction { priority, requires, provides, longevity, propagate }","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"decl_id":null,"docs":" Information concerning a valid transaction.\n","sig":null,"attributes":[{"value":"/ Information concerning a valid transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166545,"byte_end":166592,"line_start":231,"line_end":231,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3348},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166852,"byte_end":166860,"line_start":238,"line_end":238,"column_start":6,"column_end":14},"name":"priority","qualname":"::transaction_validity::ValidTransaction::priority","value":"u64","parent":{"krate":0,"index":3347},"children":[],"decl_id":null,"docs":" Priority of the transaction.","sig":null,"attributes":[{"value":"/ Priority of the transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166686,"byte_end":166718,"line_start":234,"line_end":234,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166720,"byte_end":166723,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ Priority determines the ordering of two transactions that have all","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166725,"byte_end":166795,"line_start":236,"line_end":236,"column_start":2,"column_end":72}},{"value":"/ their dependencies (required tags) satisfied.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166797,"byte_end":166846,"line_start":237,"line_end":237,"column_start":2,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3349},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167059,"byte_end":167067,"line_start":243,"line_end":243,"column_start":6,"column_end":14},"name":"requires","qualname":"::transaction_validity::ValidTransaction::requires","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":3347},"children":[],"decl_id":null,"docs":" Transaction dependencies","sig":null,"attributes":[{"value":"/ Transaction dependencies","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166884,"byte_end":166912,"line_start":239,"line_end":239,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166914,"byte_end":166917,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ A non-empty list signifies that some other transactions which provide","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166919,"byte_end":166992,"line_start":241,"line_end":241,"column_start":2,"column_end":75}},{"value":"/ given tags are required to be included before that one.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":166994,"byte_end":167053,"line_start":242,"line_end":242,"column_start":2,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3350},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167443,"byte_end":167451,"line_start":250,"line_end":250,"column_start":6,"column_end":14},"name":"provides","qualname":"::transaction_validity::ValidTransaction::provides","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":3347},"children":[],"decl_id":null,"docs":" Provided tags","sig":null,"attributes":[{"value":"/ Provided tags","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167091,"byte_end":167108,"line_start":244,"line_end":244,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167110,"byte_end":167113,"line_start":245,"line_end":245,"column_start":2,"column_end":5}},{"value":"/ A list of tags this transaction provides. Successfully importing the transaction","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167115,"byte_end":167199,"line_start":246,"line_end":246,"column_start":2,"column_end":86}},{"value":"/ will enable other transactions that depend on (require) those tags to be included as well.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167201,"byte_end":167295,"line_start":247,"line_end":247,"column_start":2,"column_end":96}},{"value":"/ Provided and required tags allow Substrate to build a dependency graph of transactions","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167297,"byte_end":167387,"line_start":248,"line_end":248,"column_start":2,"column_end":92}},{"value":"/ and import them in the right (linear) order.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167389,"byte_end":167437,"line_start":249,"line_end":249,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3351},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167669,"byte_end":167678,"line_start":255,"line_end":255,"column_start":6,"column_end":15},"name":"longevity","qualname":"::transaction_validity::ValidTransaction::longevity","value":"u64","parent":{"krate":0,"index":3347},"children":[],"decl_id":null,"docs":" Transaction longevity","sig":null,"attributes":[{"value":"/ Transaction longevity","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167475,"byte_end":167500,"line_start":251,"line_end":251,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167502,"byte_end":167505,"line_start":252,"line_end":252,"column_start":2,"column_end":5}},{"value":"/ Longevity describes minimum number of blocks the validity is correct.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167507,"byte_end":167580,"line_start":253,"line_end":253,"column_start":2,"column_end":75}},{"value":"/ After this period transaction should be removed from the pool or revalidated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167582,"byte_end":167663,"line_start":254,"line_end":254,"column_start":2,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3352},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167973,"byte_end":167982,"line_start":261,"line_end":261,"column_start":6,"column_end":15},"name":"propagate","qualname":"::transaction_validity::ValidTransaction::propagate","value":"bool","parent":{"krate":0,"index":3347},"children":[],"decl_id":null,"docs":" A flag indicating if the transaction should be propagated to other peers.","sig":null,"attributes":[{"value":"/ A flag indicating if the transaction should be propagated to other peers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167703,"byte_end":167780,"line_start":256,"line_end":256,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167782,"byte_end":167785,"line_start":257,"line_end":257,"column_start":2,"column_end":5}},{"value":"/ By setting `false` here the transaction will still be considered for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167787,"byte_end":167859,"line_start":258,"line_end":258,"column_start":2,"column_end":74}},{"value":"/ including in blocks that are authored on the current node, but will","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167861,"byte_end":167932,"line_start":259,"line_end":259,"column_start":2,"column_end":73}},{"value":"/ never be sent to other peers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":167934,"byte_end":167967,"line_start":260,"line_end":260,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168474,"byte_end":168489,"line_start":281,"line_end":281,"column_start":9,"column_end":24},"name":"with_tag_prefix","qualname":"<ValidTransaction>::with_tag_prefix","value":"fn (prefix: &'static str) -> ValidTransactionBuilder","parent":null,"children":[],"decl_id":null,"docs":" Initiate `ValidTransaction` builder object with a particular prefix for tags.","sig":null,"attributes":[{"value":"/ Initiate `ValidTransaction` builder object with a particular prefix for tags.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168236,"byte_end":168317,"line_start":277,"line_end":277,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168319,"byte_end":168322,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ To avoid conflicts between different parts in runtime it's recommended to build `requires`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168324,"byte_end":168418,"line_start":279,"line_end":279,"column_start":2,"column_end":96}},{"value":"/ and `provides` tags with a unique prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168420,"byte_end":168465,"line_start":280,"line_end":280,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168882,"byte_end":168894,"line_start":291,"line_end":291,"column_start":9,"column_end":21},"name":"combine_with","qualname":"<ValidTransaction>::combine_with","value":"fn (mut self, mut other: ValidTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Combine two instances into one, as a best effort. This will take the superset of each of the\n `provides` and `requires` tags, it will sum the priorities, take the minimum longevity and\n the logic *And* of the propagate flags.\n","sig":null,"attributes":[{"value":"/ Combine two instances into one, as a best effort. This will take the superset of each of the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168636,"byte_end":168732,"line_start":288,"line_end":288,"column_start":2,"column_end":98}},{"value":"/ `provides` and `requires` tags, it will sum the priorities, take the minimum longevity and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168734,"byte_end":168828,"line_start":289,"line_end":289,"column_start":2,"column_end":96}},{"value":"/ the logic *And* of the propagate flags.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168830,"byte_end":168873,"line_start":290,"line_end":290,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3375},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169525,"byte_end":169548,"line_start":308,"line_end":308,"column_start":12,"column_end":35},"name":"ValidTransactionBuilder","qualname":"::transaction_validity::ValidTransactionBuilder","value":"ValidTransactionBuilder {  }","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3377}],"decl_id":null,"docs":" `ValidTransaction` builder.","sig":null,"attributes":[{"value":"/ `ValidTransaction` builder.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169284,"byte_end":169315,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169316,"byte_end":169319,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169320,"byte_end":169323,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Allows to easily construct `ValidTransaction` and most importantly takes care of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169324,"byte_end":169408,"line_start":305,"line_end":305,"column_start":1,"column_end":85}},{"value":"/ prefixing `requires` and `provides` tags to avoid conflicts.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169409,"byte_end":169473,"line_start":306,"line_end":306,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170058,"byte_end":170066,"line_start":321,"line_end":321,"column_start":9,"column_end":17},"name":"priority","qualname":"<ValidTransactionBuilder>::priority","value":"fn (mut self, priority: TransactionPriority) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the priority of a transaction.","sig":null,"attributes":[{"value":"/ Set the priority of a transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169646,"byte_end":169684,"line_start":314,"line_end":314,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169686,"byte_end":169689,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ Note that the final priority for `FRAME` is combined from all `SignedExtension`s.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169691,"byte_end":169776,"line_start":316,"line_end":316,"column_start":2,"column_end":87}},{"value":"/ Most likely for unsigned transactions you want the priority to be higher","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169778,"byte_end":169854,"line_start":317,"line_end":317,"column_start":2,"column_end":78}},{"value":"/ than for regular transactions. We recommend exposing a base priority for unsigned","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169856,"byte_end":169941,"line_start":318,"line_end":318,"column_start":2,"column_end":87}},{"value":"/ transactions as a runtime module parameter, so that the runtime can tune inter-module","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169943,"byte_end":170032,"line_start":319,"line_end":319,"column_start":2,"column_end":91}},{"value":"/ priorities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170034,"byte_end":170049,"line_start":320,"line_end":320,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170534,"byte_end":170543,"line_start":332,"line_end":332,"column_start":9,"column_end":18},"name":"longevity","qualname":"<ValidTransactionBuilder>::longevity","value":"fn (mut self, longevity: TransactionLongevity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the longevity of a transaction.","sig":null,"attributes":[{"value":"/ Set the longevity of a transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170167,"byte_end":170206,"line_start":326,"line_end":326,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170208,"byte_end":170211,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ By default the transaction will be considered valid forever and will not be revalidated","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170213,"byte_end":170304,"line_start":328,"line_end":328,"column_start":2,"column_end":93}},{"value":"/ by the transaction pool. It's recommended though to set the longevity to a finite value","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170306,"byte_end":170397,"line_start":329,"line_end":329,"column_start":2,"column_end":93}},{"value":"/ though. If unsure, it's also reasonable to expose this parameter via module configuration","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170399,"byte_end":170492,"line_start":330,"line_end":330,"column_start":2,"column_end":95}},{"value":"/ and let the runtime decide.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170494,"byte_end":170525,"line_start":331,"line_end":331,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170940,"byte_end":170949,"line_start":342,"line_end":342,"column_start":9,"column_end":18},"name":"propagate","qualname":"<ValidTransactionBuilder>::propagate","value":"fn (mut self, propagate: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the propagate flag.","sig":null,"attributes":[{"value":"/ Set the propagate flag.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170648,"byte_end":170675,"line_start":337,"line_end":337,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170677,"byte_end":170680,"line_start":338,"line_end":338,"column_start":2,"column_end":5}},{"value":"/ Set to `false` if the transaction is not meant to be gossiped to peers. Combined with","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170682,"byte_end":170771,"line_start":339,"line_end":339,"column_start":2,"column_end":91}},{"value":"/ `TransactionSource::Local` validation it can be used to have special kind of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170773,"byte_end":170853,"line_start":340,"line_end":340,"column_start":2,"column_end":82}},{"value":"/ transactions that are only produced and included by the validator nodes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":170855,"byte_end":170931,"line_start":341,"line_end":341,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171263,"byte_end":171275,"line_start":351,"line_end":351,"column_start":9,"column_end":21},"name":"and_requires","qualname":"<ValidTransactionBuilder>::and_requires","value":"fn (mut self, tag: impl Encode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a `TransactionTag` to the set of required tags.","sig":null,"attributes":[{"value":"/ Add a `TransactionTag` to the set of required tags.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171038,"byte_end":171093,"line_start":347,"line_end":347,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171095,"byte_end":171098,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ The tag will be encoded and prefixed with module prefix (if any).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171100,"byte_end":171169,"line_start":349,"line_end":349,"column_start":2,"column_end":71}},{"value":"/ If you'd rather add a raw `require` tag, consider using `#combine_with` method.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171171,"byte_end":171254,"line_start":350,"line_end":350,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171684,"byte_end":171696,"line_start":363,"line_end":363,"column_start":9,"column_end":21},"name":"and_provides","qualname":"<ValidTransactionBuilder>::and_provides","value":"fn (mut self, tag: impl Encode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a `TransactionTag` to the set of provided tags.","sig":null,"attributes":[{"value":"/ Add a `TransactionTag` to the set of provided tags.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171459,"byte_end":171514,"line_start":359,"line_end":359,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171516,"byte_end":171519,"line_start":360,"line_end":360,"column_start":2,"column_end":5}},{"value":"/ The tag will be encoded and prefixed with module prefix (if any).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171521,"byte_end":171590,"line_start":361,"line_end":361,"column_start":2,"column_end":71}},{"value":"/ If you'd rather add a raw `require` tag, consider using `#combine_with` method.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171592,"byte_end":171675,"line_start":362,"line_end":362,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172021,"byte_end":172033,"line_start":374,"line_end":374,"column_start":9,"column_end":21},"name":"combine_with","qualname":"<ValidTransactionBuilder>::combine_with","value":"fn (mut self, validity: ValidTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Augment the builder with existing `ValidTransaction`.","sig":null,"attributes":[{"value":"/ Augment the builder with existing `ValidTransaction`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171880,"byte_end":171937,"line_start":371,"line_end":371,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171939,"byte_end":171942,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ This method does add the prefix to `require` or `provides` tags.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":171944,"byte_end":172012,"line_start":373,"line_end":373,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172329,"byte_end":172334,"line_start":382,"line_end":382,"column_start":9,"column_end":14},"name":"build","qualname":"<ValidTransactionBuilder>::build","value":"fn (self) -> TransactionValidity","parent":null,"children":[],"decl_id":null,"docs":" Finalize the builder and produce `TransactionValidity`.","sig":null,"attributes":[{"value":"/ Finalize the builder and produce `TransactionValidity`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172172,"byte_end":172231,"line_start":379,"line_end":379,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172233,"byte_end":172236,"line_start":380,"line_end":380,"column_start":2,"column_end":5}},{"value":"/ Note the result will always be `Ok`. Use `Into` to produce `ValidTransaction`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172238,"byte_end":172320,"line_start":381,"line_end":381,"column_start":2,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":1174},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"random_number_generator","qualname":"::random_number_generator","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":3384},{"krate":0,"index":3394},{"krate":0,"index":3388},{"krate":0,"index":1181}],"decl_id":null,"docs":" A simple pseudo random number generator that allows a stream of random numbers to be efficiently\n created from a single initial seed hash.\n","sig":null,"attributes":[{"value":"! A simple pseudo random number generator that allows a stream of random numbers to be efficiently","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174402,"byte_end":174502,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"! created from a single initial seed hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174503,"byte_end":174547,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3384},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175666,"byte_end":175687,"line_start":47,"line_end":47,"column_start":12,"column_end":33},"name":"RandomNumberGenerator","qualname":"::random_number_generator::RandomNumberGenerator","value":"RandomNumberGenerator {  }","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387}],"decl_id":null,"docs":" Pseudo-random number streamer. This retains the state of the random number stream. It's as\n secure as the combination of the seed with which it is constructed and the hash function it uses\n to cycle elements.","sig":null,"attributes":[{"value":"/ Pseudo-random number streamer. This retains the state of the random number stream. It's as","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174625,"byte_end":174719,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ secure as the combination of the seed with which it is constructed and the hash function it uses","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174720,"byte_end":174820,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/ to cycle elements.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174821,"byte_end":174843,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174844,"byte_end":174847,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It can be saved and later reloaded using the Codec traits.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174848,"byte_end":174910,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174911,"byte_end":174914,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174915,"byte_end":174927,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174928,"byte_end":174935,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use sp_runtime::traits::{Hash, BlakeTwo256};","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174936,"byte_end":174984,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/ use sp_runtime::RandomNumberGenerator;","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":174985,"byte_end":175027,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ let random_seed = BlakeTwo256::hash(b\"Sixty-nine\");","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175028,"byte_end":175083,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ let mut rng = <RandomNumberGenerator<BlakeTwo256>>::new(random_seed);","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175084,"byte_end":175157,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(rng.pick_u32(100), 59);","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175158,"byte_end":175196,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(rng.pick_item(&[1, 2, 3]), Some(&1));","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175197,"byte_end":175249,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175250,"byte_end":175257,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175258,"byte_end":175261,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This can use any cryptographic `Hash` function as the means of entropy-extension, and avoids","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175262,"byte_end":175358,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ needless extensions of entropy.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175359,"byte_end":175394,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175395,"byte_end":175398,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If you're persisting it over blocks, be aware that the sequence will start to repeat. This won't","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175399,"byte_end":175499,"line_start":43,"line_end":43,"column_start":1,"column_end":101}},{"value":"/ be a practical issue unless you're using tiny hash types (e.g. 64-bit) and pulling hundred of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175500,"byte_end":175597,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ megabytes of data from it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175598,"byte_end":175628,"line_start":45,"line_end":45,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175844,"byte_end":175847,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"new","qualname":"<RandomNumberGenerator<Hashing>>::new","value":"fn (seed: Hashing::Output) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new source of random data.\n","sig":null,"attributes":[{"value":"/ A new source of random data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175803,"byte_end":175835,"line_start":53,"line_end":53,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":176043,"byte_end":176051,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"pick_u32","qualname":"<RandomNumberGenerator<Hashing>>::pick_u32","value":"fn (&mut self, max: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a number at least zero, at most `max`.\n","sig":null,"attributes":[{"value":"/ Returns a number at least zero, at most `max`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175984,"byte_end":176034,"line_start":63,"line_end":63,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":176869,"byte_end":176879,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"pick_usize","qualname":"<RandomNumberGenerator<Hashing>>::pick_usize","value":"fn (&mut self, max: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns a number at least zero, at most `max`.","sig":null,"attributes":[{"value":"/ Returns a number at least zero, at most `max`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":176713,"byte_end":176763,"line_start":86,"line_end":86,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":176765,"byte_end":176768,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ This returns a `usize`, but internally it only uses `u32` so avoid consensus problems.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":176770,"byte_end":176860,"line_start":88,"line_end":88,"column_start":2,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":177125,"byte_end":177134,"line_start":97,"line_end":97,"column_start":9,"column_end":18},"name":"pick_item","qualname":"<RandomNumberGenerator<Hashing>>::pick_item","value":"fn <'a, T> (&mut self, items: &'a [T]) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Pick a random element from an array of `items`.","sig":null,"attributes":[{"value":"/ Pick a random element from an array of `items`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":176956,"byte_end":177007,"line_start":93,"line_end":93,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":177009,"byte_end":177012,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ This is guaranteed to return `Some` except in the case that the given array `items` is","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":177014,"byte_end":177104,"line_start":95,"line_end":95,"column_start":2,"column_end":92}},{"value":"/ empty.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":177106,"byte_end":177116,"line_start":96,"line_end":96,"column_start":2,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3403},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178254,"byte_end":178262,"line_start":26,"line_end":26,"column_start":2,"column_end":10},"name":"Borrowed","qualname":"::runtime_string::RuntimeString::Borrowed","value":"RuntimeString::Borrowed(&'static str)","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" The borrowed mode that wraps a `&'static str`.\n","sig":null,"attributes":[{"value":"/ The borrowed mode that wraps a `&'static str`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178202,"byte_end":178252,"line_start":25,"line_end":25,"column_start":2,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3406},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178347,"byte_end":178352,"line_start":29,"line_end":29,"column_start":2,"column_end":7},"name":"Owned","qualname":"::runtime_string::RuntimeString::Owned","value":"RuntimeString::Owned(String)","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" The owned mode that wraps a `String`.\n","sig":null,"attributes":[{"value":"/ The owned mode that wraps a `String`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178279,"byte_end":178320,"line_start":27,"line_end":27,"column_start":2,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178322,"byte_end":178345,"line_start":28,"line_end":28,"column_start":2,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3402},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178185,"byte_end":178198,"line_start":24,"line_end":24,"column_start":10,"column_end":23},"name":"RuntimeString","qualname":"::runtime_string::RuntimeString","value":"RuntimeString::{Borrowed, Owned}","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3406}],"decl_id":null,"docs":" A string that wraps a `&'static str` in the runtime and `String`/`Vec<u8>` on decode.\n","sig":null,"attributes":[{"value":"/ A string that wraps a `&'static str` in the runtime and `String`/`Vec<u8>` on decode.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178051,"byte_end":178140,"line_start":22,"line_end":22,"column_start":1,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":1252},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2884,"byte_end":2897,"line_start":91,"line_end":91,"column_start":10,"column_end":23},"name":"Justification","qualname":"::Justification","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" An abstraction over justification for a block's validity under a consensus algorithm.","sig":null,"attributes":[{"value":"/ An abstraction over justification for a block's validity under a consensus algorithm.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2419,"byte_end":2508,"line_start":84,"line_end":84,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2509,"byte_end":2512,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Essentially a finality proof. The exact formulation will vary between consensus","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2513,"byte_end":2596,"line_start":86,"line_end":86,"column_start":1,"column_end":84}},{"value":"/ algorithms. In the case where there are multiple valid proofs, inclusion within","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2597,"byte_end":2680,"line_start":87,"line_end":87,"column_start":1,"column_end":84}},{"value":"/ the block itself would allow swapping justifications to change the block's hash","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2681,"byte_end":2764,"line_start":88,"line_end":88,"column_start":1,"column_end":84}},{"value":"/ (and thus fork the chain). Sending a `Justification` alongside a block instead","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2765,"byte_end":2847,"line_start":89,"line_end":89,"column_start":1,"column_end":83}},{"value":"/ bypasses this problem.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2848,"byte_end":2874,"line_start":90,"line_end":90,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3416},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3096,"byte_end":3104,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"ModuleId","qualname":"::ModuleId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A module identifier. These are per module and should be stored in a registry somewhere.\n","sig":null,"attributes":[{"value":"/ A module identifier. These are per module and should be stored in a registry somewhere.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":2939,"byte_end":3030,"line_start":95,"line_end":95,"column_start":1,"column_end":92}}]},{"kind":"Trait","id":{"krate":0,"index":1264},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3379,"byte_end":3391,"line_start":109,"line_end":109,"column_start":11,"column_end":23},"name":"BuildStorage","qualname":"::BuildStorage","value":"BuildStorage","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"decl_id":null,"docs":" Complex storage builder stuff.\n","sig":null,"attributes":[{"value":"/ Complex storage builder stuff.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3310,"byte_end":3344,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3345,"byte_end":3368,"line_start":108,"line_end":108,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3442,"byte_end":3455,"line_start":111,"line_end":111,"column_start":5,"column_end":18},"name":"build_storage","qualname":"::BuildStorage::build_storage","value":"fn (&self) -> Result<sp_core::storage::Storage, String>","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" Build the storage out of this builder.\n","sig":null,"attributes":[{"value":"/ Build the storage out of this builder.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3395,"byte_end":3437,"line_start":110,"line_end":110,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3685,"byte_end":3703,"line_start":117,"line_end":117,"column_start":5,"column_end":23},"name":"assimilate_storage","qualname":"::BuildStorage::assimilate_storage","value":"fn (&self, storage: &mut sp_core::storage::Storage) -> Result<(), String>","parent":{"krate":0,"index":1264},"children":[],"decl_id":null,"docs":" Assimilate the storage for this module into pre-existing overlays.\n","sig":null,"attributes":[{"value":"/ Assimilate the storage for this module into pre-existing overlays.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3610,"byte_end":3680,"line_start":116,"line_end":116,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1267},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3882,"byte_end":3907,"line_start":125,"line_end":125,"column_start":11,"column_end":36},"name":"BuildModuleGenesisStorage","qualname":"::BuildModuleGenesisStorage","value":"BuildModuleGenesisStorage<T, I>: Sized","parent":null,"children":[{"krate":0,"index":1270}],"decl_id":null,"docs":" Something that can build the genesis storage of a module.\n","sig":null,"attributes":[{"value":"/ Something that can build the genesis storage of a module.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3786,"byte_end":3847,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3848,"byte_end":3871,"line_start":124,"line_end":124,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":4012,"byte_end":4040,"line_start":127,"line_end":127,"column_start":5,"column_end":33},"name":"build_module_genesis_storage","qualname":"::BuildModuleGenesisStorage::build_module_genesis_storage","value":"fn (&self, storage: &mut sp_core::storage::Storage) -> Result<(), String>","parent":{"krate":0,"index":1267},"children":[],"decl_id":null,"docs":" Create the module genesis storage into the given `storage` and `child_storage`.\n","sig":null,"attributes":[{"value":"/ Create the module genesis storage into the given `storage` and `child_storage`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3924,"byte_end":4007,"line_start":126,"line_end":126,"column_start":2,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":1277},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5073,"byte_end":5090,"line_start":166,"line_end":166,"column_start":10,"column_end":27},"name":"ConsensusEngineId","qualname":"::ConsensusEngineId","value":"[u8; 4]","parent":null,"children":[],"decl_id":null,"docs":" Consensus engine unique ID.\n","sig":null,"attributes":[{"value":"/ Consensus engine unique ID.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5032,"byte_end":5063,"line_start":165,"line_end":165,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3448},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5348,"byte_end":5355,"line_start":173,"line_end":173,"column_start":2,"column_end":9},"name":"Ed25519","qualname":"::MultiSignature::Ed25519","value":"MultiSignature::Ed25519(ed25519::Signature)","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" An Ed25519 signature.\n","sig":null,"attributes":[{"value":"/ An Ed25519 signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5321,"byte_end":5346,"line_start":172,"line_end":172,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3451},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5405,"byte_end":5412,"line_start":175,"line_end":175,"column_start":2,"column_end":9},"name":"Sr25519","qualname":"::MultiSignature::Sr25519","value":"MultiSignature::Sr25519(sr25519::Signature)","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" An Sr25519 signature.\n","sig":null,"attributes":[{"value":"/ An Sr25519 signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5378,"byte_end":5403,"line_start":174,"line_end":174,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3454},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5470,"byte_end":5475,"line_start":177,"line_end":177,"column_start":2,"column_end":7},"name":"Ecdsa","qualname":"::MultiSignature::Ecdsa","value":"MultiSignature::Ecdsa(ecdsa::Signature)","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" An ECDSA/SECP256k1 signature.\n","sig":null,"attributes":[{"value":"/ An ECDSA/SECP256k1 signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5435,"byte_end":5468,"line_start":176,"line_end":176,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3447},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5303,"byte_end":5317,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"MultiSignature","qualname":"::MultiSignature","value":"MultiSignature::{Ed25519, Sr25519, Ecdsa}","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454}],"decl_id":null,"docs":" Signature verify that can work with any known signature types..\n","sig":null,"attributes":[{"value":"/ Signature verify that can work with any known signature types..","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5103,"byte_end":5170,"line_start":168,"line_end":168,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3527},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6843,"byte_end":6850,"line_start":230,"line_end":230,"column_start":2,"column_end":9},"name":"Ed25519","qualname":"::MultiSigner::Ed25519","value":"MultiSigner::Ed25519(ed25519::Public)","parent":{"krate":0,"index":3526},"children":[],"decl_id":null,"docs":" An Ed25519 identity.\n","sig":null,"attributes":[{"value":"/ An Ed25519 identity.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6817,"byte_end":6841,"line_start":229,"line_end":229,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3530},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6896,"byte_end":6903,"line_start":232,"line_end":232,"column_start":2,"column_end":9},"name":"Sr25519","qualname":"::MultiSigner::Sr25519","value":"MultiSigner::Sr25519(sr25519::Public)","parent":{"krate":0,"index":3526},"children":[],"decl_id":null,"docs":" An Sr25519 identity.\n","sig":null,"attributes":[{"value":"/ An Sr25519 identity.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6870,"byte_end":6894,"line_start":231,"line_end":231,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7011,"byte_end":7016,"line_start":234,"line_end":234,"column_start":2,"column_end":7},"name":"Ecdsa","qualname":"::MultiSigner::Ecdsa","value":"MultiSigner::Ecdsa(ecdsa::Public)","parent":{"krate":0,"index":3526},"children":[],"decl_id":null,"docs":" An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).\n","sig":null,"attributes":[{"value":"/ An SECP256k1/ECDSA identity (actually, the Blake2 hash of the compressed pub key).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6923,"byte_end":7009,"line_start":233,"line_end":233,"column_start":2,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":3526},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6802,"byte_end":6813,"line_start":228,"line_end":228,"column_start":10,"column_end":21},"name":"MultiSigner","qualname":"::MultiSigner","value":"MultiSigner::{Ed25519, Sr25519, Ecdsa}","parent":null,"children":[{"krate":0,"index":3527},{"krate":0,"index":3530},{"krate":0,"index":3533}],"decl_id":null,"docs":" Public key for any known crypto algorithm.\n","sig":null,"attributes":[{"value":"/ Public key for any known crypto algorithm.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6606,"byte_end":6652,"line_start":225,"line_end":225,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3613},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10238,"byte_end":10250,"line_start":344,"line_end":344,"column_start":12,"column_end":24},"name":"AnySignature","qualname":"::AnySignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Signature verify that can work with any known signature types..\n","sig":null,"attributes":[{"value":"/ Signature verify that can work with any known signature types..","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10027,"byte_end":10094,"line_start":341,"line_end":341,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1342},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11299,"byte_end":11313,"line_start":380,"line_end":380,"column_start":10,"column_end":24},"name":"DispatchResult","qualname":"::DispatchResult","value":"sp_std::result::Result<(), DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" This is the legacy return type of `Dispatchable`. It is still exposed for compatibility reasons.\n The new return type is `DispatchResultWithInfo`. FRAME runtimes should use\n `frame_support::dispatch::DispatchResult`.\n","sig":null,"attributes":[{"value":"/ This is the legacy return type of `Dispatchable`. It is still exposed for compatibility reasons.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11063,"byte_end":11163,"line_start":377,"line_end":377,"column_start":1,"column_end":101}},{"value":"/ The new return type is `DispatchResultWithInfo`. FRAME runtimes should use","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11164,"byte_end":11242,"line_start":378,"line_end":378,"column_start":1,"column_end":79}},{"value":"/ `frame_support::dispatch::DispatchResult`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11243,"byte_end":11289,"line_start":379,"line_end":379,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1343},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11531,"byte_end":11553,"line_start":384,"line_end":384,"column_start":10,"column_end":32},"name":"DispatchResultWithInfo","qualname":"::DispatchResultWithInfo","value":"sp_std::result::Result<T, DispatchErrorWithPostInfo<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return type of a `Dispatchable` which contains the `DispatchResult` and additional information\n about the `Dispatchable` that is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Return type of a `Dispatchable` which contains the `DispatchResult` and additional information","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11360,"byte_end":11458,"line_start":382,"line_end":382,"column_start":1,"column_end":99}},{"value":"/ about the `Dispatchable` that is only known post dispatch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11459,"byte_end":11521,"line_start":383,"line_end":383,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3670},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11824,"byte_end":11829,"line_start":391,"line_end":391,"column_start":2,"column_end":7},"name":"Other","qualname":"::DispatchError::Other","value":"DispatchError::Other(&'static str)","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" Some error occurred.\n","sig":null,"attributes":[{"value":"/ Some error occurred.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11798,"byte_end":11822,"line_start":390,"line_end":390,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3672},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11894,"byte_end":11906,"line_start":393,"line_end":393,"column_start":2,"column_end":14},"name":"CannotLookup","qualname":"::DispatchError::CannotLookup","value":"DispatchError::CannotLookup","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" Failed to lookup some data.\n","sig":null,"attributes":[{"value":"/ Failed to lookup some data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11861,"byte_end":11892,"line_start":392,"line_end":392,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3674},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11928,"byte_end":11937,"line_start":395,"line_end":395,"column_start":2,"column_end":11},"name":"BadOrigin","qualname":"::DispatchError::BadOrigin","value":"DispatchError::BadOrigin","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" A bad origin.\n","sig":null,"attributes":[{"value":"/ A bad origin.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11909,"byte_end":11926,"line_start":394,"line_end":394,"column_start":2,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":3676},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11973,"byte_end":11979,"line_start":397,"line_end":397,"column_start":2,"column_end":8},"name":"Module","qualname":"::DispatchError::Module","value":"DispatchError::Module { index, error, message }","parent":{"krate":0,"index":3669},"children":[],"decl_id":null,"docs":" A custom error in a module.\n","sig":null,"attributes":[{"value":"/ A custom error in a module.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11940,"byte_end":11971,"line_start":396,"line_end":396,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3669},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11781,"byte_end":11794,"line_start":389,"line_end":389,"column_start":10,"column_end":23},"name":"DispatchError","qualname":"::DispatchError","value":"DispatchError::{Other, CannotLookup, BadOrigin, Module}","parent":null,"children":[{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676}],"decl_id":null,"docs":" Reason why a dispatch call failed.\n","sig":null,"attributes":[{"value":"/ Reason why a dispatch call failed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":11617,"byte_end":11655,"line_start":386,"line_end":386,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3710},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12422,"byte_end":12447,"line_start":411,"line_end":411,"column_start":12,"column_end":37},"name":"DispatchErrorWithPostInfo","qualname":"::DispatchErrorWithPostInfo","value":"DispatchErrorWithPostInfo { post_info, error }","parent":null,"children":[{"krate":0,"index":3712},{"krate":0,"index":3713}],"decl_id":null,"docs":" Result of a `Dispatchable` which contains the `DispatchResult` and additional information about\n the `Dispatchable` that is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Result of a `Dispatchable` which contains the `DispatchResult` and additional information about","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12186,"byte_end":12285,"line_start":408,"line_end":408,"column_start":1,"column_end":100}},{"value":"/ the `Dispatchable` that is only known post dispatch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12286,"byte_end":12342,"line_start":409,"line_end":409,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3712},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12630,"byte_end":12639,"line_start":415,"line_end":415,"column_start":6,"column_end":15},"name":"post_info","qualname":"::DispatchErrorWithPostInfo::post_info","value":"Info","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" Additional information about the `Dispatchable` which is only known post dispatch.\n","sig":null,"attributes":[{"value":"/ Additional information about the `Dispatchable` which is only known post dispatch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12538,"byte_end":12624,"line_start":414,"line_end":414,"column_start":2,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3713},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12733,"byte_end":12738,"line_start":417,"line_end":417,"column_start":6,"column_end":11},"name":"error","qualname":"::DispatchErrorWithPostInfo::error","value":"DispatchError","parent":{"krate":0,"index":3710},"children":[],"decl_id":null,"docs":" The actual `DispatchResult` indicating whether the dispatch was successful.\n","sig":null,"attributes":[{"value":"/ The actual `DispatchResult` indicating whether the dispatch was successful.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12648,"byte_end":12727,"line_start":416,"line_end":416,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12848,"byte_end":12856,"line_start":422,"line_end":422,"column_start":9,"column_end":17},"name":"stripped","qualname":"<DispatchError>::stripped","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the same error but without the attached message.\n","sig":null,"attributes":[{"value":"/ Return the same error but without the attached message.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12780,"byte_end":12839,"line_start":421,"line_end":421,"column_start":2,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1367},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15412,"byte_end":15427,"line_start":517,"line_end":517,"column_start":10,"column_end":25},"name":"DispatchOutcome","qualname":"::DispatchOutcome","value":"Result<(), DispatchError>","parent":null,"children":[],"decl_id":null,"docs":" This type specifies the outcome of dispatching a call to a module.","sig":null,"attributes":[{"value":"/ This type specifies the outcome of dispatching a call to a module.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14883,"byte_end":14953,"line_start":508,"line_end":508,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14954,"byte_end":14957,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ In case of failure an error specific to the module is returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14958,"byte_end":15025,"line_start":510,"line_end":510,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15026,"byte_end":15029,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ Failure of the module call dispatching doesn't invalidate the extrinsic and it is still included","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15030,"byte_end":15130,"line_start":512,"line_end":512,"column_start":1,"column_end":101}},{"value":"/ in the block, therefore all state changes performed by the dispatched call are still persisted.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15131,"byte_end":15230,"line_start":513,"line_end":513,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15231,"byte_end":15234,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ For example, if the dispatching of an extrinsic involves inclusion fee payment then these","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15235,"byte_end":15328,"line_start":515,"line_end":515,"column_start":1,"column_end":94}},{"value":"/ changes are going to be preserved even if the call dispatched failed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15329,"byte_end":15402,"line_start":516,"line_end":516,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1368},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16574,"byte_end":16594,"line_start":537,"line_end":537,"column_start":10,"column_end":30},"name":"ApplyExtrinsicResult","qualname":"::ApplyExtrinsicResult","value":"Result<DispatchOutcome, transaction_validity::TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" The result of applying of an extrinsic.","sig":null,"attributes":[{"value":"/ The result of applying of an extrinsic.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15458,"byte_end":15501,"line_start":519,"line_end":519,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15502,"byte_end":15505,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ This type is typically used in the context of `BlockBuilder` to signal that the extrinsic","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15506,"byte_end":15599,"line_start":521,"line_end":521,"column_start":1,"column_end":94}},{"value":"/ in question cannot be included.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15600,"byte_end":15635,"line_start":522,"line_end":522,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15636,"byte_end":15639,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ A block containing extrinsics that have a negative inclusion outcome is invalid. A negative","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15640,"byte_end":15735,"line_start":524,"line_end":524,"column_start":1,"column_end":96}},{"value":"/ result can only occur during the block production, where such extrinsics are detected and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15736,"byte_end":15829,"line_start":525,"line_end":525,"column_start":1,"column_end":94}},{"value":"/ removed from the block that is being created and the transaction pool.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15830,"byte_end":15904,"line_start":526,"line_end":526,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15905,"byte_end":15908,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ To rehash: every extrinsic in a valid block must return a positive `ApplyExtrinsicResult`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":15909,"byte_end":16003,"line_start":528,"line_end":528,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16004,"byte_end":16007,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ Examples of reasons preventing inclusion in a block:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16008,"byte_end":16064,"line_start":530,"line_end":530,"column_start":1,"column_end":57}},{"value":"/ - More block weight is required to process the extrinsic than is left in the block being built.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16065,"byte_end":16164,"line_start":531,"line_end":531,"column_start":1,"column_end":100}},{"value":"/   This doesn't necessarily mean that the extrinsic is invalid, since it can still be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16165,"byte_end":16253,"line_start":532,"line_end":532,"column_start":1,"column_end":89}},{"value":"/   included in the next block if it has enough spare weight available.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16254,"byte_end":16327,"line_start":533,"line_end":533,"column_start":1,"column_end":74}},{"value":"/ - The sender doesn't have enough funds to pay the transaction inclusion fee. Including such","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16328,"byte_end":16423,"line_start":534,"line_end":534,"column_start":1,"column_end":96}},{"value":"/   a transaction in the block doesn't make sense.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16424,"byte_end":16476,"line_start":535,"line_end":535,"column_start":1,"column_end":53}},{"value":"/ - The extrinsic supplied a bad signature. This transaction won't become valid ever.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16477,"byte_end":16564,"line_start":536,"line_end":536,"column_start":1,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":1369},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16765,"byte_end":16793,"line_start":540,"line_end":540,"column_start":10,"column_end":38},"name":"ApplyExtrinsicResultWithInfo","qualname":"::ApplyExtrinsicResultWithInfo","value":"Result<DispatchResultWithInfo<T>,\n       transaction_validity::TransactionValidityError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `ApplyExtrinsicResult` but augmented with `PostDispatchInfo` on success.\n","sig":null,"attributes":[{"value":"/ Same as `ApplyExtrinsicResult` but augmented with `PostDispatchInfo` on success.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16671,"byte_end":16755,"line_start":539,"line_end":539,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":1371},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":17039,"byte_end":17058,"line_start":545,"line_end":545,"column_start":8,"column_end":27},"name":"verify_encoded_lazy","qualname":"::verify_encoded_lazy","value":"fn <V, T> (sig: &V, item: &T, signer: &<V::Signer as IdentifyAccount>::AccountId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a signature on an encoded value in a lazy manner. This can be\n an optimization if the signature scheme has an \"unsigned\" escape hash.\n","sig":null,"attributes":[{"value":"/ Verify a signature on an encoded value in a lazy manner. This can be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16884,"byte_end":16956,"line_start":543,"line_end":543,"column_start":1,"column_end":73}},{"value":"/ an optimization if the signature scheme has an \"unsigned\" escape hash.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":16957,"byte_end":17031,"line_start":544,"line_end":544,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3747},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21372,"byte_end":21387,"line_start":715,"line_end":715,"column_start":12,"column_end":27},"name":"OpaqueExtrinsic","qualname":"::OpaqueExtrinsic","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold an extrinsic without committing to its format and ensure it is serialized\n correctly.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold an extrinsic without committing to its format and ensure it is serialized","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21191,"byte_end":21288,"line_start":712,"line_end":712,"column_start":1,"column_end":98}},{"value":"/ correctly.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21289,"byte_end":21303,"line_start":713,"line_end":713,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1401},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22673,"byte_end":22678,"line_start":759,"line_end":759,"column_start":8,"column_end":13},"name":"print","qualname":"::print","value":"fn (print: impl traits::Printable) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Print something that implements `Printable` from the runtime.\n","sig":null,"attributes":[{"value":"/ Print something that implements `Printable` from the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22600,"byte_end":22665,"line_start":758,"line_end":758,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1403},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22952,"byte_end":22969,"line_start":769,"line_end":769,"column_start":12,"column_end":29},"name":"SignatureBatching","qualname":"::SignatureBatching","value":"","parent":null,"children":[],"decl_id":null,"docs":" Batching session.","sig":null,"attributes":[{"value":"/ Batching session.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22732,"byte_end":22753,"line_start":764,"line_end":764,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22754,"byte_end":22757,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ To be used in runtime only. Outside of runtime, just construct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22758,"byte_end":22824,"line_start":766,"line_end":766,"column_start":1,"column_end":67}},{"value":"/ `BatchVerifier` directly.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22825,"byte_end":22854,"line_start":767,"line_end":767,"column_start":1,"column_end":30}},{"value":"must_use =\n  \"`verify()` needs to be called to finish batch signature verification!\"","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22855,"byte_end":22940,"line_start":768,"line_end":768,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23044,"byte_end":23049,"line_start":773,"line_end":773,"column_start":9,"column_end":14},"name":"start","qualname":"<SignatureBatching>::start","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start new batching session.\n","sig":null,"attributes":[{"value":"/ Start new batching session.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23004,"byte_end":23035,"line_start":772,"line_end":772,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23219,"byte_end":23225,"line_start":780,"line_end":780,"column_start":9,"column_end":15},"name":"verify","qualname":"<SignatureBatching>::verify","value":"fn (mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify all signatures submitted during the batching session.\n","sig":null,"attributes":[{"value":"/ Verify all signatures submitted during the batching session.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23133,"byte_end":23197,"line_start":778,"line_end":778,"column_start":2,"column_end":66}},{"value":"must_use","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23199,"byte_end":23210,"line_start":779,"line_end":779,"column_start":2,"column_end":13}}]}],"impls":[{"id":1,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26441,"byte_end":26456,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34058,"byte_end":34076,"line_start":51,"line_end":51,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34318,"byte_end":34336,"line_start":62,"line_end":62,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34874,"byte_end":34892,"line_start":87,"line_end":87,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":35460,"byte_end":35478,"line_start":113,"line_end":113,"column_start":2,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36592,"byte_end":36610,"line_start":149,"line_end":149,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37136,"byte_end":37149,"line_start":168,"line_end":168,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37907,"byte_end":37920,"line_start":192,"line_end":192,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":38340,"byte_end":38353,"line_start":210,"line_end":210,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":38467,"byte_end":38485,"line_start":217,"line_end":217,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":39419,"byte_end":39437,"line_start":247,"line_end":247,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":39958,"byte_end":39976,"line_start":272,"line_end":272,"column_start":6,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":40223,"byte_end":40241,"line_start":282,"line_end":282,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":40565,"byte_end":40583,"line_start":291,"line_end":291,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":40918,"byte_end":40936,"line_start":303,"line_end":303,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46246,"byte_end":46249,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47829,"byte_end":47832,"line_start":109,"line_end":109,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":48215,"byte_end":48218,"line_start":122,"line_end":122,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":48239,"byte_end":48242,"line_start":124,"line_end":124,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":52261,"byte_end":52277,"line_start":41,"line_end":41,"column_start":2,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55937,"byte_end":55943,"line_start":57,"line_end":57,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":56919,"byte_end":56925,"line_start":88,"line_end":88,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":57382,"byte_end":57388,"line_start":104,"line_end":104,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":57821,"byte_end":57827,"line_start":118,"line_end":118,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":57984,"byte_end":57990,"line_start":124,"line_end":124,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":59515,"byte_end":59521,"line_start":173,"line_end":173,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62532,"byte_end":62539,"line_start":47,"line_end":47,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62803,"byte_end":62810,"line_start":59,"line_end":59,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62883,"byte_end":62890,"line_start":62,"line_end":62,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63527,"byte_end":63532,"line_start":80,"line_end":80,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66022,"byte_end":66028,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66109,"byte_end":66115,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69577,"byte_end":69587,"line_start":139,"line_end":139,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69841,"byte_end":69851,"line_start":148,"line_end":148,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72353,"byte_end":72363,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74386,"byte_end":74396,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74506,"byte_end":74516,"line_start":278,"line_end":278,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74557,"byte_end":74567,"line_start":280,"line_end":280,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":75517,"byte_end":75530,"line_start":310,"line_end":310,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77853,"byte_end":77866,"line_start":379,"line_end":379,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":78805,"byte_end":78822,"line_start":414,"line_end":414,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":79092,"byte_end":79105,"line_start":423,"line_end":423,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82631,"byte_end":82637,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83019,"byte_end":83025,"line_start":103,"line_end":103,"column_start":7,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84227,"byte_end":84234,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84428,"byte_end":84435,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84545,"byte_end":84552,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84833,"byte_end":84840,"line_start":179,"line_end":179,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85658,"byte_end":85665,"line_start":216,"line_end":216,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86987,"byte_end":87001,"line_start":275,"line_end":275,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88937,"byte_end":88945,"line_start":337,"line_end":337,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90128,"byte_end":90140,"line_start":381,"line_end":381,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90490,"byte_end":90502,"line_start":394,"line_end":394,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91094,"byte_end":91106,"line_start":421,"line_end":421,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91959,"byte_end":91966,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92786,"byte_end":92801,"line_start":497,"line_end":497,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96739,"byte_end":96754,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102175,"byte_end":102190,"line_start":42,"line_end":42,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102343,"byte_end":102358,"line_start":54,"line_end":54,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102559,"byte_end":102574,"line_start":62,"line_end":62,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102621,"byte_end":102636,"line_start":66,"line_end":66,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":103090,"byte_end":103105,"line_start":81,"line_end":81,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":103409,"byte_end":103424,"line_start":88,"line_end":88,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104123,"byte_end":104138,"line_start":116,"line_end":116,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104457,"byte_end":104472,"line_start":132,"line_end":132,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104532,"byte_end":104547,"line_start":136,"line_end":136,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104847,"byte_end":104860,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105630,"byte_end":105636,"line_start":179,"line_end":179,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":106610,"byte_end":106616,"line_start":216,"line_end":216,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":106857,"byte_end":106863,"line_start":226,"line_end":226,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107298,"byte_end":107314,"line_start":238,"line_end":238,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107498,"byte_end":107514,"line_start":249,"line_end":249,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107696,"byte_end":107712,"line_start":255,"line_end":255,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107794,"byte_end":107810,"line_start":261,"line_end":261,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108239,"byte_end":108244,"line_start":279,"line_end":279,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108834,"byte_end":108839,"line_start":302,"line_end":302,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109514,"byte_end":109520,"line_start":322,"line_end":322,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109797,"byte_end":109803,"line_start":332,"line_end":332,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110025,"byte_end":110031,"line_start":338,"line_end":338,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110252,"byte_end":110258,"line_start":344,"line_end":344,"column_start":72,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110453,"byte_end":110459,"line_start":349,"line_end":349,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110771,"byte_end":110777,"line_start":362,"line_end":362,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114138,"byte_end":114144,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114257,"byte_end":114263,"line_start":71,"line_end":71,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114374,"byte_end":114380,"line_start":76,"line_end":76,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114790,"byte_end":114799,"line_start":91,"line_end":91,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115031,"byte_end":115040,"line_start":99,"line_end":99,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115270,"byte_end":115279,"line_start":107,"line_end":107,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":116162,"byte_end":116163,"line_start":132,"line_end":132,"column_start":17,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117242,"byte_end":117266,"line_start":166,"line_end":166,"column_start":28,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118321,"byte_end":118335,"line_start":199,"line_end":199,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118482,"byte_end":118496,"line_start":206,"line_end":206,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118947,"byte_end":118955,"line_start":224,"line_end":224,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119145,"byte_end":119156,"line_start":230,"line_end":230,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120192,"byte_end":120193,"line_start":255,"line_end":255,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121763,"byte_end":121764,"line_start":308,"line_end":308,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122248,"byte_end":122249,"line_start":325,"line_end":325,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123375,"byte_end":123386,"line_start":357,"line_end":357,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123593,"byte_end":123604,"line_start":367,"line_end":367,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124039,"byte_end":124048,"line_start":384,"line_end":384,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124255,"byte_end":124264,"line_start":394,"line_end":394,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124733,"byte_end":124737,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125266,"byte_end":125276,"line_start":435,"line_end":435,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126558,"byte_end":126559,"line_start":475,"line_end":475,"column_start":84,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133085,"byte_end":133086,"line_start":643,"line_end":643,"column_start":57,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146329,"byte_end":146345,"line_start":996,"line_end":996,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146512,"byte_end":146528,"line_start":1003,"line_end":1003,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147363,"byte_end":147380,"line_start":1039,"line_end":1039,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147524,"byte_end":147541,"line_start":1046,"line_end":1046,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":149301,"byte_end":149303,"line_start":1090,"line_end":1090,"column_start":93,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161184,"byte_end":161202,"line_start":74,"line_end":74,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163857,"byte_end":163881,"line_start":147,"line_end":147,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164675,"byte_end":164699,"line_start":175,"line_end":175,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164827,"byte_end":164851,"line_start":181,"line_end":181,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165164,"byte_end":165182,"line_start":190,"line_end":190,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165285,"byte_end":165303,"line_start":196,"line_end":196,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168010,"byte_end":168026,"line_start":264,"line_end":264,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168216,"byte_end":168232,"line_start":276,"line_end":276,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169619,"byte_end":169642,"line_start":313,"line_end":313,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172425,"byte_end":172444,"line_start":387,"line_end":387,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172566,"byte_end":172582,"line_start":393,"line_end":393,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175769,"byte_end":175790,"line_start":52,"line_end":52,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178484,"byte_end":178497,"line_start":35,"line_end":35,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178621,"byte_end":178627,"line_start":42,"line_end":42,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178808,"byte_end":178821,"line_start":51,"line_end":51,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178910,"byte_end":178923,"line_start":57,"line_end":57,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179025,"byte_end":179038,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179188,"byte_end":179201,"line_start":72,"line_end":72,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179353,"byte_end":179366,"line_start":81,"line_end":81,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179542,"byte_end":179555,"line_start":88,"line_end":88,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179792,"byte_end":179805,"line_start":98,"line_end":98,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":180085,"byte_end":180098,"line_start":108,"line_end":108,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3136,"byte_end":3144,"line_start":99,"line_end":99,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":4187,"byte_end":4194,"line_start":134,"line_end":134,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5532,"byte_end":5546,"line_start":180,"line_end":180,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5668,"byte_end":5677,"line_start":186,"line_end":186,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5868,"byte_end":5882,"line_start":193,"line_end":193,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6004,"byte_end":6013,"line_start":199,"line_end":199,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6202,"byte_end":6216,"line_start":206,"line_end":206,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6332,"byte_end":6341,"line_start":212,"line_end":212,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6513,"byte_end":6527,"line_start":219,"line_end":219,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7053,"byte_end":7064,"line_start":237,"line_end":237,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7336,"byte_end":7347,"line_start":245,"line_end":245,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7463,"byte_end":7474,"line_start":251,"line_end":251,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7713,"byte_end":7724,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8062,"byte_end":8073,"line_start":272,"line_end":272,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8186,"byte_end":8192,"line_start":278,"line_end":278,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8374,"byte_end":8385,"line_start":285,"line_end":285,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8498,"byte_end":8504,"line_start":291,"line_end":291,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8684,"byte_end":8695,"line_start":298,"line_end":298,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8802,"byte_end":8808,"line_start":304,"line_end":304,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":9008,"byte_end":9019,"line_start":312,"line_end":312,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":9335,"byte_end":9349,"line_start":322,"line_end":322,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10275,"byte_end":10287,"line_start":346,"line_end":346,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10750,"byte_end":10762,"line_start":359,"line_end":359,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10872,"byte_end":10884,"line_start":365,"line_end":365,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10989,"byte_end":11004,"line_start":371,"line_end":371,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12763,"byte_end":12776,"line_start":420,"line_end":420,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13054,"byte_end":13079,"line_start":431,"line_end":431,"column_start":24,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13346,"byte_end":13359,"line_start":443,"line_end":443,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13479,"byte_end":13492,"line_start":449,"line_end":449,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13595,"byte_end":13608,"line_start":455,"line_end":455,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14282,"byte_end":14295,"line_start":480,"line_end":480,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14677,"byte_end":14702,"line_start":498,"line_end":498,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":17588,"byte_end":17598,"line_start":559,"line_end":559,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21466,"byte_end":21481,"line_start":718,"line_end":718,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21614,"byte_end":21629,"line_start":724,"line_end":724,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21976,"byte_end":21991,"line_start":738,"line_end":738,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22241,"byte_end":22256,"line_start":745,"line_end":745,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22533,"byte_end":22548,"line_start":753,"line_end":753,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22983,"byte_end":23000,"line_start":771,"line_end":771,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23322,"byte_end":23339,"line_start":786,"line_end":786,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1377,"byte_end":1382,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":26}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1392,"byte_end":1399,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1409,"byte_end":1417,"line_start":52,"line_end":52,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":444}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/mod.rs","byte_start":80272,"byte_end":80276,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":445}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/mod.rs","byte_start":80286,"byte_end":80293,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":523}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1451,"byte_end":1458,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":547}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1468,"byte_end":1474,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":733}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1484,"byte_end":1504,"line_start":56,"line_end":56,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":1125}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":1514,"byte_end":1537,"line_start":57,"line_end":57,"column_start":9,"column_end":32},"ref_id":{"krate":0,"index":1174}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/curve.rs","byte_start":26441,"byte_end":26456,"line_start":36,"line_end":36,"column_start":10,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34058,"byte_end":34076,"line_start":51,"line_end":51,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1429},"to":{"krate":138,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34318,"byte_end":34336,"line_start":62,"line_end":62,"column_start":2,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":34874,"byte_end":34892,"line_start":87,"line_end":87,"column_start":6,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1429},"to":{"krate":0,"index":965}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":35460,"byte_end":35478,"line_start":113,"line_end":113,"column_start":2,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1429},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":36592,"byte_end":36610,"line_start":149,"line_end":149,"column_start":6,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1429},"to":{"krate":0,"index":970}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37136,"byte_end":37149,"line_start":168,"line_end":168,"column_start":19,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":37907,"byte_end":37920,"line_start":192,"line_end":192,"column_start":30,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":110},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":38340,"byte_end":38353,"line_start":210,"line_end":210,"column_start":34,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":110},"to":{"krate":15,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":38467,"byte_end":38485,"line_start":217,"line_end":217,"column_start":6,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1429},"to":{"krate":15,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":39419,"byte_end":39437,"line_start":247,"line_end":247,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1429},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":39958,"byte_end":39976,"line_start":272,"line_end":272,"column_start":6,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1429},"to":{"krate":15,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":40223,"byte_end":40241,"line_start":282,"line_end":282,"column_start":6,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1429},"to":{"krate":19,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":40565,"byte_end":40583,"line_start":291,"line_end":291,"column_start":6,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1429},"to":{"krate":19,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/unchecked_extrinsic.rs","byte_start":40918,"byte_end":40936,"line_start":303,"line_end":303,"column_start":6,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1429},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":46246,"byte_end":46249,"line_start":59,"line_end":59,"column_start":6,"column_end":9},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":47829,"byte_end":47832,"line_start":109,"line_end":109,"column_start":17,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1466},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":48215,"byte_end":48218,"line_start":122,"line_end":122,"column_start":28,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1466},"to":{"krate":15,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/era.rs","byte_start":48239,"byte_end":48242,"line_start":124,"line_end":124,"column_start":17,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1466},"to":{"krate":15,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/checked_extrinsic.rs","byte_start":52261,"byte_end":52277,"line_start":41,"line_end":41,"column_start":2,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1540},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":55937,"byte_end":55943,"line_start":57,"line_end":57,"column_start":54,"column_end":60},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1575},"to":{"krate":138,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":56919,"byte_end":56925,"line_start":88,"line_end":88,"column_start":31,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1575},"to":{"krate":15,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":57382,"byte_end":57388,"line_start":104,"line_end":104,"column_start":31,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1575},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":57821,"byte_end":57827,"line_start":118,"line_end":118,"column_start":42,"column_end":48},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1575},"to":{"krate":15,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":57984,"byte_end":57990,"line_start":124,"line_end":124,"column_start":39,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1575},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/header.rs","byte_start":59515,"byte_end":59521,"line_start":173,"line_end":173,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62532,"byte_end":62539,"line_start":47,"line_end":47,"column_start":21,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62803,"byte_end":62810,"line_start":59,"line_end":59,"column_start":30,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":62883,"byte_end":62890,"line_start":62,"line_end":62,"column_start":38,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/block.rs","byte_start":63527,"byte_end":63532,"line_start":80,"line_end":80,"column_start":59,"column_end":64},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1738},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66022,"byte_end":66028,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1928},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":66109,"byte_end":66115,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69577,"byte_end":69587,"line_start":139,"line_end":139,"column_start":41,"column_end":51},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2020},"to":{"krate":19,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":69841,"byte_end":69851,"line_start":148,"line_end":148,"column_start":51,"column_end":61},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2020},"to":{"krate":19,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":72353,"byte_end":72363,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74386,"byte_end":74396,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2020},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74506,"byte_end":74516,"line_start":278,"line_end":278,"column_start":42,"column_end":52},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2020},"to":{"krate":15,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":74557,"byte_end":74567,"line_start":280,"line_end":280,"column_start":31,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2020},"to":{"krate":15,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":75517,"byte_end":75530,"line_start":310,"line_end":310,"column_start":16,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":77853,"byte_end":77866,"line_start":379,"line_end":379,"column_start":35,"column_end":48},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2091},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":78805,"byte_end":78822,"line_start":414,"line_end":414,"column_start":6,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/generic/digest.rs","byte_start":79092,"byte_end":79105,"line_start":423,"line_end":423,"column_start":46,"column_end":59},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2091},"to":{"krate":15,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":82631,"byte_end":82637,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2207},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":83019,"byte_end":83025,"line_start":103,"line_end":103,"column_start":7,"column_end":13},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84227,"byte_end":84234,"line_start":145,"line_end":145,"column_start":30,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2246},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84428,"byte_end":84435,"line_start":157,"line_end":157,"column_start":10,"column_end":17},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84545,"byte_end":84552,"line_start":164,"line_end":164,"column_start":13,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":84833,"byte_end":84840,"line_start":179,"line_end":179,"column_start":22,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":85658,"byte_end":85665,"line_start":216,"line_end":216,"column_start":51,"column_end":58},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":86987,"byte_end":87001,"line_start":275,"line_end":275,"column_start":6,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":88937,"byte_end":88945,"line_start":337,"line_end":337,"column_start":6,"column_end":14},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90128,"byte_end":90140,"line_start":381,"line_end":381,"column_start":26,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":90490,"byte_end":90502,"line_start":394,"line_end":394,"column_start":6,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91094,"byte_end":91106,"line_start":421,"line_end":421,"column_start":19,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":91959,"byte_end":91966,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/http.rs","byte_start":92786,"byte_end":92801,"line_start":497,"line_end":497,"column_start":10,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/offchain/storage.rs","byte_start":96739,"byte_end":96754,"line_start":31,"line_end":31,"column_start":10,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102175,"byte_end":102190,"line_start":42,"line_end":42,"column_start":20,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2344},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102343,"byte_end":102358,"line_start":54,"line_end":54,"column_start":6,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102559,"byte_end":102574,"line_start":62,"line_end":62,"column_start":21,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2344},"to":{"krate":26,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":102621,"byte_end":102636,"line_start":66,"line_end":66,"column_start":22,"column_end":37},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2344},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":103090,"byte_end":103105,"line_start":81,"line_end":81,"column_start":6,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":103409,"byte_end":103424,"line_start":88,"line_end":88,"column_start":50,"column_end":65},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2344},"to":{"krate":25,"index":134}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104123,"byte_end":104138,"line_start":116,"line_end":116,"column_start":21,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2344},"to":{"krate":0,"index":1046}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104457,"byte_end":104472,"line_start":132,"line_end":132,"column_start":41,"column_end":56},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2344},"to":{"krate":25,"index":145}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104532,"byte_end":104547,"line_start":136,"line_end":136,"column_start":34,"column_end":49},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2344},"to":{"krate":0,"index":792}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":104847,"byte_end":104860,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2415},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":105630,"byte_end":105636,"line_start":179,"line_end":179,"column_start":25,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2467},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":106610,"byte_end":106616,"line_start":216,"line_end":216,"column_start":6,"column_end":12},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":106857,"byte_end":106863,"line_start":226,"line_end":226,"column_start":30,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2467},"to":{"krate":19,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107298,"byte_end":107314,"line_start":238,"line_end":238,"column_start":32,"column_end":48},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2505},"to":{"krate":0,"index":965}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107498,"byte_end":107514,"line_start":249,"line_end":249,"column_start":39,"column_end":55},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2505},"to":{"krate":19,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107696,"byte_end":107712,"line_start":255,"line_end":255,"column_start":23,"column_end":39},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2505},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":107794,"byte_end":107810,"line_start":261,"line_end":261,"column_start":20,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2505},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108239,"byte_end":108244,"line_start":279,"line_end":279,"column_start":6,"column_end":11},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2547},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":108834,"byte_end":108839,"line_start":302,"line_end":302,"column_start":34,"column_end":39},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2547},"to":{"krate":19,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109514,"byte_end":109520,"line_start":322,"line_end":322,"column_start":19,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":109797,"byte_end":109803,"line_start":332,"line_end":332,"column_start":33,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2592},"to":{"krate":19,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110025,"byte_end":110031,"line_start":338,"line_end":338,"column_start":29,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2592},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110252,"byte_end":110258,"line_start":344,"line_end":344,"column_start":72,"column_end":78},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2592},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110453,"byte_end":110459,"line_start":349,"line_end":349,"column_start":62,"column_end":68},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2592},"to":{"krate":0,"index":965}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/testing.rs","byte_start":110771,"byte_end":110777,"line_start":362,"line_end":362,"column_start":41,"column_end":47},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2592},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114138,"byte_end":114144,"line_start":66,"line_end":66,"column_start":44,"column_end":50},"kind":{"Impl":{"id":158}},"from":{"krate":26,"index":2395},"to":{"krate":0,"index":792}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114257,"byte_end":114263,"line_start":71,"line_end":71,"column_start":44,"column_end":50},"kind":{"Impl":{"id":159}},"from":{"krate":26,"index":2525},"to":{"krate":0,"index":792}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114374,"byte_end":114380,"line_start":76,"line_end":76,"column_start":42,"column_end":48},"kind":{"Impl":{"id":160}},"from":{"krate":26,"index":2624},"to":{"krate":0,"index":792}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":114790,"byte_end":114799,"line_start":91,"line_end":91,"column_start":35,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":26,"index":2450},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115031,"byte_end":115040,"line_start":99,"line_end":99,"column_start":35,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":26,"index":2580},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":115270,"byte_end":115279,"line_start":107,"line_end":107,"column_start":33,"column_end":42},"kind":{"Impl":{"id":163}},"from":{"krate":26,"index":2676},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":116162,"byte_end":116163,"line_start":132,"line_end":132,"column_start":17,"column_end":18},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":826},"to":{"krate":0,"index":820}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":117242,"byte_end":117266,"line_start":166,"line_end":166,"column_start":28,"column_end":52},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3280},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118321,"byte_end":118335,"line_start":199,"line_end":199,"column_start":61,"column_end":75},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2666},"to":{"krate":0,"index":841}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118482,"byte_end":118496,"line_start":206,"line_end":206,"column_start":20,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2666},"to":{"krate":0,"index":837}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":118947,"byte_end":118955,"line_start":224,"line_end":224,"column_start":27,"column_end":35},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":865},"to":{"krate":0,"index":857}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":119145,"byte_end":119156,"line_start":230,"line_end":230,"column_start":39,"column_end":50},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":870},"to":{"krate":0,"index":857}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":120192,"byte_end":120193,"line_start":255,"line_end":255,"column_start":38,"column_end":39},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":882},"to":{"krate":0,"index":876}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121763,"byte_end":121764,"line_start":308,"line_end":308,"column_start":45,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":894},"to":{"krate":0,"index":890}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121927,"byte_end":121932,"line_start":315,"line_end":315,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121935,"byte_end":121940,"line_start":315,"line_end":315,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":890},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":121957,"byte_end":121962,"line_start":316,"line_end":316,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":2009},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122000,"byte_end":122006,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2014},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122044,"byte_end":122050,"line_start":318,"line_end":318,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2004},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122248,"byte_end":122249,"line_start":325,"line_end":325,"column_start":20,"column_end":21},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":899},"to":{"krate":0,"index":897}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122415,"byte_end":122440,"line_start":330,"line_end":330,"column_start":27,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":2826},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122443,"byte_end":122448,"line_start":330,"line_end":330,"column_start":55,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122451,"byte_end":122456,"line_start":330,"line_end":330,"column_start":63,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122459,"byte_end":122461,"line_start":330,"line_end":330,"column_start":71,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122464,"byte_end":122473,"line_start":330,"line_end":330,"column_start":76,"column_end":85},"kind":"SuperTrait","from":{"krate":2,"index":1619},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":122476,"byte_end":122482,"line_start":330,"line_end":330,"column_start":88,"column_end":94},"kind":"SuperTrait","from":{"krate":120,"index":11},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123375,"byte_end":123386,"line_start":357,"line_end":357,"column_start":17,"column_end":28},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2748},"to":{"krate":120,"index":11}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":123593,"byte_end":123604,"line_start":367,"line_end":367,"column_start":15,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2748},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124039,"byte_end":124048,"line_start":384,"line_end":384,"column_start":17,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2781},"to":{"krate":120,"index":11}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124255,"byte_end":124264,"line_start":394,"line_end":394,"column_start":15,"column_end":24},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2781},"to":{"krate":0,"index":900}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":124733,"byte_end":124737,"line_start":412,"line_end":412,"column_start":30,"column_end":34},"kind":{"Impl":{"id":205}},"from":{"krate":90,"index":1722},"to":{"krate":0,"index":925}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125266,"byte_end":125276,"line_start":435,"line_end":435,"column_start":64,"column_end":74},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2020},"to":{"krate":0,"index":925}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125785,"byte_end":125792,"line_start":455,"line_end":455,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":5983},"to":{"krate":0,"index":2814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125877,"byte_end":125884,"line_start":458,"line_end":458,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":7498},"to":{"krate":0,"index":2817}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":125977,"byte_end":125981,"line_start":461,"line_end":461,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":6169},"to":{"krate":0,"index":2820}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126070,"byte_end":126079,"line_start":464,"line_end":464,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":19,"index":1680},"to":{"krate":0,"index":2823}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126207,"byte_end":126223,"line_start":467,"line_end":467,"column_start":35,"column_end":51},"kind":"SuperTrait","from":{"krate":19,"index":1198},"to":{"krate":0,"index":2826}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126225,"byte_end":126234,"line_start":467,"line_end":467,"column_start":53,"column_end":62},"kind":"SuperTrait","from":{"krate":19,"index":1680},"to":{"krate":0,"index":2826}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126322,"byte_end":126334,"line_start":470,"line_end":470,"column_start":44,"column_end":56},"kind":"SuperTrait","from":{"krate":138,"index":50},"to":{"krate":0,"index":2829}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126409,"byte_end":126413,"line_start":474,"line_end":474,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126416,"byte_end":126420,"line_start":474,"line_end":474,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126423,"byte_end":126428,"line_start":474,"line_end":474,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126431,"byte_end":126436,"line_start":474,"line_end":474,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126439,"byte_end":126441,"line_start":474,"line_end":474,"column_start":49,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126444,"byte_end":126453,"line_start":474,"line_end":474,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1619},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126456,"byte_end":126461,"line_start":474,"line_end":474,"column_start":66,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":126558,"byte_end":126559,"line_start":475,"line_end":475,"column_start":84,"column_end":85},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":935},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127068,"byte_end":127073,"line_start":489,"line_end":489,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127076,"byte_end":127080,"line_start":489,"line_end":489,"column_start":10,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127083,"byte_end":127087,"line_start":489,"line_end":489,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127090,"byte_end":127095,"line_start":489,"line_end":489,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":15,"index":123},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127098,"byte_end":127100,"line_start":489,"line_end":489,"column_start":32,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127103,"byte_end":127117,"line_start":489,"line_end":489,"column_start":37,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":2823},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127120,"byte_end":127125,"line_start":489,"line_end":489,"column_start":54,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":127129,"byte_end":127146,"line_start":490,"line_end":490,"column_start":2,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":2829},"to":{"krate":0,"index":939}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129022,"byte_end":129027,"line_start":547,"line_end":547,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129030,"byte_end":129034,"line_start":547,"line_end":547,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129037,"byte_end":129041,"line_start":547,"line_end":547,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129044,"byte_end":129049,"line_start":547,"line_end":547,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":15,"index":123},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129052,"byte_end":129054,"line_start":547,"line_end":547,"column_start":48,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129057,"byte_end":129071,"line_start":547,"line_end":547,"column_start":53,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2823},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129074,"byte_end":129079,"line_start":547,"line_end":547,"column_start":70,"column_end":75},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":129082,"byte_end":129099,"line_start":547,"line_end":547,"column_start":78,"column_end":95},"kind":"SuperTrait","from":{"krate":0,"index":2829},"to":{"krate":0,"index":955}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130344,"byte_end":130349,"line_start":576,"line_end":576,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":965}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":130352,"byte_end":130369,"line_start":576,"line_end":576,"column_start":30,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":2829},"to":{"krate":0,"index":965}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132292,"byte_end":132297,"line_start":622,"line_end":622,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":132803,"byte_end":132808,"line_start":634,"line_end":634,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":985}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":133085,"byte_end":133086,"line_start":643,"line_end":643,"column_start":57,"column_end":58},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":989},"to":{"krate":0,"index":981}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135114,"byte_end":135119,"line_start":688,"line_end":688,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":15,"index":123},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135122,"byte_end":135127,"line_start":688,"line_end":688,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":5978},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135130,"byte_end":135134,"line_start":688,"line_end":688,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135137,"byte_end":135141,"line_start":688,"line_end":688,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135144,"byte_end":135149,"line_start":688,"line_end":688,"column_start":58,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135152,"byte_end":135154,"line_start":688,"line_end":688,"column_start":66,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":135157,"byte_end":135166,"line_start":688,"line_end":688,"column_start":71,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1619},"to":{"krate":0,"index":1009}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142954,"byte_end":142959,"line_start":904,"line_end":904,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142962,"byte_end":142966,"line_start":904,"line_end":904,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":142969,"byte_end":142973,"line_start":904,"line_end":904,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":145507,"byte_end":145512,"line_start":974,"line_end":974,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":1046}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146329,"byte_end":146345,"line_start":996,"line_end":996,"column_start":13,"column_end":29},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":146512,"byte_end":146528,"line_start":1003,"line_end":1003,"column_start":44,"column_end":60},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1053},"to":{"krate":15,"index":54}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147363,"byte_end":147380,"line_start":1039,"line_end":1039,"column_start":10,"column_end":27},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":147524,"byte_end":147541,"line_start":1046,"line_end":1046,"column_start":27,"column_end":44},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1067},"to":{"krate":15,"index":54}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":148068,"byte_end":148073,"line_start":1064,"line_end":1064,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/traits.rs","byte_start":149301,"byte_end":149303,"line_start":1090,"line_end":1090,"column_start":93,"column_end":95},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1089},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":161184,"byte_end":161202,"line_start":74,"line_end":74,"column_start":6,"column_end":24},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":163857,"byte_end":163881,"line_start":147,"line_end":147,"column_start":6,"column_end":30},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164675,"byte_end":164699,"line_start":175,"line_end":175,"column_start":35,"column_end":59},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3280},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":164827,"byte_end":164851,"line_start":181,"line_end":181,"column_start":35,"column_end":59},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3280},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165164,"byte_end":165182,"line_start":190,"line_end":190,"column_start":36,"column_end":54},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3192},"to":{"krate":2,"index":1804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":165285,"byte_end":165303,"line_start":196,"line_end":196,"column_start":36,"column_end":54},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":1804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168010,"byte_end":168026,"line_start":264,"line_end":264,"column_start":18,"column_end":34},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3347},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":168216,"byte_end":168232,"line_start":276,"line_end":276,"column_start":6,"column_end":22},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":169619,"byte_end":169642,"line_start":313,"line_end":313,"column_start":6,"column_end":29},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172425,"byte_end":172444,"line_start":387,"line_end":387,"column_start":40,"column_end":59},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/transaction_validity.rs","byte_start":172566,"byte_end":172582,"line_start":393,"line_end":393,"column_start":40,"column_end":56},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3347},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/random_number_generator.rs","byte_start":175769,"byte_end":175790,"line_start":52,"line_end":52,"column_start":21,"column_end":42},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178484,"byte_end":178497,"line_start":35,"line_end":35,"column_start":29,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178621,"byte_end":178627,"line_start":42,"line_end":42,"column_start":30,"column_end":36},"kind":{"Impl":{"id":261}},"from":{"krate":5,"index":4732},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178808,"byte_end":178821,"line_start":51,"line_end":51,"column_start":18,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":178910,"byte_end":178923,"line_start":57,"line_end":57,"column_start":20,"column_end":33},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179025,"byte_end":179038,"line_start":63,"line_end":63,"column_start":22,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179188,"byte_end":179201,"line_start":72,"line_end":72,"column_start":17,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3402},"to":{"krate":15,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179353,"byte_end":179366,"line_start":81,"line_end":81,"column_start":17,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3402},"to":{"krate":15,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179542,"byte_end":179555,"line_start":88,"line_end":88,"column_start":28,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":179792,"byte_end":179805,"line_start":98,"line_end":98,"column_start":27,"column_end":40},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3402},"to":{"krate":19,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/runtime_string.rs","byte_start":180085,"byte_end":180098,"line_start":108,"line_end":108,"column_start":39,"column_end":52},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3402},"to":{"krate":19,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3136,"byte_end":3144,"line_start":99,"line_end":99,"column_start":17,"column_end":25},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3416},"to":{"krate":26,"index":1923}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":3915,"byte_end":3920,"line_start":125,"line_end":125,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":1267}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":4187,"byte_end":4194,"line_start":134,"line_end":134,"column_start":41,"column_end":48},"kind":{"Impl":{"id":274}},"from":{"krate":85,"index":272},"to":{"krate":0,"index":1264}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5532,"byte_end":5546,"line_start":180,"line_end":180,"column_start":35,"column_end":49},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5668,"byte_end":5677,"line_start":186,"line_end":186,"column_start":43,"column_end":52},"kind":{"Impl":{"id":282}},"from":{"krate":26,"index":2450},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":5868,"byte_end":5882,"line_start":193,"line_end":193,"column_start":35,"column_end":49},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6004,"byte_end":6013,"line_start":199,"line_end":199,"column_start":43,"column_end":52},"kind":{"Impl":{"id":284}},"from":{"krate":26,"index":2580},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6202,"byte_end":6216,"line_start":206,"line_end":206,"column_start":33,"column_end":47},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6332,"byte_end":6341,"line_start":212,"line_end":212,"column_start":41,"column_end":50},"kind":{"Impl":{"id":286}},"from":{"krate":26,"index":2676},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":6513,"byte_end":6527,"line_start":219,"line_end":219,"column_start":18,"column_end":32},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7053,"byte_end":7064,"line_start":237,"line_end":237,"column_start":18,"column_end":29},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3526},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7336,"byte_end":7347,"line_start":245,"line_end":245,"column_start":50,"column_end":61},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3526},"to":{"krate":26,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7463,"byte_end":7474,"line_start":251,"line_end":251,"column_start":22,"column_end":33},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3526},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":7713,"byte_end":7724,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3526},"to":{"krate":0,"index":792}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8062,"byte_end":8073,"line_start":272,"line_end":272,"column_start":32,"column_end":43},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3526},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8186,"byte_end":8192,"line_start":278,"line_end":278,"column_start":40,"column_end":46},"kind":{"Impl":{"id":299}},"from":{"krate":26,"index":2395},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8374,"byte_end":8385,"line_start":285,"line_end":285,"column_start":32,"column_end":43},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3526},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8498,"byte_end":8504,"line_start":291,"line_end":291,"column_start":40,"column_end":46},"kind":{"Impl":{"id":301}},"from":{"krate":26,"index":2525},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8684,"byte_end":8695,"line_start":298,"line_end":298,"column_start":30,"column_end":41},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3526},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":8802,"byte_end":8808,"line_start":304,"line_end":304,"column_start":38,"column_end":44},"kind":{"Impl":{"id":303}},"from":{"krate":26,"index":2624},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":9008,"byte_end":9019,"line_start":312,"line_end":312,"column_start":28,"column_end":39},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3526},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":9335,"byte_end":9349,"line_start":322,"line_end":322,"column_start":17,"column_end":31},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3447},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10275,"byte_end":10287,"line_start":346,"line_end":346,"column_start":17,"column_end":29},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10750,"byte_end":10762,"line_start":359,"line_end":359,"column_start":35,"column_end":47},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":3613},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10872,"byte_end":10884,"line_start":365,"line_end":365,"column_start":35,"column_end":47},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":3613},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":10989,"byte_end":11004,"line_start":371,"line_end":371,"column_start":30,"column_end":45},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":12763,"byte_end":12776,"line_start":420,"line_end":420,"column_start":6,"column_end":19},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13054,"byte_end":13079,"line_start":431,"line_end":431,"column_start":24,"column_end":49},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3710},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13346,"byte_end":13359,"line_start":443,"line_end":443,"column_start":43,"column_end":56},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13479,"byte_end":13492,"line_start":449,"line_end":449,"column_start":41,"column_end":54},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":13595,"byte_end":13608,"line_start":455,"line_end":455,"column_start":29,"column_end":42},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3669},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14282,"byte_end":14295,"line_start":480,"line_end":480,"column_start":28,"column_end":41},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3669},"to":{"krate":0,"index":1099}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":14677,"byte_end":14702,"line_start":498,"line_end":498,"column_start":31,"column_end":56},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3710},"to":{"krate":0,"index":1099}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":17588,"byte_end":17598,"line_start":559,"line_end":559,"column_start":50,"column_end":60},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":1374},"to":{"krate":0,"index":786}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21466,"byte_end":21481,"line_start":718,"line_end":718,"column_start":40,"column_end":55},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3747},"to":{"krate":138,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21614,"byte_end":21629,"line_start":724,"line_end":724,"column_start":29,"column_end":44},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3747},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":21976,"byte_end":21991,"line_start":738,"line_end":738,"column_start":29,"column_end":44},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3747},"to":{"krate":19,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22241,"byte_end":22256,"line_start":745,"line_end":745,"column_start":39,"column_end":54},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3747},"to":{"krate":19,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22533,"byte_end":22548,"line_start":753,"line_end":753,"column_start":28,"column_end":43},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3747},"to":{"krate":0,"index":965}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":22983,"byte_end":23000,"line_start":771,"line_end":771,"column_start":6,"column_end":23},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/runtime/src/lib.rs","byte_start":23322,"byte_end":23339,"line_start":786,"line_end":786,"column_start":15,"column_end":32},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":2076}}]}