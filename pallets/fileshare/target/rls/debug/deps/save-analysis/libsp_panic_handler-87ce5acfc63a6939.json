{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_panic_handler","--edition=2018","/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=87ce5acfc63a6939","-C","extra-filename=-87ce5acfc63a6939","--out-dir","/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","--extern","backtrace=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libbacktrace-9d0b33a9ad38ab4a.rmeta","--extern","log=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/liblog-0cfc9f3120ac6e4a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_panic_handler-87ce5acfc63a6939.rmeta"},"prelude":{"crate_id":{"name":"sp_panic_handler","disambiguator":[9035826821212920039,325693535763843033]},"crate_root":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src","external_crates":[{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":15,"id":{"name":"backtrace","disambiguator":[18134607837615136743,9446271803075368385]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":16,"id":{"name":"rustc_demangle","disambiguator":[5146049380465956145,771809060488072883]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":18,"id":{"name":"addr2line","disambiguator":[4367394800532784875,14916486106589456017]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":19,"id":{"name":"gimli","disambiguator":[2365300210788396002,3502160938625290209]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":20,"id":{"name":"libc","disambiguator":[15850054303935087509,2172107276946414463]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","num":21,"id":{"name":"object","disambiguator":[14105361202928525417,13644467560032816245]}}],"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":686,"byte_end":5547,"line_start":18,"line_end":192,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":686,"byte_end":5547,"line_start":18,"line_end":192,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":48},{"krate":0,"index":46},{"krate":0,"index":45},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":27}],"decl_id":null,"docs":" Custom panic hook with bug report link","sig":null,"attributes":[{"value":"! Custom panic hook with bug report link","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":686,"byte_end":728,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":729,"byte_end":732,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! This crate provides the [`set`] function, which wraps around [`std::panic::set_hook`] and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":733,"byte_end":826,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"! sets up a panic hook that prints a backtrace and invites the user to open an issue to the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":827,"byte_end":920,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"! given URL.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":921,"byte_end":935,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":936,"byte_end":939,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! By default, the panic handler aborts the process by calling [`std::process::exit`]. This can","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":940,"byte_end":1036,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"! temporarily be disabled by using an [`AbortGuard`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1037,"byte_end":1092,"line_start":25,"line_end":25,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1808,"byte_end":1811,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"set","qualname":"::set","value":"fn (bug_url: &'static str, version: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the panic hook.","sig":null,"attributes":[{"value":"/ Set the panic hook.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1573,"byte_end":1596,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1597,"byte_end":1600,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Calls [`std::panic::set_hook`] to set up the panic hook.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1601,"byte_end":1661,"line_start":51,"line_end":51,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1662,"byte_end":1665,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `bug_url` parameter is an invitation for users to visit that URL to submit a bug report","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1666,"byte_end":1761,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ in the case where a panic happens.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":1762,"byte_end":1800,"line_start":54,"line_end":54,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2745,"byte_end":2755,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"AbortGuard","qualname":"::AbortGuard","value":"AbortGuard {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" RAII guard for whether panics in the current thread should unwind or abort.","sig":null,"attributes":[{"value":"/ RAII guard for whether panics in the current thread should unwind or abort.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2334,"byte_end":2413,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2414,"byte_end":2417,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Sets a thread-local abort flag on construction and reverts to the previous setting when dropped.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2418,"byte_end":2518,"line_start":85,"line_end":85,"column_start":1,"column_end":101}},{"value":"/ Does not implement `Send` on purpose.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2519,"byte_end":2560,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2561,"byte_end":2564,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ > **Note**: Because we restore the previous value when dropped, you are encouraged to leave","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2565,"byte_end":2660,"line_start":88,"line_end":88,"column_start":1,"column_end":96}},{"value":"/ > the `AbortGuard` on the stack and let it destroy itself naturally.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2661,"byte_end":2733,"line_start":89,"line_end":89,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3137,"byte_end":3149,"line_start":100,"line_end":100,"column_start":9,"column_end":21},"name":"force_unwind","qualname":"<AbortGuard>::force_unwind","value":"fn () -> AbortGuard","parent":null,"children":[],"decl_id":null,"docs":" Create a new guard. While the guard is alive, panics that happen in the current thread will\n unwind the stack (unless another guard is created afterwards).\n","sig":null,"attributes":[{"value":"/ Create a new guard. While the guard is alive, panics that happen in the current thread will","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2965,"byte_end":3060,"line_start":98,"line_end":98,"column_start":2,"column_end":97}},{"value":"/ unwind the stack (unless another guard is created afterwards).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3062,"byte_end":3128,"line_start":99,"line_end":99,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3436,"byte_end":3447,"line_start":109,"line_end":109,"column_start":9,"column_end":20},"name":"force_abort","qualname":"<AbortGuard>::force_abort","value":"fn () -> AbortGuard","parent":null,"children":[],"decl_id":null,"docs":" Create a new guard. While the guard is alive, panics that happen in the current thread will\n abort the process (unless another guard is created afterwards).\n","sig":null,"attributes":[{"value":"/ Create a new guard. While the guard is alive, panics that happen in the current thread will","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3263,"byte_end":3358,"line_start":107,"line_end":107,"column_start":2,"column_end":97}},{"value":"/ abort the process (unless another guard is created afterwards).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3360,"byte_end":3427,"line_start":108,"line_end":108,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3769,"byte_end":3780,"line_start":118,"line_end":118,"column_start":9,"column_end":20},"name":"never_abort","qualname":"<AbortGuard>::never_abort","value":"fn () -> AbortGuard","parent":null,"children":[],"decl_id":null,"docs":" Create a new guard. While the guard is alive, panics that happen in the current thread will\n **never** abort the process (even if `AbortGuard::force_abort()` guard will be created afterwards).\n","sig":null,"attributes":[{"value":"/ Create a new guard. While the guard is alive, panics that happen in the current thread will","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3560,"byte_end":3655,"line_start":116,"line_end":116,"column_start":2,"column_end":97}},{"value":"/ **never** abort the process (even if `AbortGuard::force_abort()` guard will be created afterwards).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3657,"byte_end":3760,"line_start":117,"line_end":117,"column_start":2,"column_end":105}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2951,"byte_end":2961,"line_start":97,"line_end":97,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3913,"byte_end":3923,"line_start":126,"line_end":126,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":2951,"byte_end":2961,"line_start":97,"line_end":97,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/panic-handler/src/lib.rs","byte_start":3913,"byte_end":3923,"line_start":126,"line_end":126,"column_start":15,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2076}}]}