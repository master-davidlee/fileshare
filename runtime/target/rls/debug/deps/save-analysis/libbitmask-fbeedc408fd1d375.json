{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bitmask","/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=fbeedc408fd1d375","-C","extra-filename=-fbeedc408fd1d375","--out-dir","/home/ipfs/substrate-node-template/runtime/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/runtime/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/runtime/target/rls/debug/deps/libbitmask-fbeedc408fd1d375.rmeta"},"prelude":{"crate_id":{"name":"bitmask","disambiguator":[1619848168571468831,6398955130628558161]},"crate_root":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src","external_crates":[{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}}],"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":0,"byte_end":28063,"line_start":1,"line_end":938,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":0,"byte_end":28063,"line_start":1,"line_end":938,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4}],"decl_id":null,"docs":" A bitmask generator for enum scoped bit flags.","sig":null,"attributes":[{"value":"! A bitmask generator for enum scoped bit flags.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":0,"byte_end":50,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":51,"byte_end":54,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `bitmask!` macro creates a struct and an enum that holds your flags. The enum contains all the","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":55,"byte_end":157,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"! bit flag variants and the struct is a mixture of those bit flags called a bitmask.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":158,"byte_end":244,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"! It's syntax is as follows:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":245,"byte_end":275,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":276,"byte_end":279,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":280,"byte_end":293,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"! bitmask! {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":294,"byte_end":308,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"!     pub mask <struct_name>: <struct_type> where flags <enum_name> {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":309,"byte_end":380,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"!         <flag_name> = <value>,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":381,"byte_end":415,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"!         ...","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":416,"byte_end":431,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":432,"byte_end":441,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":442,"byte_end":447,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":448,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":456,"byte_end":459,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! where `pub` is optional and `struct_type` can be one of the primitive integer types","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":460,"byte_end":547,"line_start":16,"line_end":16,"column_start":1,"column_end":88}},{"value":"! (`i8-64`, `u8-64`, `isize`, `usize`).","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":548,"byte_end":589,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":590,"byte_end":593,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! # Application","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":594,"byte_end":611,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":612,"byte_end":615,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Sometimes you might want to wrap some lib that ports `C` or some other code through FFI","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":616,"byte_end":707,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"! which exposes numerous defines/constants as `const`. Lets take a look at this example module:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":708,"byte_end":805,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":806,"byte_end":809,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":810,"byte_end":823,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"! mod tex {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":824,"byte_end":837,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"!     ...","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":838,"byte_end":849,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"!     pub const TEXTURE_2D: u32   = 1;","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":850,"byte_end":890,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"!     pub const TEXTURE_3D: u32   = 2;","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":891,"byte_end":931,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"!     pub const FLIP: u32         = 4;","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":932,"byte_end":972,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"!     ...","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":973,"byte_end":984,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"!     pub fn set_options(mask: u32) { ... }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":985,"byte_end":1030,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1031,"byte_end":1036,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1037,"byte_end":1044,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1045,"byte_end":1048,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! To avoid collisions you would use these through the mod scope like so:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1049,"byte_end":1123,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1124,"byte_end":1127,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1128,"byte_end":1141,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"! tex::set_options(tex::TEXTURE_2D | tex::FLIP);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1142,"byte_end":1192,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1193,"byte_end":1200,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1201,"byte_end":1204,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! But that does not guarantee you that you won't use invalid flag values.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1205,"byte_end":1280,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"! For example you could do:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1281,"byte_end":1310,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1311,"byte_end":1314,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1315,"byte_end":1328,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"! set_options(3 | 8);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1329,"byte_end":1352,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1353,"byte_end":1360,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1361,"byte_end":1364,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! Now imagine you had an enum to hold all of those flags and a common type that does not accept","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1365,"byte_end":1462,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"! any types other than the enum variants and itself. This is exactly what `bitmask!` does for you!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1463,"byte_end":1563,"line_start":49,"line_end":49,"column_start":1,"column_end":101}},{"value":"! It generates an enum with the variants (flags) you supply and a struct that","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1564,"byte_end":1643,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"! holds a mask which is a mixture of these variants. So now our example would look like this:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1644,"byte_end":1739,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1740,"byte_end":1743,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1744,"byte_end":1751,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"! # mod tex {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1752,"byte_end":1767,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"! #     pub const TEXTURE_2D: u32   = 1;","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1768,"byte_end":1810,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"! #     pub const TEXTURE_3D: u32   = 2;","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1811,"byte_end":1853,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"! #     pub const FLIP: u32         = 4;","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1854,"byte_end":1896,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"! #     pub fn set_options(mask: u32) {}","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1897,"byte_end":1939,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"! # }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1940,"byte_end":1947,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate bitmask; fn main() {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":1948,"byte_end":2000,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"! bitmask! {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2001,"byte_end":2015,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"!     pub mask TexMask: u32 where flags TexOption {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2016,"byte_end":2069,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"!         Texture2d = tex::TEXTURE_2D,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2070,"byte_end":2110,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"!         Texture3d = tex::TEXTURE_3D,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2111,"byte_end":2151,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"!         Flip = tex::FLIP","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2152,"byte_end":2180,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"!     }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2181,"byte_end":2190,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2191,"byte_end":2196,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2197,"byte_end":2200,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! fn set_options(mask: TexMask) {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2201,"byte_end":2236,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"!     tex::set_options(*mask);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2237,"byte_end":2269,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2270,"byte_end":2275,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2276,"byte_end":2279,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! // Single flag","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2280,"byte_end":2298,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"! set_options(TexOption::Texture2d.into());","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2299,"byte_end":2344,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"! set_options(TexMask::from(TexOption::Texture3d));","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2345,"byte_end":2398,"line_start":75,"line_end":75,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2399,"byte_end":2402,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! // Multiple flags","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2403,"byte_end":2424,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"! set_options(TexOption::Texture2d | TexOption::Flip);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2425,"byte_end":2481,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"! # }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2482,"byte_end":2489,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2490,"byte_end":2497,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2498,"byte_end":2501,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! # Things that are doable but _can change_ with time:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2502,"byte_end":2558,"line_start":82,"line_end":82,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2559,"byte_end":2562,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! If for some reason you want to define the enum and the struct yourself you can do so and use the","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2563,"byte_end":2663,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"! `@IMPL` branch of the macro to implement the methods. The only restrictions are that your","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2664,"byte_end":2757,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"! struct's inner field must be named `mask` and the enum should have the same size as the struct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2758,"byte_end":2856,"line_start":86,"line_end":86,"column_start":1,"column_end":99}},{"value":"! which can be achieved through the `#[repr()]` modifier with the same integer type as the field `mask`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2857,"byte_end":2963,"line_start":87,"line_end":87,"column_start":1,"column_end":107}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2964,"byte_end":2967,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! Implementing `Into<struct_name>` and `Deref` for your own custom type is possible if you want to","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":2968,"byte_end":3068,"line_start":89,"line_end":89,"column_start":1,"column_end":101}},{"value":"! use it with the preimplemented methods for the mask but does not apply for the trait implements","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3069,"byte_end":3168,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"! like `BitOr` for example.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3169,"byte_end":3198,"line_start":91,"line_end":91,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3199,"byte_end":3202,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! # Examples:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3203,"byte_end":3218,"line_start":93,"line_end":93,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3219,"byte_end":3222,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3223,"byte_end":3230,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate bitmask; fn main() {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3231,"byte_end":3283,"line_start":96,"line_end":96,"column_start":1,"column_end":53}},{"value":"! bitmask! {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3284,"byte_end":3298,"line_start":97,"line_end":97,"column_start":1,"column_end":15}},{"value":"!     mask BitMask: u32 where flags Flags {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3299,"byte_end":3344,"line_start":98,"line_end":98,"column_start":1,"column_end":46}},{"value":"!         Flag1       = 0x00000001,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3345,"byte_end":3382,"line_start":99,"line_end":99,"column_start":1,"column_end":38}},{"value":"!         Flag2       = 0x000000F0,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3383,"byte_end":3420,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"!         Flag3       = 0x00000800,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3421,"byte_end":3458,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"!         Flag123     = 0x000008F1,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3459,"byte_end":3496,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"!         // Note that function calls like `isize::min_value()`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3497,"byte_end":3562,"line_start":103,"line_end":103,"column_start":1,"column_end":66}},{"value":"!         // can't be used for enum discriminants in Rust.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3563,"byte_end":3623,"line_start":104,"line_end":104,"column_start":1,"column_end":61}},{"value":"!         FlagMax     = ::std::u32::MAX","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3624,"byte_end":3665,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3666,"byte_end":3675,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3676,"byte_end":3681,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3682,"byte_end":3685,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! let mut mask = BitMask::none();","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3686,"byte_end":3721,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3722,"byte_end":3725,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! mask.set(Flags::Flag1 | Flags::Flag2);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3726,"byte_end":3768,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"! assert_eq!(*mask, 0x000000F1);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3769,"byte_end":3803,"line_start":112,"line_end":112,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3804,"byte_end":3807,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! mask.unset(Flags::Flag1);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3808,"byte_end":3837,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"! assert_eq!(*mask, 0x000000F0);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3838,"byte_end":3872,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3873,"byte_end":3876,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! mask.set(Flags::Flag123);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3877,"byte_end":3906,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"! assert_eq!(*mask, 0x000008F1);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3907,"byte_end":3941,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"! # }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3942,"byte_end":3949,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3950,"byte_end":3957,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3958,"byte_end":3961,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! You can add meta attributes like documentation (`#[doc = \"...\"]`) to each element of the macro:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":3962,"byte_end":4061,"line_start":122,"line_end":122,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4062,"byte_end":4065,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4066,"byte_end":4073,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate bitmask; fn main() {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4074,"byte_end":4126,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"! bitmask! {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4127,"byte_end":4141,"line_start":126,"line_end":126,"column_start":1,"column_end":15}},{"value":"!     /// Doc comment for the struct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4142,"byte_end":4180,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"!     pub mask SomeOtherMask: isize where","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4181,"byte_end":4224,"line_start":128,"line_end":128,"column_start":1,"column_end":44}},{"value":"!     /// Doc comment for the enum","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4225,"byte_end":4261,"line_start":129,"line_end":129,"column_start":1,"column_end":37}},{"value":"!     flags SomeOtherFlags {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4262,"byte_end":4292,"line_start":130,"line_end":130,"column_start":1,"column_end":31}},{"value":"!         /// Doc comment for the flag","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4293,"byte_end":4333,"line_start":131,"line_end":131,"column_start":1,"column_end":41}},{"value":"!         FlagZero    = 0,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4334,"byte_end":4362,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"!         FlagOne     = 1","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4363,"byte_end":4390,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!     }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4391,"byte_end":4400,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4401,"byte_end":4406,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4407,"byte_end":4414,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4415,"byte_end":4422,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4423,"byte_end":4426,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! Maybe not the best example but still... Cake is love!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4427,"byte_end":4484,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4485,"byte_end":4488,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4489,"byte_end":4496,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"! # #[macro_use] extern crate bitmask; fn main() {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4497,"byte_end":4549,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"! bitmask! {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4550,"byte_end":4564,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"!     mask Cake: u8 where flags Ingredients {","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4565,"byte_end":4612,"line_start":144,"line_end":144,"column_start":1,"column_end":48}},{"value":"!         Sugar   = 0b00000001,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4613,"byte_end":4646,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"!         Eggs    = 0b00000010,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4647,"byte_end":4680,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"!         Flour   = 0b00000100,","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4681,"byte_end":4714,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"!         Milk    = 0b00001000","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4715,"byte_end":4747,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4748,"byte_end":4757,"line_start":149,"line_end":149,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4758,"byte_end":4763,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4764,"byte_end":4767,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! let quality_cake = Cake::all();","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4768,"byte_end":4803,"line_start":152,"line_end":152,"column_start":1,"column_end":36}},{"value":"! assert_eq!(*quality_cake, 0b00001111);","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4804,"byte_end":4846,"line_start":153,"line_end":153,"column_start":1,"column_end":43}},{"value":"! # }","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4847,"byte_end":4854,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/bitmask-0.5.0/src/lib.rs","byte_start":4855,"byte_end":4862,"line_start":155,"line_end":155,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}