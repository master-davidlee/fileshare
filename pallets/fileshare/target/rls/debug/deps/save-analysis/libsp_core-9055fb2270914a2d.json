{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_core","--edition=2018","/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"base58\"","--cfg","feature=\"blake2-rfc\"","--cfg","feature=\"default\"","--cfg","feature=\"ed25519-dalek\"","--cfg","feature=\"full_crypto\"","--cfg","feature=\"futures\"","--cfg","feature=\"hex\"","--cfg","feature=\"impl-serde\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libsecp256k1\"","--cfg","feature=\"merlin\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rand\"","--cfg","feature=\"regex\"","--cfg","feature=\"schnorrkel\"","--cfg","feature=\"serde\"","--cfg","feature=\"sha2\"","--cfg","feature=\"sp-externalities\"","--cfg","feature=\"std\"","--cfg","feature=\"substrate-bip39\"","--cfg","feature=\"tiny-bip39\"","--cfg","feature=\"tiny-keccak\"","--cfg","feature=\"twox-hash\"","--cfg","feature=\"wasmi\"","-C","metadata=9055fb2270914a2d","-C","extra-filename=-9055fb2270914a2d","--out-dir","/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","--extern","base58=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libbase58-43260883d8d45bc1.rmeta","--extern","blake2_rfc=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libblake2_rfc-6f1ed898195eaa92.rmeta","--extern","byteorder=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libbyteorder-1924c13c70e5c236.rmeta","--extern","derive_more=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libderive_more-f67d7e9ac88d2f5c.so","--extern","ed25519_dalek=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libed25519_dalek-1f416d5dbcbb82ca.rmeta","--extern","futures=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libfutures-7776deb07ed9322a.rmeta","--extern","hash_db=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libhash_db-0c264603c81309b4.rmeta","--extern","hash256_std_hasher=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libhash256_std_hasher-ee7a16fe8af561fb.rmeta","--extern","hex=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libhex-1d4bb27bdd30f021.rmeta","--extern","impl_serde=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libimpl_serde-401a67f9fea9b044.rmeta","--extern","lazy_static=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/liblazy_static-e375ff8ea78d92bc.rmeta","--extern","secp256k1=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsecp256k1-973710d07e6d97f8.rmeta","--extern","log=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/liblog-0cfc9f3120ac6e4a.rmeta","--extern","merlin=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libmerlin-5a15d195ddc2037b.rmeta","--extern","num_traits=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libnum_traits-c30dd237327482c2.rmeta","--extern","codec=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparity_scale_codec-f846fd866e90eb5c.rmeta","--extern","parity_util_mem=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparity_util_mem-9fdf3a635a70401d.rmeta","--extern","parking_lot=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libparking_lot-e0419b59a318d878.rmeta","--extern","primitive_types=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libprimitive_types-0e12049147ed9fdd.rmeta","--extern","rand=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/librand-71f2f10ee6923e63.rmeta","--extern","regex=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libregex-c67b3663564bf95a.rmeta","--extern","schnorrkel=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libschnorrkel-3e879cf5e87eaf3e.rmeta","--extern","serde=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libserde-8e3179877dc95843.rmeta","--extern","sha2=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsha2-09000b4f907ce8a6.rmeta","--extern","sp_debug_derive=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_debug_derive-db633ac930505cf2.so","--extern","sp_externalities=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_externalities-320c4461a6281f53.rmeta","--extern","sp_runtime_interface=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_runtime_interface-98e773def97427a3.rmeta","--extern","sp_std=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_std-31df6ce51c93d927.rmeta","--extern","sp_storage=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_storage-b3df17ae196b448d.rmeta","--extern","substrate_bip39=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsubstrate_bip39-f0ad5e862db2d9bf.rmeta","--extern","bip39=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libbip39-a24a0702cbce2bda.rmeta","--extern","tiny_keccak=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libtiny_keccak-452d6c630b5c442a.rmeta","--extern","twox_hash=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libtwox_hash-ad04482fd0a5ae40.rmeta","--extern","wasmi=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libwasmi-92898648702d93c0.rmeta","--extern","zeroize=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libzeroize-2590ff11d3e63007.rmeta","--cap-lints","allow","-L","native=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/build/clear_on_drop-a23791235c119df6/out","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_core-9055fb2270914a2d.rmeta"},"prelude":{"crate_id":{"name":"sp_core","disambiguator":[17683045494970980731,13559405023477717555]},"crate_root":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src","external_crates":[{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":15,"id":{"name":"serde","disambiguator":[13481768320746797087,7282555180186658229]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[14214070500933581380,3624999802238555216]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":17,"id":{"name":"parity_scale_codec","disambiguator":[15638882894901664300,15938776292720705477]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":18,"id":{"name":"parity_scale_codec_derive","disambiguator":[379814399442547304,17581532101419470896]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":19,"id":{"name":"arrayvec","disambiguator":[1332372460335241694,11021197825096612758]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":20,"id":{"name":"byte_slice_cast","disambiguator":[3640415380441394815,6311138287404375443]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":21,"id":{"name":"sp_debug_derive","disambiguator":[13522996333100151204,9314162219563761913]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":22,"id":{"name":"impl_serde","disambiguator":[8980924363609643778,8190912899161023955]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":23,"id":{"name":"blake2_rfc","disambiguator":[13425746585612006076,3893349097137814390]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":24,"id":{"name":"arrayvec","disambiguator":[8980556773631144340,1530384929258256254]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":25,"id":{"name":"nodrop","disambiguator":[15580487097472407489,16164216452101372544]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":26,"id":{"name":"constant_time_eq","disambiguator":[7513921960350961442,6826608885349661575]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":27,"id":{"name":"sha2","disambiguator":[2087999941899417202,8652755061219861371]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":28,"id":{"name":"block_buffer","disambiguator":[13746670423446533395,10291558624333589947]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":29,"id":{"name":"byteorder","disambiguator":[8554857055557278435,8958170879440380952]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":30,"id":{"name":"block_padding","disambiguator":[15921479850100810545,9304032769572156234]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":31,"id":{"name":"byte_tools","disambiguator":[16878705203460379785,8432621841611626380]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":32,"id":{"name":"generic_array","disambiguator":[961146259118279585,2903465428615636575]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":33,"id":{"name":"typenum","disambiguator":[10535840393202809930,23112338360262232]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":34,"id":{"name":"fake_simd","disambiguator":[10163378265795300682,3429049470422498345]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":35,"id":{"name":"opaque_debug","disambiguator":[542094102041843082,10502796311115957597]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":36,"id":{"name":"digest","disambiguator":[6126133259670863194,4625233068246866504]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":37,"id":{"name":"tiny_keccak","disambiguator":[16657255994201729273,15749590166371444127]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":38,"id":{"name":"crunchy","disambiguator":[8492468043868098796,9147562601699587076]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","num":39,"id":{"name":"twox_hash","disambiguator":[14103234801566248918,11854203410743868499]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":40,"id":{"name":"rand","disambiguator":[14852911624231536199,4329007306221210672]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":41,"id":{"name":"rand_core","disambiguator":[8541689899428407495,4972805062826425925]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":42,"id":{"name":"getrandom","disambiguator":[13618700189715949314,16365477718892601647]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":43,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":44,"id":{"name":"libc","disambiguator":[15850054303935087509,2172107276946414463]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":45,"id":{"name":"rand_chacha","disambiguator":[5821611541543872135,256988615729141104]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":46,"id":{"name":"ppv_lite86","disambiguator":[2483357076725709498,12969028423603202931]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":47,"id":{"name":"rand_pcg","disambiguator":[1329119161985853472,9189108109752656620]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":48,"id":{"name":"sp_std","disambiguator":[11276958021017479825,16325732417868216137]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":49,"id":{"name":"parking_lot","disambiguator":[4077664270008470479,11966793794786088639]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":50,"id":{"name":"lock_api","disambiguator":[2863804777762583869,14799884867851676310]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":51,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":52,"id":{"name":"parking_lot_core","disambiguator":[10023082735607659909,12352998360333487442]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":53,"id":{"name":"smallvec","disambiguator":[4204636050770628742,12614792987383810951]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":54,"id":{"name":"regex","disambiguator":[14198027042281804208,86081918665039131]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":55,"id":{"name":"aho_corasick","disambiguator":[6163840134106157642,11678023651240554382]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":56,"id":{"name":"memchr","disambiguator":[1600158827687491313,9258850746937660075]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":57,"id":{"name":"regex_syntax","disambiguator":[6585461900833040906,12117303110178991079]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":58,"id":{"name":"thread_local","disambiguator":[6963393236790488947,14544403037844186749]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":59,"id":{"name":"lazy_static","disambiguator":[9660684555614800310,8568331244489293542]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":60,"id":{"name":"base58","disambiguator":[16777386067770725910,11698301221143548428]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":61,"id":{"name":"zeroize","disambiguator":[8419538233743450039,4463467074577268889]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":62,"id":{"name":"zeroize_derive","disambiguator":[2444816796196962847,17316197202642986580]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":63,"id":{"name":"sp_runtime_interface","disambiguator":[682286166039121589,14525474089550891235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":64,"id":{"name":"sp_wasm_interface","disambiguator":[8675793106772160261,13785408035542529938]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":65,"id":{"name":"impl_trait_for_tuples","disambiguator":[11683877044574956040,7740304785833687617]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":66,"id":{"name":"wasmi","disambiguator":[2416228699110756094,1766770583142414386]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":67,"id":{"name":"memory_units","disambiguator":[14678550925423856477,13054517670253120849]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":68,"id":{"name":"parity_wasm","disambiguator":[1554235133951985503,17351528177382477681]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":69,"id":{"name":"wasmi_validation","disambiguator":[16639948640573147516,6276059922634634811]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":70,"id":{"name":"num_rational","disambiguator":[6975831310803048684,9911959382833982500]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":71,"id":{"name":"num_bigint","disambiguator":[12568277182492191496,17615354144430726922]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":72,"id":{"name":"num_integer","disambiguator":[6615314100295200538,6263506198981215227]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","num":73,"id":{"name":"num_traits","disambiguator":[17866579788280904889,8893385662677143502]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":74,"id":{"name":"sp_tracing","disambiguator":[11438562976580646038,3002446573349231072]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":75,"id":{"name":"tracing","disambiguator":[13479947174673550820,4133118777693013263]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":76,"id":{"name":"tracing_core","disambiguator":[12837523844224698924,229843443816219795]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":77,"id":{"name":"tracing_attributes","disambiguator":[2263492286649080348,13111413153421272784]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":78,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[10297837370306352563,17721521789272836432]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","num":79,"id":{"name":"sp_externalities","disambiguator":[13735059725287377343,7074722714493672266]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":80,"id":{"name":"sp_storage","disambiguator":[8388726998902642419,5566405698735839699]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":81,"id":{"name":"ref_cast","disambiguator":[14927837505420523305,6271955165879955941]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":82,"id":{"name":"ref_cast_impl","disambiguator":[4388911118607149955,14232018770742587068]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":83,"id":{"name":"impl_serde","disambiguator":[4240565461243128030,16964821940194849107]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":84,"id":{"name":"environmental","disambiguator":[4327085142237264898,15570963526468317845]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","num":85,"id":{"name":"primitive_types","disambiguator":[2776970764958629400,18334998628678477911]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":86,"id":{"name":"fixed_hash","disambiguator":[14470681025450579457,6662852255323844967]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":87,"id":{"name":"static_assertions","disambiguator":[2878701793821026304,16986476632016046768]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":88,"id":{"name":"rustc_hex","disambiguator":[10434719161438519964,14346445293922435357]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":89,"id":{"name":"uint","disambiguator":[16452983131080529725,17838387769575104159]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":90,"id":{"name":"impl_codec","disambiguator":[10299275643052968783,3017370659095368483]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":91,"id":{"name":"substrate_bip39","disambiguator":[16026320640443918052,13713051357735189700]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":92,"id":{"name":"hmac","disambiguator":[11460341029875594496,1906197491684850741]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":93,"id":{"name":"crypto_mac","disambiguator":[8320459484509458636,4799276508247752895]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":94,"id":{"name":"subtle","disambiguator":[8535025202508457436,17708549248523872086]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":95,"id":{"name":"pbkdf2","disambiguator":[4851686168477502927,14028351777984925782]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","num":96,"id":{"name":"schnorrkel","disambiguator":[16900468384019694665,10044191511765835896]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":97,"id":{"name":"arrayref","disambiguator":[16829708543304003037,4144275909003046035]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":98,"id":{"name":"curve25519_dalek","disambiguator":[16644072626332759431,10277902055030964482]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":99,"id":{"name":"subtle","disambiguator":[10234490685617874908,7684466441341660066]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","num":100,"id":{"name":"merlin","disambiguator":[7121650087445607272,2582201859466345986]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":101,"id":{"name":"keccak","disambiguator":[11472536135153304124,6639515317597576426]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":102,"id":{"name":"bip39","disambiguator":[17568215238128443509,8359727043341043963]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":103,"id":{"name":"failure","disambiguator":[16123704538531388289,16892100019265791353]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":104,"id":{"name":"failure_derive","disambiguator":[3132760448282680033,18074464896337337867]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":105,"id":{"name":"backtrace","disambiguator":[18134607837615136743,9446271803075368385]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":106,"id":{"name":"rustc_demangle","disambiguator":[5146049380465956145,771809060488072883]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":107,"id":{"name":"addr2line","disambiguator":[4367394800532784875,14916486106589456017]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":108,"id":{"name":"gimli","disambiguator":[2365300210788396002,3502160938625290209]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":109,"id":{"name":"object","disambiguator":[14105361202928525417,13644467560032816245]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":110,"id":{"name":"rustc_hash","disambiguator":[642462796696129389,1517420890865137522]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":111,"id":{"name":"once_cell","disambiguator":[9949018888993973705,561490500926270181]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":112,"id":{"name":"unicode_normalization","disambiguator":[5970646019162551857,17803897583820378264]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","num":113,"id":{"name":"secp256k1","disambiguator":[8656482482167472749,13898755881770913524]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","num":114,"id":{"name":"hmac_drbg","disambiguator":[1089521263031708807,8798061245638132398]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","num":115,"id":{"name":"hash_db","disambiguator":[9792644969574235955,776104945287127595]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","num":116,"id":{"name":"hash256_std_hasher","disambiguator":[5964121242482212794,15478076518551278946]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":117,"id":{"name":"futures","disambiguator":[6054638481473170312,13203952068894848752]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":118,"id":{"name":"futures_core","disambiguator":[11059587244940335782,9444176274970569630]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":119,"id":{"name":"futures_util","disambiguator":[2297583133361674607,515887674582286629]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":120,"id":{"name":"pin_utils","disambiguator":[3395662280469368698,5400338344872609158]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":121,"id":{"name":"proc_macro_hack","disambiguator":[11648198905521943211,17157862379242527653]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":122,"id":{"name":"futures_task","disambiguator":[3375057385569108956,3660099607051496066]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":123,"id":{"name":"futures_sink","disambiguator":[11970731802322653413,20414178876719527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":124,"id":{"name":"pin_project","disambiguator":[8927595869626226213,3154285897060979768]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":125,"id":{"name":"pin_project_internal","disambiguator":[8120037564058734458,5789199392772687002]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":126,"id":{"name":"futures_channel","disambiguator":[13337516612303749283,16221296507189771847]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":127,"id":{"name":"slab","disambiguator":[4729543071339994363,11740316045407999008]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":128,"id":{"name":"futures_io","disambiguator":[14784988759255588471,7048209535732240470]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":129,"id":{"name":"futures_macro","disambiguator":[13580139449298337526,18153847132449885543]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":130,"id":{"name":"proc_macro_nested","disambiguator":[325458717225558210,1907731413471412174]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":131,"id":{"name":"futures_executor","disambiguator":[393111632237910805,16437123074104340741]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","num":132,"id":{"name":"num_cpus","disambiguator":[3634483020136970562,12375898465086858394]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","num":133,"id":{"name":"log","disambiguator":[9335353625162574946,15944831640773690670]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","num":134,"id":{"name":"parity_util_mem","disambiguator":[3673319352374838710,9109263036345257279]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","num":135,"id":{"name":"parity_util_mem_derive","disambiguator":[16094718766684562609,9112552796339687964]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","num":136,"id":{"name":"derive_more","disambiguator":[13664702256915482174,18424806257437289619]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","num":137,"id":{"name":"hex","disambiguator":[18431432733982247784,9665997700775139809]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":138,"id":{"name":"ed25519_dalek","disambiguator":[6077726820243101941,623554713352160653]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","num":139,"id":{"name":"clear_on_drop","disambiguator":[17664436509209251898,11479650557223418245]}}],"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":686,"byte_end":9995,"line_start":18,"line_end":365,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1294,"byte_end":1299,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":107},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1332,"byte_end":1338,"line_start":44,"line_end":44,"column_start":17,"column_end":23},"alias_span":null,"name":"Encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":119},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1340,"byte_end":1346,"line_start":44,"line_end":44,"column_start":25,"column_end":31},"alias_span":null,"name":"Decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":43},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1375,"byte_end":1387,"line_start":46,"line_end":46,"column_start":26,"column_end":38},"alias_span":null,"name":"RuntimeDebug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":7},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1434,"byte_end":1443,"line_start":49,"line_end":49,"column_start":21,"column_end":30},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1447,"byte_end":1452,"line_start":49,"line_end":49,"column_start":34,"column_end":39},"name":"bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1554,"byte_end":1564,"line_start":54,"line_end":54,"column_start":19,"column_end":29},"alias_span":null,"name":"blake2_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1566,"byte_end":1576,"line_start":54,"line_end":54,"column_start":31,"column_end":41},"alias_span":null,"name":"blake2_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1578,"byte_end":1585,"line_start":54,"line_end":54,"column_start":43,"column_end":50},"alias_span":null,"name":"twox_64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1587,"byte_end":1595,"line_start":54,"line_end":54,"column_start":52,"column_end":60},"alias_span":null,"name":"twox_128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":71},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1597,"byte_end":1605,"line_start":54,"line_end":54,"column_start":62,"column_end":70},"alias_span":null,"name":"twox_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1607,"byte_end":1617,"line_start":54,"line_end":54,"column_start":72,"column_end":82},"alias_span":null,"name":"keccak_256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":2054},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":18778,"byte_end":18783,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"alias_span":null,"name":"Deref","value":"","parent":{"krate":0,"index":113}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23668,"byte_end":23669,"line_start":203,"line_end":203,"column_start":9,"column_end":10},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":113}},{"kind":"Use","ref_id":{"krate":85,"index":1578},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136796,"byte_end":136800,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":1401}},{"kind":"Use","ref_id":{"krate":85,"index":1722},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136802,"byte_end":136806,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":1401}},{"kind":"Use","ref_id":{"krate":85,"index":1866},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136808,"byte_end":136812,"line_start":20,"line_end":20,"column_start":39,"column_end":43},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":1401}},{"kind":"Use","ref_id":{"krate":0,"index":2249},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142192,"byte_end":142201,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"alias_span":null,"name":"KeyTypeId","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":85,"index":793},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/uint.rs","byte_start":186823,"byte_end":186827,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":1672}},{"kind":"Use","ref_id":{"krate":85,"index":1298},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/uint.rs","byte_start":186829,"byte_end":186833,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":1672}},{"kind":"Use","ref_id":{"krate":79,"index":47},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201592,"byte_end":201605,"line_start":32,"line_end":32,"column_start":28,"column_end":41},"alias_span":null,"name":"Externalities","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":79,"index":73},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201607,"byte_end":201623,"line_start":32,"line_end":32,"column_start":43,"column_end":59},"alias_span":null,"name":"ExternalitiesExt","value":"","parent":{"krate":0,"index":1696}},{"kind":"Use","ref_id":{"krate":85,"index":1578},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1985,"byte_end":1989,"line_start":77,"line_end":77,"column_start":22,"column_end":26},"alias_span":null,"name":"H160","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":1722},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1991,"byte_end":1995,"line_start":77,"line_end":77,"column_start":28,"column_end":32},"alias_span":null,"name":"H256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":1866},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1997,"byte_end":2001,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"alias_span":null,"name":"H512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1406},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2003,"byte_end":2015,"line_start":77,"line_end":77,"column_start":40,"column_end":52},"alias_span":null,"name":"convert_hash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":793},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2039,"byte_end":2043,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"U256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":85,"index":1298},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2045,"byte_end":2049,"line_start":78,"line_end":78,"column_start":28,"column_end":32},"alias_span":null,"name":"U512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3392},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2075,"byte_end":2099,"line_start":79,"line_end":79,"column_start":24,"column_end":48},"alias_span":null,"name":"ChangesTrieConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3470},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2101,"byte_end":2130,"line_start":79,"line_end":79,"column_start":50,"column_end":79},"alias_span":null,"name":"ChangesTrieConfigurationRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2043},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2182,"byte_end":2196,"line_start":81,"line_end":81,"column_start":18,"column_end":32},"alias_span":null,"name":"DeriveJunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2198,"byte_end":2202,"line_start":81,"line_end":81,"column_start":34,"column_end":38},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2204,"byte_end":2210,"line_start":81,"line_end":81,"column_start":40,"column_end":46},"alias_span":null,"name":"Public","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":115,"index":11},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2231,"byte_end":2237,"line_start":83,"line_end":83,"column_start":18,"column_end":24},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2711},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2293,"byte_end":2305,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"Blake2Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2715},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2361,"byte_end":2373,"line_start":87,"line_end":87,"column_start":31,"column_end":43},"alias_span":null,"name":"KeccakHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":80,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2384,"byte_end":2394,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"alias_span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2398,"byte_end":2405,"line_start":89,"line_end":89,"column_start":23,"column_end":30},"name":"storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":48,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2431,"byte_end":2437,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"alias_span":null,"name":"sp_std","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":686,"byte_end":9995,"line_start":18,"line_end":365,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":81},{"krate":0,"index":88},{"krate":0,"index":113},{"krate":0,"index":366},{"krate":0,"index":805},{"krate":0,"index":995},{"krate":0,"index":1212},{"krate":0,"index":1401},{"krate":0,"index":1409},{"krate":0,"index":1428},{"krate":0,"index":1662},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1696},{"krate":0,"index":1778},{"krate":0,"index":1839},{"krate":0,"index":1851},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1881},{"krate":0,"index":3585},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3644},{"krate":0,"index":3642},{"krate":0,"index":3628},{"krate":0,"index":3599},{"krate":0,"index":3596},{"krate":0,"index":3590},{"krate":0,"index":3588},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":3653},{"krate":0,"index":3665},{"krate":0,"index":3660},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1914},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":3679},{"krate":0,"index":3712},{"krate":0,"index":3707},{"krate":0,"index":3698},{"krate":0,"index":3697},{"krate":0,"index":3695},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934}],"decl_id":null,"docs":" Shareable Substrate types.\n","sig":null,"attributes":[{"value":"! Shareable Substrate types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":686,"byte_end":716,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"warn(missing_docs)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":718,"byte_end":740,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashing","qualname":"::hashing","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":51},{"krate":0,"index":55},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":78}],"decl_id":null,"docs":" Hashing functions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1455,"byte_end":1486,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"! Hashing functions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":10683,"byte_end":10705,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":10866,"byte_end":10881,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"blake2_512_into","qualname":"::hashing::blake2_512_into","value":"fn (data: &[u8], dest: &mut [u8; 64]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 512-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 512-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":10802,"byte_end":10858,"line_start":25,"line_end":25,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11055,"byte_end":11065,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"blake2_512","qualname":"::hashing::blake2_512","value":"fn (data: &[u8]) -> [u8; 64]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 512-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 512-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11000,"byte_end":11047,"line_start":30,"line_end":30,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11217,"byte_end":11232,"line_start":38,"line_end":38,"column_start":8,"column_end":23},"name":"blake2_256_into","qualname":"::hashing::blake2_256_into","value":"fn (data: &[u8], dest: &mut [u8; 32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 256-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 256-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11153,"byte_end":11209,"line_start":37,"line_end":37,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11406,"byte_end":11416,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"blake2_256","qualname":"::hashing::blake2_256","value":"fn (data: &[u8]) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 256-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11351,"byte_end":11398,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11568,"byte_end":11583,"line_start":50,"line_end":50,"column_start":8,"column_end":23},"name":"blake2_128_into","qualname":"::hashing::blake2_128_into","value":"fn (data: &[u8], dest: &mut [u8; 16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 128-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 128-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11504,"byte_end":11560,"line_start":49,"line_end":49,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11757,"byte_end":11767,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"blake2_128","qualname":"::hashing::blake2_128","value":"fn (data: &[u8]) -> [u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 128-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 128-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11702,"byte_end":11749,"line_start":54,"line_end":54,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11918,"byte_end":11932,"line_start":62,"line_end":62,"column_start":8,"column_end":22},"name":"blake2_64_into","qualname":"::hashing::blake2_64_into","value":"fn (data: &[u8], dest: &mut [u8; 8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 64-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 64-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":11855,"byte_end":11910,"line_start":61,"line_end":61,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12103,"byte_end":12112,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"blake2_64","qualname":"::hashing::blake2_64","value":"fn (data: &[u8]) -> [u8; 8]","parent":null,"children":[],"decl_id":null,"docs":" Do a Blake2 64-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a Blake2 64-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12049,"byte_end":12095,"line_start":66,"line_end":66,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12256,"byte_end":12268,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"twox_64_into","qualname":"::hashing::twox_64_into","value":"fn (data: &[u8], dest: &mut [u8; 8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 64-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 64-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12197,"byte_end":12248,"line_start":73,"line_end":73,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12561,"byte_end":12568,"line_start":84,"line_end":84,"column_start":8,"column_end":15},"name":"twox_64","qualname":"::hashing::twox_64","value":"fn (data: &[u8]) -> [u8; 8]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 64-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 64-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12511,"byte_end":12553,"line_start":83,"line_end":83,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12720,"byte_end":12733,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"twox_128_into","qualname":"::hashing::twox_128_into","value":"fn (data: &[u8], dest: &mut [u8; 16]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 128-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 128-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":12660,"byte_end":12712,"line_start":90,"line_end":90,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":13163,"byte_end":13171,"line_start":105,"line_end":105,"column_start":8,"column_end":16},"name":"twox_128","qualname":"::hashing::twox_128","value":"fn (data: &[u8]) -> [u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 128-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 128-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":13112,"byte_end":13155,"line_start":104,"line_end":104,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":13327,"byte_end":13340,"line_start":112,"line_end":112,"column_start":8,"column_end":21},"name":"twox_256_into","qualname":"::hashing::twox_256_into","value":"fn (data: &[u8], dest: &mut [u8; 32]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 256-bit hash and place result in `dest`.\n","sig":null,"attributes":[{"value":"/ Do a XX 256-bit hash and place result in `dest`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":13267,"byte_end":13319,"line_start":111,"line_end":111,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":14042,"byte_end":14050,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"twox_256","qualname":"::hashing::twox_256","value":"fn (data: &[u8]) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Do a XX 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a XX 256-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":13991,"byte_end":14034,"line_start":133,"line_end":133,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":14201,"byte_end":14211,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"keccak_256","qualname":"::hashing::keccak_256","value":"fn (data: &[u8]) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Do a keccak 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a keccak 256-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":14146,"byte_end":14193,"line_start":140,"line_end":140,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":14419,"byte_end":14427,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"sha2_256","qualname":"::hashing::sha2_256","value":"fn (data: &[u8]) -> [u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Do a sha2 256-bit hash and return result.\n","sig":null,"attributes":[{"value":"/ Do a sha2 256-bit hash and return result.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hashing.rs","byte_start":14366,"byte_end":14411,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hexdisplay","qualname":"::hexdisplay","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":112}],"decl_id":null,"docs":" Wrapper type for byte collections that outputs hex.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1620,"byte_end":1643,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"! Wrapper type for byte collections that outputs hex.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15278,"byte_end":15333,"line_start":18,"line_end":18,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15405,"byte_end":15415,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HexDisplay","qualname":"::hexdisplay::HexDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple wrapper to display hex representation of bytes.\n","sig":null,"attributes":[{"value":"/ Simple wrapper to display hex representation of bytes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15335,"byte_end":15393,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15545,"byte_end":15549,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"name":"from","qualname":"<HexDisplay>::from","value":"fn <R> (d: &'a R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new instance that will display `d` as a hex string when displayed.\n","sig":null,"attributes":[{"value":"/ Create new instance that will display `d` as a hex string when displayed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15459,"byte_end":15536,"line_start":24,"line_end":24,"column_start":2,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16383,"byte_end":16393,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"AsBytesRef","qualname":"::hexdisplay::AsBytesRef","value":"AsBytesRef","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" Simple trait to transform various types to `&[u8]`\n","sig":null,"attributes":[{"value":"/ Simple trait to transform various types to `&[u8]`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16318,"byte_end":16372,"line_start":56,"line_end":56,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16436,"byte_end":16448,"line_start":59,"line_end":59,"column_start":5,"column_end":17},"name":"as_bytes_ref","qualname":"::hexdisplay::AsBytesRef::as_bytes_ref","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Transform `self` into `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Transform `self` into `&[u8]`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16397,"byte_end":16431,"line_start":58,"line_end":58,"column_start":2,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":17180,"byte_end":17192,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"ascii_format","qualname":"::hexdisplay::ascii_format","value":"fn (asciish: &[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Format into ASCII + # + hex, suitable for storage key preimages.\n","sig":null,"attributes":[{"value":"/ Format into ASCII + # + hex, suitable for storage key preimages.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":17104,"byte_end":17172,"line_start":86,"line_end":86,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"crypto","qualname":"::crypto","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":2013},{"krate":0,"index":2017},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":2020},{"krate":0,"index":2041},{"krate":0,"index":2039},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2043},{"krate":0,"index":2081},{"krate":0,"index":2077},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2065},{"krate":0,"index":2063},{"krate":0,"index":2057},{"krate":0,"index":2052},{"krate":0,"index":169},{"krate":0,"index":184},{"krate":0,"index":2082},{"krate":0,"index":2104},{"krate":0,"index":2103},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2095},{"krate":0,"index":187},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2114},{"krate":0,"index":203},{"krate":0,"index":2136},{"krate":0,"index":2191},{"krate":0,"index":2189},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":215},{"krate":0,"index":2192},{"krate":0,"index":2232},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2222},{"krate":0,"index":2216},{"krate":0,"index":2214},{"krate":0,"index":2204},{"krate":0,"index":2199},{"krate":0,"index":2196},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":297},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":338},{"krate":0,"index":343},{"krate":0,"index":2249},{"krate":0,"index":2305},{"krate":0,"index":2302},{"krate":0,"index":2300},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2286},{"krate":0,"index":2284},{"krate":0,"index":2281},{"krate":0,"index":2271},{"krate":0,"index":2266},{"krate":0,"index":2255},{"krate":0,"index":2253},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":2306},{"krate":0,"index":2350},{"krate":0,"index":2349},{"krate":0,"index":2346},{"krate":0,"index":2344},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2330},{"krate":0,"index":2328},{"krate":0,"index":2325},{"krate":0,"index":2315},{"krate":0,"index":2310},{"krate":0,"index":2352},{"krate":0,"index":2393},{"krate":0,"index":2391},{"krate":0,"index":2389},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2372},{"krate":0,"index":2370},{"krate":0,"index":2367},{"krate":0,"index":2361},{"krate":0,"index":2356},{"krate":0,"index":353},{"krate":0,"index":355}],"decl_id":null,"docs":" Cryptographic utilities.\n","sig":null,"attributes":[{"value":"! Cryptographic utilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":18194,"byte_end":18222,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":137},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":18893,"byte_end":18903,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"DEV_PHRASE","qualname":"::crypto::DEV_PHRASE","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The root phrase for our publicly known keys.\n","sig":null,"attributes":[{"value":"/ The root phrase for our publicly known keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":18834,"byte_end":18882,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19071,"byte_end":19082,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"DEV_ADDRESS","qualname":"::crypto::DEV_ADDRESS","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The address of the associated root phrase for our publicly known keys.\n","sig":null,"attributes":[{"value":"/ The address of the associated root phrase for our publicly known keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":18986,"byte_end":19060,"line_start":48,"line_end":48,"column_start":1,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":2010},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19209,"byte_end":19219,"line_start":53,"line_end":53,"column_start":10,"column_end":20},"name":"Infallible","qualname":"::crypto::Infallible","value":"Infallible::{}","parent":null,"children":[],"decl_id":null,"docs":" The infallible type.\n","sig":null,"attributes":[{"value":"/ The infallible type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19144,"byte_end":19168,"line_start":51,"line_end":51,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19405,"byte_end":19420,"line_start":58,"line_end":58,"column_start":11,"column_end":26},"name":"JUNCTION_ID_LEN","qualname":"::crypto::JUNCTION_ID_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the junction identifier. Note that this is also referred to as the\n `CHAIN_CODE_LENGTH` in the context of Schnorrkel.\n","sig":null,"attributes":[{"value":"/ The length of the junction identifier. Note that this is also referred to as the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19224,"byte_end":19308,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ `CHAIN_CODE_LENGTH` in the context of Schnorrkel.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19309,"byte_end":19362,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19363,"byte_end":19394,"line_start":57,"line_end":57,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":140},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19632,"byte_end":19645,"line_start":63,"line_end":63,"column_start":11,"column_end":24},"name":"UncheckedFrom","qualname":"::crypto::UncheckedFrom","value":"UncheckedFrom<T>","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" Similar to `From`, except that the onus is on the part of the caller to ensure\n that data passed in makes sense. Basically, you're not guaranteed to get anything\n sensible out.\n","sig":null,"attributes":[{"value":"/ Similar to `From`, except that the onus is on the part of the caller to ensure","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19435,"byte_end":19517,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ that data passed in makes sense. Basically, you're not guaranteed to get anything","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19518,"byte_end":19603,"line_start":61,"line_end":61,"column_start":1,"column_end":86}},{"value":"/ sensible out.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19604,"byte_end":19621,"line_start":62,"line_end":62,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19840,"byte_end":19854,"line_start":67,"line_end":67,"column_start":5,"column_end":19},"name":"unchecked_from","qualname":"::crypto::UncheckedFrom::unchecked_from","value":"fn (t: T) -> Self","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Convert from an instance of `T` to Self. This is not guaranteed to be\n whatever counts as a valid instance of `T` and it's up to the caller to\n ensure that it makes sense.\n","sig":null,"attributes":[{"value":"/ Convert from an instance of `T` to Self. This is not guaranteed to be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19652,"byte_end":19725,"line_start":64,"line_end":64,"column_start":2,"column_end":75}},{"value":"/ whatever counts as a valid instance of `T` and it's up to the caller to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19727,"byte_end":19802,"line_start":65,"line_end":65,"column_start":2,"column_end":77}},{"value":"/ ensure that it makes sense.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19804,"byte_end":19835,"line_start":66,"line_end":66,"column_start":2,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19923,"byte_end":19936,"line_start":71,"line_end":71,"column_start":11,"column_end":24},"name":"UncheckedInto","qualname":"::crypto::UncheckedInto","value":"UncheckedInto<T>","parent":null,"children":[{"krate":0,"index":145}],"decl_id":null,"docs":" The counterpart to `UncheckedFrom`.\n","sig":null,"attributes":[{"value":"/ The counterpart to `UncheckedFrom`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19873,"byte_end":19912,"line_start":70,"line_end":70,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19988,"byte_end":20002,"line_start":73,"line_end":73,"column_start":5,"column_end":19},"name":"unchecked_into","qualname":"::crypto::UncheckedInto::unchecked_into","value":"fn (self) -> T","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" The counterpart to `unchecked_from`.\n","sig":null,"attributes":[{"value":"/ The counterpart to `unchecked_from`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":19943,"byte_end":19983,"line_start":72,"line_end":72,"column_start":2,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2013},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20242,"byte_end":20251,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"Protected","qualname":"::crypto::Protected","value":"","parent":null,"children":[],"decl_id":null,"docs":" A store for sensitive data.","sig":null,"attributes":[{"value":"/ A store for sensitive data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20136,"byte_end":20167,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20168,"byte_end":20171,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Calls `Zeroize::zeroize` upon `Drop`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20172,"byte_end":20213,"line_start":84,"line_end":84,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2021},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21149,"byte_end":21162,"line_start":132,"line_end":132,"column_start":2,"column_end":15},"name":"InvalidFormat","qualname":"::crypto::SecretStringError::InvalidFormat","value":"SecretStringError::InvalidFormat","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The overall format was invalid (e.g. the seed phrase contained symbols).\n","sig":null,"attributes":[{"value":"/ The overall format was invalid (e.g. the seed phrase contained symbols).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21071,"byte_end":21147,"line_start":131,"line_end":131,"column_start":2,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2023},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21224,"byte_end":21237,"line_start":134,"line_end":134,"column_start":2,"column_end":15},"name":"InvalidPhrase","qualname":"::crypto::SecretStringError::InvalidPhrase","value":"SecretStringError::InvalidPhrase","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The seed phrase provided is not a valid BIP39 phrase.\n","sig":null,"attributes":[{"value":"/ The seed phrase provided is not a valid BIP39 phrase.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21165,"byte_end":21222,"line_start":133,"line_end":133,"column_start":2,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2025},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21280,"byte_end":21295,"line_start":136,"line_end":136,"column_start":2,"column_end":17},"name":"InvalidPassword","qualname":"::crypto::SecretStringError::InvalidPassword","value":"SecretStringError::InvalidPassword","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The supplied password was invalid.\n","sig":null,"attributes":[{"value":"/ The supplied password was invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21240,"byte_end":21278,"line_start":135,"line_end":135,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2027},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21338,"byte_end":21349,"line_start":138,"line_end":138,"column_start":2,"column_end":13},"name":"InvalidSeed","qualname":"::crypto::SecretStringError::InvalidSeed","value":"SecretStringError::InvalidSeed","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The seed is invalid (bad content).\n","sig":null,"attributes":[{"value":"/ The seed is invalid (bad content).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21298,"byte_end":21336,"line_start":137,"line_end":137,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2029},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21389,"byte_end":21406,"line_start":140,"line_end":140,"column_start":2,"column_end":19},"name":"InvalidSeedLength","qualname":"::crypto::SecretStringError::InvalidSeedLength","value":"SecretStringError::InvalidSeedLength","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The seed has an invalid length.\n","sig":null,"attributes":[{"value":"/ The seed has an invalid length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21352,"byte_end":21387,"line_start":139,"line_end":139,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2031},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21506,"byte_end":21517,"line_start":142,"line_end":142,"column_start":2,"column_end":13},"name":"InvalidPath","qualname":"::crypto::SecretStringError::InvalidPath","value":"SecretStringError::InvalidPath","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The derivation path was invalid (e.g. contains soft junctions when they are not supported).\n","sig":null,"attributes":[{"value":"/ The derivation path was invalid (e.g. contains soft junctions when they are not supported).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21409,"byte_end":21504,"line_start":141,"line_end":141,"column_start":2,"column_end":97}}]},{"kind":"Enum","id":{"krate":0,"index":2020},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21050,"byte_end":21067,"line_start":130,"line_end":130,"column_start":10,"column_end":27},"name":"SecretStringError","qualname":"::crypto::SecretStringError","value":"SecretStringError::{InvalidFormat, InvalidPhrase, InvalidPassword, InvalidSeed, InvalidSeedLength, InvalidPath}","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2029},{"krate":0,"index":2031}],"decl_id":null,"docs":" An error with the interpretation of a secret.\n","sig":null,"attributes":[{"value":"/ An error with the interpretation of a secret.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20920,"byte_end":20969,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21009,"byte_end":21040,"line_start":129,"line_end":129,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2044},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21961,"byte_end":21965,"line_start":152,"line_end":152,"column_start":2,"column_end":6},"name":"Soft","qualname":"::crypto::DeriveJunction::Soft","value":"DeriveJunction::Soft([u8; JUNCTION_ID_LEN])","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Soft (vanilla) derivation. Public keys have a correspondent derivation.\n","sig":null,"attributes":[{"value":"/ Soft (vanilla) derivation. Public keys have a correspondent derivation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21884,"byte_end":21959,"line_start":151,"line_end":151,"column_start":2,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2048},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22078,"byte_end":22082,"line_start":154,"line_end":154,"column_start":2,"column_end":6},"name":"Hard","qualname":"::crypto::DeriveJunction::Hard","value":"DeriveJunction::Hard([u8; JUNCTION_ID_LEN])","parent":{"krate":0,"index":2043},"children":[],"decl_id":null,"docs":" Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.\n","sig":null,"attributes":[{"value":"/ Hard (\"hardened\") derivation. Public keys do not have a correspondent derivation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21991,"byte_end":22076,"line_start":153,"line_end":153,"column_start":2,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":2043},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21866,"byte_end":21880,"line_start":150,"line_end":150,"column_start":10,"column_end":24},"name":"DeriveJunction","qualname":"::crypto::DeriveJunction","value":"DeriveJunction::{Soft, Hard}","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2048}],"decl_id":null,"docs":" A since derivation junction description. It is the single parameter used when creating\n a new secret key from an existing secret key and, in the case of `SoftRaw` and `SoftIndex`\n a new public key from an existing public key.\n","sig":null,"attributes":[{"value":"/ A since derivation junction description. It is the single parameter used when creating","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21522,"byte_end":21612,"line_start":145,"line_end":145,"column_start":1,"column_end":91}},{"value":"/ a new secret key from an existing secret key and, in the case of `SoftRaw` and `SoftIndex`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21613,"byte_end":21707,"line_start":146,"line_end":146,"column_start":1,"column_end":95}},{"value":"/ a new public key from an existing public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21708,"byte_end":21757,"line_start":147,"line_end":147,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":21825,"byte_end":21856,"line_start":149,"line_end":149,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22249,"byte_end":22255,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"name":"soften","qualname":"<DeriveJunction>::soften","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return a soft derive junction with the same chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return a soft derive junction with the same chain code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22165,"byte_end":22240,"line_start":159,"line_end":159,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22402,"byte_end":22408,"line_start":163,"line_end":163,"column_start":9,"column_end":15},"name":"harden","qualname":"<DeriveJunction>::harden","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return a hard derive junction with the same chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return a hard derive junction with the same chain code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22318,"byte_end":22393,"line_start":162,"line_end":162,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22611,"byte_end":22615,"line_start":168,"line_end":168,"column_start":9,"column_end":13},"name":"soft","qualname":"<DeriveJunction>::soft","value":"fn <T> (index: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new soft (vanilla) DeriveJunction from a given, encodable, value.","sig":null,"attributes":[{"value":"/ Create a new soft (vanilla) DeriveJunction from a given, encodable, value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22471,"byte_end":22549,"line_start":165,"line_end":165,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22551,"byte_end":22554,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ If you need a hard junction, use `hard()`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22556,"byte_end":22602,"line_start":167,"line_end":167,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23148,"byte_end":23152,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"name":"hard","qualname":"<DeriveJunction>::hard","value":"fn <T> (index: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new hard (hardened) DeriveJunction from a given, encodable, value.","sig":null,"attributes":[{"value":"/ Create a new hard (hardened) DeriveJunction from a given, encodable, value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23007,"byte_end":23086,"line_start":180,"line_end":180,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23088,"byte_end":23091,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ If you need a soft junction, use `soft()`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23093,"byte_end":23139,"line_start":182,"line_end":182,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23269,"byte_end":23281,"line_start":188,"line_end":188,"column_start":9,"column_end":21},"name":"unwrap_inner","qualname":"<DeriveJunction>::unwrap_inner","value":"fn (self) -> [u8; JUNCTION_ID_LEN]","parent":null,"children":[],"decl_id":null,"docs":" Consume self to return the chain code.\n","sig":null,"attributes":[{"value":"/ Consume self to return the chain code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23218,"byte_end":23260,"line_start":187,"line_end":187,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23452,"byte_end":23457,"line_start":195,"line_end":195,"column_start":9,"column_end":14},"name":"inner","qualname":"<DeriveJunction>::inner","value":"fn (&self) -> &[u8; JUNCTION_ID_LEN]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner junction id.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner junction id.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23398,"byte_end":23443,"line_start":194,"line_end":194,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23635,"byte_end":23642,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"name":"is_soft","qualname":"<DeriveJunction>::is_soft","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the junction is soft.\n","sig":null,"attributes":[{"value":"/ Return `true` if the junction is soft.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23584,"byte_end":23626,"line_start":201,"line_end":201,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23787,"byte_end":23794,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"name":"is_hard","qualname":"<DeriveJunction>::is_hard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the junction is hard.\n","sig":null,"attributes":[{"value":"/ Return `true` if the junction is hard.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23736,"byte_end":23778,"line_start":209,"line_end":209,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24496,"byte_end":24505,"line_start":249,"line_end":249,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::crypto::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24477,"byte_end":24494,"line_start":248,"line_end":248,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2085},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24525,"byte_end":24534,"line_start":251,"line_end":251,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::crypto::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24508,"byte_end":24523,"line_start":250,"line_end":250,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24559,"byte_end":24573,"line_start":253,"line_end":253,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::crypto::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24537,"byte_end":24557,"line_start":252,"line_end":252,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2089},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24599,"byte_end":24614,"line_start":255,"line_end":255,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::crypto::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24576,"byte_end":24597,"line_start":254,"line_end":254,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2091},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24638,"byte_end":24651,"line_start":257,"line_end":257,"column_start":2,"column_end":15},"name":"InvalidFormat","qualname":"::crypto::PublicError::InvalidFormat","value":"PublicError::InvalidFormat","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Invalid format.\n","sig":null,"attributes":[{"value":"/ Invalid format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24617,"byte_end":24636,"line_start":256,"line_end":256,"column_start":2,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2093},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24684,"byte_end":24695,"line_start":259,"line_end":259,"column_start":2,"column_end":13},"name":"InvalidPath","qualname":"::crypto::PublicError::InvalidPath","value":"PublicError::InvalidPath","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Invalid derivation path.\n","sig":null,"attributes":[{"value":"/ Invalid derivation path.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24654,"byte_end":24682,"line_start":258,"line_end":258,"column_start":2,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2082},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24462,"byte_end":24473,"line_start":247,"line_end":247,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::crypto::PublicError","value":"PublicError::{BadBase58, BadLength, UnknownVersion, InvalidChecksum, InvalidFormat, InvalidPath}","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24339,"byte_end":24375,"line_start":244,"line_end":244,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24376,"byte_end":24407,"line_start":245,"line_end":245,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":187},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24784,"byte_end":24793,"line_start":264,"line_end":264,"column_start":11,"column_end":20},"name":"Ss58Codec","qualname":"::crypto::Ss58Codec","value":"Ss58Codec: Sized + AsMut<[u8]> + AsRef<[u8]> + Default","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"decl_id":null,"docs":" Key that can be encoded to/from SS58.\n","sig":null,"attributes":[{"value":"/ Key that can be encoded to/from SS58.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24700,"byte_end":24741,"line_start":262,"line_end":262,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24742,"byte_end":24773,"line_start":263,"line_end":263,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24935,"byte_end":24949,"line_start":267,"line_end":267,"column_start":5,"column_end":19},"name":"from_ss58check","qualname":"::crypto::Ss58Codec::from_ss58check","value":"fn (s: &str) -> Result<Self, PublicError>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24842,"byte_end":24905,"line_start":265,"line_end":265,"column_start":2,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24907,"byte_end":24930,"line_start":266,"line_end":266,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":25289,"byte_end":25316,"line_start":277,"line_end":277,"column_start":5,"column_end":32},"name":"from_ss58check_with_version","qualname":"::crypto::Ss58Codec::from_ss58check_with_version","value":"fn (s: &str) -> Result<(Self, Ss58AddressFormat), PublicError>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":25196,"byte_end":25259,"line_start":275,"line_end":275,"column_start":2,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":25261,"byte_end":25284,"line_start":276,"line_end":276,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26074,"byte_end":26085,"line_start":297,"line_end":297,"column_start":5,"column_end":16},"name":"from_string","qualname":"::crypto::Ss58Codec::from_string","value":"fn (s: &str) -> Result<Self, PublicError>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address, optionally with\n a derivation path following.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address, optionally with","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":25931,"byte_end":26010,"line_start":294,"line_end":294,"column_start":2,"column_end":81}},{"value":"/ a derivation path following.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26012,"byte_end":26044,"line_start":295,"line_end":295,"column_start":2,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26046,"byte_end":26069,"line_start":296,"line_end":296,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26407,"byte_end":26432,"line_start":309,"line_end":309,"column_start":5,"column_end":30},"name":"to_ss58check_with_version","qualname":"::crypto::Ss58Codec::to_ss58check_with_version","value":"fn (&self, version: Ss58AddressFormat) -> String","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Return the ss58-check string for this key.\n","sig":null,"attributes":[{"value":"/ Return the ss58-check string for this key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26330,"byte_end":26376,"line_start":306,"line_end":306,"column_start":2,"column_end":48}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26379,"byte_end":26402,"line_start":308,"line_end":308,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26696,"byte_end":26708,"line_start":318,"line_end":318,"column_start":5,"column_end":17},"name":"to_ss58check","qualname":"::crypto::Ss58Codec::to_ss58check","value":"fn (&self) -> String","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Return the ss58-check string for this key.\n","sig":null,"attributes":[{"value":"/ Return the ss58-check string for this key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26620,"byte_end":26666,"line_start":316,"line_end":316,"column_start":2,"column_end":48}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26668,"byte_end":26691,"line_start":317,"line_end":317,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26930,"byte_end":26954,"line_start":322,"line_end":322,"column_start":5,"column_end":29},"name":"from_string_with_version","qualname":"::crypto::Ss58Codec::from_string_with_version","value":"fn (s: &str) -> Result<(Self, Ss58AddressFormat), PublicError>","parent":{"krate":0,"index":187},"children":[],"decl_id":null,"docs":" Some if the string is a properly encoded SS58Check address, optionally with\n a derivation path following.\n","sig":null,"attributes":[{"value":"/ Some if the string is a properly encoded SS58Check address, optionally with","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26787,"byte_end":26866,"line_start":319,"line_end":319,"column_start":2,"column_end":81}},{"value":"/ a derivation path following.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26868,"byte_end":26900,"line_start":320,"line_end":320,"column_start":2,"column_end":34}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":26902,"byte_end":26925,"line_start":321,"line_end":321,"column_start":2,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27096,"byte_end":27102,"line_start":328,"line_end":328,"column_start":11,"column_end":17},"name":"Derive","qualname":"::crypto::Derive","value":"Derive: Sized","parent":null,"children":[{"krate":0,"index":199}],"decl_id":null,"docs":" Derivable key trait.\n","sig":null,"attributes":[{"value":"/ Derivable key trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27061,"byte_end":27085,"line_start":327,"line_end":327,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27282,"byte_end":27288,"line_start":333,"line_end":333,"column_start":5,"column_end":11},"name":"derive","qualname":"::crypto::Derive::derive","value":"fn <Iter> (&self, _path: Iter) -> Option<Self>","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Derive a child key from a series of given junctions.","sig":null,"attributes":[{"value":"/ Derive a child key from a series of given junctions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27113,"byte_end":27169,"line_start":329,"line_end":329,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27171,"byte_end":27174,"line_start":330,"line_end":330,"column_start":2,"column_end":5}},{"value":"/ Will be `None` for public keys if there are any hard junctions in there.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27176,"byte_end":27252,"line_start":331,"line_end":331,"column_start":2,"column_end":78}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27254,"byte_end":27277,"line_start":332,"line_end":332,"column_start":2,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":204},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31995,"byte_end":32019,"line_start":488,"line_end":488,"column_start":8,"column_end":32},"name":"set_default_ss58_version","qualname":"::crypto::set_default_ss58_version","value":"fn (version: Ss58AddressFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the default \"version\" (actually, this is a bit of a misnomer and the version byte is\n typically used not just to encode format/version but also network identity) that is used for\n encoding and decoding SS58 addresses. If an unknown version is provided then it fails.","sig":null,"attributes":[{"value":"/ Set the default \"version\" (actually, this is a bit of a misnomer and the version byte is","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31614,"byte_end":31706,"line_start":482,"line_end":482,"column_start":1,"column_end":93}},{"value":"/ typically used not just to encode format/version but also network identity) that is used for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31707,"byte_end":31803,"line_start":483,"line_end":483,"column_start":1,"column_end":97}},{"value":"/ encoding and decoding SS58 addresses. If an unknown version is provided then it fails.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31804,"byte_end":31894,"line_start":484,"line_end":484,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31895,"byte_end":31898,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ See `ss58_address_format!` for all current known \"versions\".","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31899,"byte_end":31963,"line_start":486,"line_end":486,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":31964,"byte_end":31987,"line_start":487,"line_end":487,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34001,"byte_end":34007,"line_start":549,"line_end":549,"column_start":11,"column_end":17},"name":"Public","qualname":"::crypto::Public","value":"Public: AsRef<[u8]> + AsMut<[u8]> + Default + Derive + CryptoType + PartialEq + Eq +\nClone + Send + Sync","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" Trait suitable for typical cryptographic PKI key public type.\n","sig":null,"attributes":[{"value":"/ Trait suitable for typical cryptographic PKI key public type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":33925,"byte_end":33990,"line_start":548,"line_end":548,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34307,"byte_end":34317,"line_start":556,"line_end":556,"column_start":5,"column_end":15},"name":"from_slice","qualname":"::crypto::Public::from_slice","value":"fn (data: &[u8]) -> Self","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" A new instance from the given slice.","sig":null,"attributes":[{"value":"/ A new instance from the given slice.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34110,"byte_end":34150,"line_start":552,"line_end":552,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34152,"byte_end":34155,"line_start":553,"line_end":553,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34157,"byte_end":34238,"line_start":554,"line_end":554,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34240,"byte_end":34302,"line_start":555,"line_end":555,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34391,"byte_end":34401,"line_start":559,"line_end":559,"column_start":5,"column_end":15},"name":"to_raw_vec","qualname":"::crypto::Public::to_raw_vec","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Return a `Vec<u8>` filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a `Vec<u8>` filled with raw data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34342,"byte_end":34386,"line_start":558,"line_end":558,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34496,"byte_end":34504,"line_start":562,"line_end":562,"column_start":5,"column_end":13},"name":"as_slice","qualname":"::crypto::Public::as_slice","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34451,"byte_end":34491,"line_start":561,"line_end":561,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34595,"byte_end":34616,"line_start":564,"line_end":564,"column_start":5,"column_end":26},"name":"to_public_crypto_pair","qualname":"::crypto::Public::to_public_crypto_pair","value":"fn (&self) -> CryptoTypePublicPair","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Return `CryptoTypePublicPair` from public key.\n","sig":null,"attributes":[{"value":"/ Return `CryptoTypePublicPair` from public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34540,"byte_end":34590,"line_start":563,"line_end":563,"column_start":2,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34828,"byte_end":34839,"line_start":570,"line_end":570,"column_start":12,"column_end":23},"name":"AccountId32","qualname":"::crypto::AccountId32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An opaque 32-byte cryptographic identifier.\n","sig":null,"attributes":[{"value":"/ An opaque 32-byte cryptographic identifier.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34652,"byte_end":34699,"line_start":567,"line_end":567,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2234},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37351,"byte_end":37356,"line_start":686,"line_end":686,"column_start":13,"column_end":18},"name":"Dummy","qualname":"::crypto::dummy::Dummy","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy cryptography. Doesn't do anything.\n","sig":null,"attributes":[{"value":"/ Dummy cryptography. Doesn't do anything.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37246,"byte_end":37290,"line_start":684,"line_end":684,"column_start":2,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39238,"byte_end":39242,"line_start":749,"line_end":749,"column_start":11,"column_end":15},"name":"Pair","qualname":"::crypto::Pair","value":"Pair: CryptoType + Sized + Clone + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":324},{"krate":0,"index":326}],"decl_id":null,"docs":" Trait suitable for typical cryptographic PKI key pair type.","sig":null,"attributes":[{"value":"/ Trait suitable for typical cryptographic PKI key pair type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39043,"byte_end":39106,"line_start":745,"line_end":745,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39107,"byte_end":39110,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ For now it just specifies how to create a key from a phrase and derivation path.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39111,"byte_end":39195,"line_start":747,"line_end":747,"column_start":1,"column_end":85}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39196,"byte_end":39227,"line_start":748,"line_end":748,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":298},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39355,"byte_end":39361,"line_start":751,"line_end":751,"column_start":7,"column_end":13},"name":"Public","qualname":"::crypto::Pair::Public","value":"type Public: Public + Hash;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The type which is used to encode a public key.\n","sig":null,"attributes":[{"value":"/ The type which is used to encode a public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39298,"byte_end":39348,"line_start":750,"line_end":750,"column_start":2,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":299},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39484,"byte_end":39488,"line_start":755,"line_end":755,"column_start":7,"column_end":11},"name":"Seed","qualname":"::crypto::Pair::Seed","value":"type Seed: Default + AsRef<[u8]> + AsMut<[u8]> + Clone;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The type used to (minimally) encode the data required to securely create\n a new key pair.\n","sig":null,"attributes":[{"value":"/ The type used to (minimally) encode the data required to securely create","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39380,"byte_end":39456,"line_start":753,"line_end":753,"column_start":2,"column_end":78}},{"value":"/ a new key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39458,"byte_end":39477,"line_start":754,"line_end":754,"column_start":2,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39685,"byte_end":39694,"line_start":759,"line_end":759,"column_start":7,"column_end":16},"name":"Signature","qualname":"::crypto::Pair::Signature","value":"type Signature: AsRef<[u8]>;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The type used to represent a signature. Can be created from a key pair and a message\n and verified with the message and a public key.\n","sig":null,"attributes":[{"value":"/ The type used to represent a signature. Can be created from a key pair and a message","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39537,"byte_end":39625,"line_start":757,"line_end":757,"column_start":2,"column_end":90}},{"value":"/ and verified with the message and a public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39627,"byte_end":39678,"line_start":758,"line_end":758,"column_start":2,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39764,"byte_end":39775,"line_start":762,"line_end":762,"column_start":7,"column_end":18},"name":"DeriveError","qualname":"::crypto::Pair::DeriveError","value":"type DeriveError;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Error returned from the `derive` function.\n","sig":null,"attributes":[{"value":"/ Error returned from the `derive` function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39711,"byte_end":39757,"line_start":761,"line_end":761,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40036,"byte_end":40044,"line_start":769,"line_end":769,"column_start":5,"column_end":13},"name":"generate","qualname":"::crypto::Pair::generate","value":"fn () -> (Self, Self::Seed)","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Generate new secure (random) key pair.","sig":null,"attributes":[{"value":"/ Generate new secure (random) key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39779,"byte_end":39821,"line_start":764,"line_end":764,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39823,"byte_end":39826,"line_start":765,"line_end":765,"column_start":2,"column_end":5}},{"value":"/ This is only for ephemeral keys really, since you won't have access to the secret key","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39828,"byte_end":39917,"line_start":766,"line_end":766,"column_start":2,"column_end":91}},{"value":"/ for storage. If you want a persistent key pair, use `generate_with_phrase` instead.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39919,"byte_end":40006,"line_start":767,"line_end":767,"column_start":2,"column_end":89}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40008,"byte_end":40031,"line_start":768,"line_end":768,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40488,"byte_end":40508,"line_start":782,"line_end":782,"column_start":5,"column_end":25},"name":"generate_with_phrase","qualname":"::crypto::Pair::generate_with_phrase","value":"fn (password: Option<&str>) -> (Self, String, Self::Seed)","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Generate new secure (random) key pair and provide the recovery phrase.","sig":null,"attributes":[{"value":"/ Generate new secure (random) key pair and provide the recovery phrase.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40184,"byte_end":40258,"line_start":775,"line_end":775,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40260,"byte_end":40263,"line_start":776,"line_end":776,"column_start":2,"column_end":5}},{"value":"/ You can recover the same key later with `from_phrase`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40265,"byte_end":40323,"line_start":777,"line_end":777,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40325,"byte_end":40328,"line_start":778,"line_end":778,"column_start":2,"column_end":5}},{"value":"/ This is generally slower than `generate()`, so prefer that unless you need to persist","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40330,"byte_end":40419,"line_start":779,"line_end":779,"column_start":2,"column_end":91}},{"value":"/ the key from the current session.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40421,"byte_end":40458,"line_start":780,"line_end":780,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40460,"byte_end":40483,"line_start":781,"line_end":781,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40684,"byte_end":40695,"line_start":786,"line_end":786,"column_start":5,"column_end":16},"name":"from_phrase","qualname":"::crypto::Pair::from_phrase","value":"fn (phrase: &str, password: Option<&str>) -> Result<(Self, Self::Seed), SecretStringError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Returns the KeyPair from the English BIP39 seed `phrase`, or `None` if it's invalid.\n","sig":null,"attributes":[{"value":"/ Returns the KeyPair from the English BIP39 seed `phrase`, or `None` if it's invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40566,"byte_end":40654,"line_start":784,"line_end":784,"column_start":2,"column_end":90}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40656,"byte_end":40679,"line_start":785,"line_end":785,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40847,"byte_end":40853,"line_start":789,"line_end":789,"column_start":5,"column_end":11},"name":"derive","qualname":"::crypto::Pair::derive","value":"fn <Iter> (&self, path: Iter, seed: Option<Self::Seed>) -> Result<(Self, Option<Self::Seed>), Self::DeriveError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Derive a child key from a series of given junctions.\n","sig":null,"attributes":[{"value":"/ Derive a child key from a series of given junctions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":40786,"byte_end":40842,"line_start":788,"line_end":788,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41206,"byte_end":41215,"line_start":798,"line_end":798,"column_start":5,"column_end":14},"name":"from_seed","qualname":"::crypto::Pair::from_seed","value":"fn (seed: &Self::Seed) -> Self","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Generate new key pair from the provided `seed`.","sig":null,"attributes":[{"value":"/ Generate new key pair from the provided `seed`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41003,"byte_end":41054,"line_start":794,"line_end":794,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41056,"byte_end":41059,"line_start":795,"line_end":795,"column_start":2,"column_end":5}},{"value":"/ @WARNING: THIS WILL ONLY BE SECURE IF THE `seed` IS SECURE. If it can be guessed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41061,"byte_end":41145,"line_start":796,"line_end":796,"column_start":2,"column_end":86}},{"value":"/ by an attacker then they can also derive your key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41147,"byte_end":41201,"line_start":797,"line_end":797,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41514,"byte_end":41529,"line_start":805,"line_end":805,"column_start":5,"column_end":20},"name":"from_seed_slice","qualname":"::crypto::Pair::from_seed_slice","value":"fn (seed: &[u8]) -> Result<Self, SecretStringError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Make a new key pair from secret seed material. The slice must be the correct size or\n it will return `None`.","sig":null,"attributes":[{"value":"/ Make a new key pair from secret seed material. The slice must be the correct size or","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41246,"byte_end":41334,"line_start":800,"line_end":800,"column_start":2,"column_end":90}},{"value":"/ it will return `None`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41336,"byte_end":41362,"line_start":801,"line_end":801,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41364,"byte_end":41367,"line_start":802,"line_end":802,"column_start":2,"column_end":5}},{"value":"/ @WARNING: THIS WILL ONLY BE SECURE IF THE `seed` IS SECURE. If it can be guessed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41369,"byte_end":41453,"line_start":803,"line_end":803,"column_start":2,"column_end":86}},{"value":"/ by an attacker then they can also derive your key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41455,"byte_end":41509,"line_start":804,"line_end":804,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41605,"byte_end":41609,"line_start":808,"line_end":808,"column_start":5,"column_end":9},"name":"sign","qualname":"::crypto::Pair::sign","value":"fn (&self, message: &[u8]) -> Self::Signature","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Sign a message.\n","sig":null,"attributes":[{"value":"/ Sign a message.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41581,"byte_end":41600,"line_start":807,"line_end":807,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41735,"byte_end":41741,"line_start":811,"line_end":811,"column_start":5,"column_end":11},"name":"verify","qualname":"::crypto::Pair::verify","value":"fn <M> (sig: &Self::Signature, message: M, pubkey: &Self::Public) -> bool","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns true if the signature is good.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns true if the signature is good.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41655,"byte_end":41730,"line_start":810,"line_end":810,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41907,"byte_end":41918,"line_start":814,"line_end":814,"column_start":5,"column_end":16},"name":"verify_weak","qualname":"::crypto::Pair::verify_weak","value":"fn <P, M> (sig: &[u8], message: M, pubkey: P) -> bool","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns true if the signature is good.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns true if the signature is good.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41827,"byte_end":41902,"line_start":813,"line_end":813,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42025,"byte_end":42031,"line_start":817,"line_end":817,"column_start":5,"column_end":11},"name":"public","qualname":"::crypto::Pair::public","value":"fn (&self) -> Self::Public","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Get the public key.\n","sig":null,"attributes":[{"value":"/ Get the public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":41997,"byte_end":42020,"line_start":816,"line_end":816,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43815,"byte_end":43836,"line_start":848,"line_end":848,"column_start":5,"column_end":26},"name":"from_string_with_seed","qualname":"::crypto::Pair::from_string_with_seed","value":"fn (s: &str, password_override: Option<&str>) -> Result<(Self, Option<Self::Seed>), SecretStringError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Interprets the string `s` in order to generate a key Pair. Returns both the pair and an optional seed, in the\n case that the pair can be expressed as a direct derivation from a seed (some cases, such as Sr25519 derivations\n with path components, cannot).","sig":null,"attributes":[{"value":"/ Interprets the string `s` in order to generate a key Pair. Returns both the pair and an optional seed, in the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42058,"byte_end":42171,"line_start":819,"line_end":819,"column_start":2,"column_end":115}},{"value":"/ case that the pair can be expressed as a direct derivation from a seed (some cases, such as Sr25519 derivations","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42173,"byte_end":42288,"line_start":820,"line_end":820,"column_start":2,"column_end":117}},{"value":"/ with path components, cannot).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42290,"byte_end":42324,"line_start":821,"line_end":821,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42326,"byte_end":42329,"line_start":822,"line_end":822,"column_start":2,"column_end":5}},{"value":"/ This takes a helper function to do the key generation from a phrase, password and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42331,"byte_end":42416,"line_start":823,"line_end":823,"column_start":2,"column_end":87}},{"value":"/ junction iterator.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42418,"byte_end":42440,"line_start":824,"line_end":824,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42442,"byte_end":42445,"line_start":825,"line_end":825,"column_start":2,"column_end":5}},{"value":"/ - If `s` is a possibly `0x` prefixed 64-digit hex string, then it will be interpreted","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42447,"byte_end":42536,"line_start":826,"line_end":826,"column_start":2,"column_end":91}},{"value":"/ directly as a `MiniSecretKey` (aka \"seed\" in `subkey`).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42538,"byte_end":42597,"line_start":827,"line_end":827,"column_start":2,"column_end":61}},{"value":"/ - If `s` is a valid BIP-39 key phrase of 12, 15, 18, 21 or 24 words, then the key will","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42599,"byte_end":42689,"line_start":828,"line_end":828,"column_start":2,"column_end":92}},{"value":"/ be derived from it. In this case:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42691,"byte_end":42728,"line_start":829,"line_end":829,"column_start":2,"column_end":39}},{"value":"/   - the phrase may be followed by one or more items delimited by `/` characters.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42730,"byte_end":42814,"line_start":830,"line_end":830,"column_start":2,"column_end":86}},{"value":"/   - the path may be followed by `///`, in which case everything after the `///` is treated","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42816,"byte_end":42910,"line_start":831,"line_end":831,"column_start":2,"column_end":96}},{"value":"/ as a password.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42912,"byte_end":42930,"line_start":832,"line_end":832,"column_start":2,"column_end":20}},{"value":"/ - If `s` begins with a `/` character it is prefixed with the Substrate public `DEV_PHRASE` and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":42932,"byte_end":43030,"line_start":833,"line_end":833,"column_start":2,"column_end":100}},{"value":"/ interpreted as above.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43032,"byte_end":43057,"line_start":834,"line_end":834,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43059,"byte_end":43062,"line_start":835,"line_end":835,"column_start":2,"column_end":5}},{"value":"/ In this case they are interpreted as HDKD junctions; purely numeric items are interpreted as","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43064,"byte_end":43160,"line_start":836,"line_end":836,"column_start":2,"column_end":98}},{"value":"/ integers, non-numeric items as strings. Junctions prefixed with `/` are interpreted as soft","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43162,"byte_end":43257,"line_start":837,"line_end":837,"column_start":2,"column_end":97}},{"value":"/ junctions, and with `//` as hard junctions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43259,"byte_end":43306,"line_start":838,"line_end":838,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43308,"byte_end":43311,"line_start":839,"line_end":839,"column_start":2,"column_end":5}},{"value":"/ There is no correspondence mapping between SURI strings and the keys they represent.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43313,"byte_end":43401,"line_start":840,"line_end":840,"column_start":2,"column_end":90}},{"value":"/ Two different non-identical strings can actually lead to the same secret being derived.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43403,"byte_end":43494,"line_start":841,"line_end":841,"column_start":2,"column_end":93}},{"value":"/ Notably, integer junction indices may be legally prefixed with arbitrary number of zeros.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43496,"byte_end":43589,"line_start":842,"line_end":842,"column_start":2,"column_end":95}},{"value":"/ Similarly an empty password (ending the SURI with `///`) is perfectly valid and will generally","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43591,"byte_end":43689,"line_start":843,"line_end":843,"column_start":2,"column_end":100}},{"value":"/ be equivalent to no password at all.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43691,"byte_end":43731,"line_start":844,"line_end":844,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43733,"byte_end":43736,"line_start":845,"line_end":845,"column_start":2,"column_end":5}},{"value":"/ `None` is returned if no matches are found.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43738,"byte_end":43785,"line_start":846,"line_end":846,"column_start":2,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":43787,"byte_end":43810,"line_start":847,"line_end":847,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45295,"byte_end":45306,"line_start":886,"line_end":886,"column_start":5,"column_end":16},"name":"from_string","qualname":"::crypto::Pair::from_string","value":"fn (s: &str, password_override: Option<&str>) -> Result<Self, SecretStringError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Interprets the string `s` in order to generate a key pair.","sig":null,"attributes":[{"value":"/ Interprets the string `s` in order to generate a key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45100,"byte_end":45162,"line_start":882,"line_end":882,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45164,"byte_end":45167,"line_start":883,"line_end":883,"column_start":2,"column_end":5}},{"value":"/ See [`from_string_with_seed`](Pair::from_string_with_seed) for more extensive documentation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45169,"byte_end":45265,"line_start":884,"line_end":884,"column_start":2,"column_end":98}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45267,"byte_end":45290,"line_start":885,"line_end":885,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45499,"byte_end":45509,"line_start":891,"line_end":891,"column_start":5,"column_end":15},"name":"to_raw_vec","qualname":"::crypto::Pair::to_raw_vec","value":"fn (&self) -> Vec<u8>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Return a vec filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a vec filled with raw data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45456,"byte_end":45494,"line_start":890,"line_end":890,"column_start":2,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":327},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45578,"byte_end":45589,"line_start":895,"line_end":895,"column_start":11,"column_end":22},"name":"IsWrappedBy","qualname":"::crypto::IsWrappedBy","value":"IsWrappedBy<Outer>: From<Outer> + Into<Outer>","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330}],"decl_id":null,"docs":" One type is wrapped by another.\n","sig":null,"attributes":[{"value":"/ One type is wrapped by another.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45532,"byte_end":45567,"line_start":894,"line_end":894,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45680,"byte_end":45688,"line_start":897,"line_end":897,"column_start":5,"column_end":13},"name":"from_ref","qualname":"::crypto::IsWrappedBy::from_ref","value":"fn (outer: &Outer) -> &Self","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Get a reference to the inner from the outer.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner from the outer.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45627,"byte_end":45675,"line_start":896,"line_end":896,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45776,"byte_end":45784,"line_start":899,"line_end":899,"column_start":5,"column_end":13},"name":"from_mut","qualname":"::crypto::IsWrappedBy::from_mut","value":"fn (outer: &mut Outer) -> &mut Self","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner from the outer.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner from the outer.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45715,"byte_end":45771,"line_start":898,"line_end":898,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":331},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45925,"byte_end":45930,"line_start":903,"line_end":903,"column_start":11,"column_end":16},"name":"Wraps","qualname":"::crypto::Wraps","value":"Wraps: Sized","parent":null,"children":[{"krate":0,"index":332}],"decl_id":null,"docs":" Opposite of `IsWrappedBy` - denotes a type which is a simple wrapper around another type.\n","sig":null,"attributes":[{"value":"/ Opposite of `IsWrappedBy` - denotes a type which is a simple wrapper around another type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45821,"byte_end":45914,"line_start":902,"line_end":902,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":332},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45982,"byte_end":45987,"line_start":905,"line_end":905,"column_start":7,"column_end":12},"name":"Inner","qualname":"::crypto::Wraps::Inner","value":"type Inner: IsWrappedBy<Self>;","parent":{"krate":0,"index":331},"children":[],"decl_id":null,"docs":" The inner type it is wrapping.\n","sig":null,"attributes":[{"value":"/ The inner type it is wrapping.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45941,"byte_end":45975,"line_start":904,"line_end":904,"column_start":2,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46662,"byte_end":46672,"line_start":930,"line_end":930,"column_start":11,"column_end":21},"name":"CryptoType","qualname":"::crypto::CryptoType","value":"CryptoType","parent":null,"children":[{"krate":0,"index":344}],"decl_id":null,"docs":" Type which has a particular kind of crypto associated with it.\n","sig":null,"attributes":[{"value":"/ Type which has a particular kind of crypto associated with it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46585,"byte_end":46651,"line_start":929,"line_end":929,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":344},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46753,"byte_end":46757,"line_start":933,"line_end":933,"column_start":7,"column_end":11},"name":"Pair","qualname":"::crypto::CryptoType::Pair","value":"type Pair: Pair;","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":" The pair key type of this crypto.\n","sig":null,"attributes":[{"value":"/ The pair key type of this crypto.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46676,"byte_end":46713,"line_start":931,"line_end":931,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46715,"byte_end":46746,"line_start":932,"line_end":932,"column_start":2,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2249},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47222,"byte_end":47231,"line_start":947,"line_end":947,"column_start":12,"column_end":21},"name":"KeyTypeId","qualname":"::crypto::KeyTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a type of cryptographic key.","sig":null,"attributes":[{"value":"/ An identifier for a type of cryptographic key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46768,"byte_end":46818,"line_start":936,"line_end":936,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46819,"byte_end":46822,"line_start":937,"line_end":937,"column_start":1,"column_end":4}},{"value":"/ To avoid clashes with other modules when distributing your module publicly, register your","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46823,"byte_end":46916,"line_start":938,"line_end":938,"column_start":1,"column_end":94}},{"value":"/ `KeyTypeId` on the list here by making a PR.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46917,"byte_end":46965,"line_start":939,"line_end":939,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46966,"byte_end":46969,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ Values whose first character is `_` are reserved for private use and won't conflict with any","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46970,"byte_end":47066,"line_start":941,"line_end":941,"column_start":1,"column_end":97}},{"value":"/ public modules.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47067,"byte_end":47086,"line_start":942,"line_end":942,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2306},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47874,"byte_end":47886,"line_start":976,"line_end":976,"column_start":12,"column_end":24},"name":"CryptoTypeId","qualname":"::crypto::CryptoTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier for a specific cryptographic algorithm used by a key pair\n","sig":null,"attributes":[{"value":"/ An identifier for a specific cryptographic algorithm used by a key pair","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47694,"byte_end":47769,"line_start":974,"line_end":974,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2352},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48048,"byte_end":48068,"line_start":980,"line_end":980,"column_start":12,"column_end":32},"name":"CryptoTypePublicPair","qualname":"::crypto::CryptoTypePublicPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type alias of CryptoTypeId & a public key\n","sig":null,"attributes":[{"value":"/ A type alias of CryptoTypeId & a public key","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47902,"byte_end":47949,"line_start":978,"line_end":978,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":355},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48729,"byte_end":48738,"line_start":1000,"line_end":1000,"column_start":9,"column_end":18},"name":"key_types","qualname":"::crypto::key_types","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" Known key types; this also functions as a global registry of key types for projects wishing to\n avoid collisions with each other.","sig":null,"attributes":[{"value":"/ Known key types; this also functions as a global registry of key types for projects wishing to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48443,"byte_end":48541,"line_start":995,"line_end":995,"column_start":1,"column_end":99}},{"value":"/ avoid collisions with each other.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48542,"byte_end":48579,"line_start":996,"line_end":996,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48580,"byte_end":48583,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ It's not universal in the sense that *all* key types need to be mentioned here, it's just a","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48584,"byte_end":48679,"line_start":998,"line_end":998,"column_start":1,"column_end":96}},{"value":"/ handy place to put common key types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48680,"byte_end":48720,"line_start":999,"line_end":999,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48839,"byte_end":48843,"line_start":1004,"line_end":1004,"column_start":12,"column_end":16},"name":"BABE","qualname":"::crypto::key_types::BABE","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Babe module, built-in. Identified as `babe`.\n","sig":null,"attributes":[{"value":"/ Key type for Babe module, built-in. Identified as `babe`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48766,"byte_end":48827,"line_start":1003,"line_end":1003,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":358},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48955,"byte_end":48962,"line_start":1006,"line_end":1006,"column_start":12,"column_end":19},"name":"GRANDPA","qualname":"::crypto::key_types::GRANDPA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Grandpa module, built-in. Identified as `gran`.\n","sig":null,"attributes":[{"value":"/ Key type for Grandpa module, built-in. Identified as `gran`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48879,"byte_end":48943,"line_start":1005,"line_end":1005,"column_start":2,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":359},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49105,"byte_end":49112,"line_start":1008,"line_end":1008,"column_start":12,"column_end":19},"name":"ACCOUNT","qualname":"::crypto::key_types::ACCOUNT","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for controlling an account in a Substrate runtime, built-in. Identified as `acco`.\n","sig":null,"attributes":[{"value":"/ Key type for controlling an account in a Substrate runtime, built-in. Identified as `acco`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48998,"byte_end":49093,"line_start":1007,"line_end":1007,"column_start":2,"column_end":97}}]},{"kind":"Const","id":{"krate":0,"index":360},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49221,"byte_end":49225,"line_start":1010,"line_end":1010,"column_start":12,"column_end":16},"name":"AURA","qualname":"::crypto::key_types::AURA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for Aura module, built-in. Identified as `aura`.\n","sig":null,"attributes":[{"value":"/ Key type for Aura module, built-in. Identified as `aura`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49148,"byte_end":49209,"line_start":1009,"line_end":1009,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":361},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49338,"byte_end":49347,"line_start":1012,"line_end":1012,"column_start":12,"column_end":21},"name":"IM_ONLINE","qualname":"::crypto::key_types::IM_ONLINE","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for ImOnline module, built-in. Identified as `imon`.\n","sig":null,"attributes":[{"value":"/ Key type for ImOnline module, built-in. Identified as `imon`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49261,"byte_end":49326,"line_start":1011,"line_end":1011,"column_start":2,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":362},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49470,"byte_end":49489,"line_start":1014,"line_end":1014,"column_start":12,"column_end":31},"name":"AUTHORITY_DISCOVERY","qualname":"::crypto::key_types::AUTHORITY_DISCOVERY","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for AuthorityDiscovery module, built-in. Identified as `audi`.\n","sig":null,"attributes":[{"value":"/ Key type for AuthorityDiscovery module, built-in. Identified as `audi`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49383,"byte_end":49458,"line_start":1013,"line_end":1013,"column_start":2,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":363},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49594,"byte_end":49601,"line_start":1016,"line_end":1016,"column_start":12,"column_end":19},"name":"STAKING","qualname":"::crypto::key_types::STAKING","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for staking, built-in. Identified as `stak`.\n","sig":null,"attributes":[{"value":"/ Key type for staking, built-in. Identified as `stak`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49525,"byte_end":49582,"line_start":1015,"line_end":1015,"column_start":2,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":364},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49721,"byte_end":49730,"line_start":1018,"line_end":1018,"column_start":12,"column_end":21},"name":"REPORTING","qualname":"::crypto::key_types::REPORTING","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for equivocation reporting, built-in. Identified as `fish`.\n","sig":null,"attributes":[{"value":"/ Key type for equivocation reporting, built-in. Identified as `fish`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49637,"byte_end":49709,"line_start":1017,"line_end":1017,"column_start":2,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":365},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49813,"byte_end":49818,"line_start":1020,"line_end":1020,"column_start":12,"column_end":17},"name":"DUMMY","qualname":"::crypto::key_types::DUMMY","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" A key type ID useful for tests.\n","sig":null,"attributes":[{"value":"/ A key type ID useful for tests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":49766,"byte_end":49801,"line_start":1019,"line_end":1019,"column_start":2,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":366},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"u32_trait","qualname":"::u32_trait","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803}],"decl_id":null,"docs":" An u32 trait with \"values\" as impl'd types.\n","sig":null,"attributes":[{"value":"! An u32 trait with \"values\" as impl'd types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56040,"byte_end":56087,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56177,"byte_end":56182,"line_start":21,"line_end":21,"column_start":11,"column_end":16},"name":"Value","qualname":"::u32_trait::Value","value":"Value","parent":null,"children":[{"krate":0,"index":368}],"decl_id":null,"docs":" A u32 value, wrapped in a trait because we don't yet have const generics.\n","sig":null,"attributes":[{"value":"/ A u32 value, wrapped in a trait because we don't yet have const generics.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56089,"byte_end":56166,"line_start":20,"line_end":20,"column_start":1,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":368},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56248,"byte_end":56253,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"VALUE","qualname":"::u32_trait::Value::VALUE","value":"u32","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" The actual value represented by the impl'ing type.\n","sig":null,"attributes":[{"value":"/ The actual value represented by the impl'ing type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56186,"byte_end":56240,"line_start":22,"line_end":22,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56331,"byte_end":56333,"line_start":27,"line_end":27,"column_start":12,"column_end":14},"name":"_0","qualname":"::u32_trait::_0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 0 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 0 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56263,"byte_end":56319,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56447,"byte_end":56449,"line_start":29,"line_end":29,"column_start":12,"column_end":14},"name":"_1","qualname":"::u32_trait::_1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 1 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 1 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56379,"byte_end":56435,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56563,"byte_end":56565,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"_2","qualname":"::u32_trait::_2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 2 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 2 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56495,"byte_end":56551,"line_start":30,"line_end":30,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56679,"byte_end":56681,"line_start":33,"line_end":33,"column_start":12,"column_end":14},"name":"_3","qualname":"::u32_trait::_3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 3 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 3 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56611,"byte_end":56667,"line_start":32,"line_end":32,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56795,"byte_end":56797,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"_4","qualname":"::u32_trait::_4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 4 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 4 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56727,"byte_end":56783,"line_start":34,"line_end":34,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56911,"byte_end":56913,"line_start":37,"line_end":37,"column_start":12,"column_end":14},"name":"_5","qualname":"::u32_trait::_5","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 5 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 5 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56843,"byte_end":56899,"line_start":36,"line_end":36,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57027,"byte_end":57029,"line_start":39,"line_end":39,"column_start":12,"column_end":14},"name":"_6","qualname":"::u32_trait::_6","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 6 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 6 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56959,"byte_end":57015,"line_start":38,"line_end":38,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57143,"byte_end":57145,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"_7","qualname":"::u32_trait::_7","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 7 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 7 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57075,"byte_end":57131,"line_start":40,"line_end":40,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57259,"byte_end":57261,"line_start":43,"line_end":43,"column_start":12,"column_end":14},"name":"_8","qualname":"::u32_trait::_8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 8 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 8 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57191,"byte_end":57247,"line_start":42,"line_end":42,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57375,"byte_end":57377,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"_9","qualname":"::u32_trait::_9","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 9 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 9 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57307,"byte_end":57363,"line_start":44,"line_end":44,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57492,"byte_end":57495,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"_10","qualname":"::u32_trait::_10","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 10 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 10 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57423,"byte_end":57480,"line_start":46,"line_end":46,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":413},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57612,"byte_end":57615,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"_11","qualname":"::u32_trait::_11","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 11 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 11 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57543,"byte_end":57600,"line_start":48,"line_end":48,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":417},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57732,"byte_end":57735,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"_12","qualname":"::u32_trait::_12","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 12 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 12 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57663,"byte_end":57720,"line_start":50,"line_end":50,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":421},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57852,"byte_end":57855,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"_13","qualname":"::u32_trait::_13","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 13 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 13 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57783,"byte_end":57840,"line_start":52,"line_end":52,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57972,"byte_end":57975,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"_14","qualname":"::u32_trait::_14","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 14 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 14 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57903,"byte_end":57960,"line_start":54,"line_end":54,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":429},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58092,"byte_end":58095,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"_15","qualname":"::u32_trait::_15","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 15 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 15 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58023,"byte_end":58080,"line_start":56,"line_end":56,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":433},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58212,"byte_end":58215,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"_16","qualname":"::u32_trait::_16","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 16 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 16 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58143,"byte_end":58200,"line_start":58,"line_end":58,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58332,"byte_end":58335,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"_17","qualname":"::u32_trait::_17","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 17 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 17 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58263,"byte_end":58320,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58452,"byte_end":58455,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"_18","qualname":"::u32_trait::_18","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 18 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 18 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58383,"byte_end":58440,"line_start":62,"line_end":62,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58572,"byte_end":58575,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"_19","qualname":"::u32_trait::_19","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 19 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 19 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58503,"byte_end":58560,"line_start":64,"line_end":64,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":449},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58692,"byte_end":58695,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"_20","qualname":"::u32_trait::_20","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 20 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 20 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58623,"byte_end":58680,"line_start":66,"line_end":66,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58812,"byte_end":58815,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"_21","qualname":"::u32_trait::_21","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 21 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 21 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58743,"byte_end":58800,"line_start":68,"line_end":68,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":457},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58932,"byte_end":58935,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"_22","qualname":"::u32_trait::_22","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 22 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 22 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58863,"byte_end":58920,"line_start":70,"line_end":70,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":461},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59052,"byte_end":59055,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"_23","qualname":"::u32_trait::_23","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 23 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 23 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58983,"byte_end":59040,"line_start":72,"line_end":72,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":465},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59172,"byte_end":59175,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"_24","qualname":"::u32_trait::_24","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 24 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 24 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59103,"byte_end":59160,"line_start":74,"line_end":74,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59292,"byte_end":59295,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"_25","qualname":"::u32_trait::_25","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 25 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 25 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59223,"byte_end":59280,"line_start":76,"line_end":76,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59412,"byte_end":59415,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"_26","qualname":"::u32_trait::_26","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 26 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 26 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59343,"byte_end":59400,"line_start":78,"line_end":78,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":477},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59532,"byte_end":59535,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"_27","qualname":"::u32_trait::_27","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 27 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 27 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59463,"byte_end":59520,"line_start":80,"line_end":80,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59652,"byte_end":59655,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"_28","qualname":"::u32_trait::_28","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 28 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 28 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59583,"byte_end":59640,"line_start":82,"line_end":82,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59772,"byte_end":59775,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"_29","qualname":"::u32_trait::_29","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 29 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 29 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59703,"byte_end":59760,"line_start":84,"line_end":84,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59892,"byte_end":59895,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"_30","qualname":"::u32_trait::_30","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 30 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 30 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59823,"byte_end":59880,"line_start":86,"line_end":86,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60012,"byte_end":60015,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"_31","qualname":"::u32_trait::_31","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 31 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 31 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59943,"byte_end":60000,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60132,"byte_end":60135,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"_32","qualname":"::u32_trait::_32","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 32 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 32 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60063,"byte_end":60120,"line_start":90,"line_end":90,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60252,"byte_end":60255,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"_33","qualname":"::u32_trait::_33","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 33 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 33 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60183,"byte_end":60240,"line_start":92,"line_end":92,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60372,"byte_end":60375,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"_34","qualname":"::u32_trait::_34","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 34 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 34 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60303,"byte_end":60360,"line_start":94,"line_end":94,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60492,"byte_end":60495,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"_35","qualname":"::u32_trait::_35","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 35 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 35 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60423,"byte_end":60480,"line_start":96,"line_end":96,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60612,"byte_end":60615,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"_36","qualname":"::u32_trait::_36","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 36 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 36 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60543,"byte_end":60600,"line_start":98,"line_end":98,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60732,"byte_end":60735,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"_37","qualname":"::u32_trait::_37","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 37 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 37 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60663,"byte_end":60720,"line_start":100,"line_end":100,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60852,"byte_end":60855,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"_38","qualname":"::u32_trait::_38","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 38 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 38 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60783,"byte_end":60840,"line_start":102,"line_end":102,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60972,"byte_end":60975,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"_39","qualname":"::u32_trait::_39","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 39 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 39 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60903,"byte_end":60960,"line_start":104,"line_end":104,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61092,"byte_end":61095,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"_40","qualname":"::u32_trait::_40","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 40 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 40 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61023,"byte_end":61080,"line_start":106,"line_end":106,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61212,"byte_end":61215,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"_41","qualname":"::u32_trait::_41","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 41 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 41 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61143,"byte_end":61200,"line_start":108,"line_end":108,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":537},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61332,"byte_end":61335,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"_42","qualname":"::u32_trait::_42","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 42 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 42 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61263,"byte_end":61320,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61452,"byte_end":61455,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"_43","qualname":"::u32_trait::_43","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 43 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 43 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61383,"byte_end":61440,"line_start":112,"line_end":112,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":545},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61572,"byte_end":61575,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"_44","qualname":"::u32_trait::_44","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 44 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 44 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61503,"byte_end":61560,"line_start":114,"line_end":114,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61692,"byte_end":61695,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"_45","qualname":"::u32_trait::_45","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 45 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 45 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61623,"byte_end":61680,"line_start":116,"line_end":116,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61812,"byte_end":61815,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"_46","qualname":"::u32_trait::_46","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 46 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 46 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61743,"byte_end":61800,"line_start":118,"line_end":118,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":557},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61932,"byte_end":61935,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"_47","qualname":"::u32_trait::_47","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 47 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 47 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61863,"byte_end":61920,"line_start":120,"line_end":120,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":561},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62052,"byte_end":62055,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"_48","qualname":"::u32_trait::_48","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 48 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 48 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61983,"byte_end":62040,"line_start":122,"line_end":122,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62172,"byte_end":62175,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"_49","qualname":"::u32_trait::_49","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 49 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 49 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62103,"byte_end":62160,"line_start":124,"line_end":124,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62292,"byte_end":62295,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"_50","qualname":"::u32_trait::_50","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 50 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 50 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62223,"byte_end":62280,"line_start":126,"line_end":126,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":573},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62412,"byte_end":62415,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"_51","qualname":"::u32_trait::_51","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 51 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 51 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62343,"byte_end":62400,"line_start":128,"line_end":128,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62532,"byte_end":62535,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"_52","qualname":"::u32_trait::_52","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 52 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 52 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62463,"byte_end":62520,"line_start":130,"line_end":130,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62652,"byte_end":62655,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"_53","qualname":"::u32_trait::_53","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 53 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 53 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62583,"byte_end":62640,"line_start":132,"line_end":132,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62772,"byte_end":62775,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"_54","qualname":"::u32_trait::_54","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 54 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 54 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62703,"byte_end":62760,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":589},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62892,"byte_end":62895,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"_55","qualname":"::u32_trait::_55","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 55 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 55 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62823,"byte_end":62880,"line_start":136,"line_end":136,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":593},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63012,"byte_end":63015,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"_56","qualname":"::u32_trait::_56","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 56 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 56 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62943,"byte_end":63000,"line_start":138,"line_end":138,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63132,"byte_end":63135,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"_57","qualname":"::u32_trait::_57","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 57 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 57 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63063,"byte_end":63120,"line_start":140,"line_end":140,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":601},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63252,"byte_end":63255,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"_58","qualname":"::u32_trait::_58","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 58 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 58 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63183,"byte_end":63240,"line_start":142,"line_end":142,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63372,"byte_end":63375,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"_59","qualname":"::u32_trait::_59","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 59 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 59 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63303,"byte_end":63360,"line_start":144,"line_end":144,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":609},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63492,"byte_end":63495,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"_60","qualname":"::u32_trait::_60","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 60 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 60 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63423,"byte_end":63480,"line_start":146,"line_end":146,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63612,"byte_end":63615,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"_61","qualname":"::u32_trait::_61","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 61 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 61 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63543,"byte_end":63600,"line_start":148,"line_end":148,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":617},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63732,"byte_end":63735,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"_62","qualname":"::u32_trait::_62","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 62 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 62 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63663,"byte_end":63720,"line_start":150,"line_end":150,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63852,"byte_end":63855,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"_63","qualname":"::u32_trait::_63","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 63 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 63 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63783,"byte_end":63840,"line_start":152,"line_end":152,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63972,"byte_end":63975,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"_64","qualname":"::u32_trait::_64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 64 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 64 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63903,"byte_end":63960,"line_start":154,"line_end":154,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64092,"byte_end":64095,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"_65","qualname":"::u32_trait::_65","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 65 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 65 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64023,"byte_end":64080,"line_start":156,"line_end":156,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64212,"byte_end":64215,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"_66","qualname":"::u32_trait::_66","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 66 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 66 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64143,"byte_end":64200,"line_start":158,"line_end":158,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64332,"byte_end":64335,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"_67","qualname":"::u32_trait::_67","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 67 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 67 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64263,"byte_end":64320,"line_start":160,"line_end":160,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64452,"byte_end":64455,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"_68","qualname":"::u32_trait::_68","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 68 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 68 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64383,"byte_end":64440,"line_start":162,"line_end":162,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64572,"byte_end":64575,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"_69","qualname":"::u32_trait::_69","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 69 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 69 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64503,"byte_end":64560,"line_start":164,"line_end":164,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64692,"byte_end":64695,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"_70","qualname":"::u32_trait::_70","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 70 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 70 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64623,"byte_end":64680,"line_start":166,"line_end":166,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64812,"byte_end":64815,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"_71","qualname":"::u32_trait::_71","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 71 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 71 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64743,"byte_end":64800,"line_start":168,"line_end":168,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":657},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64932,"byte_end":64935,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"_72","qualname":"::u32_trait::_72","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 72 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 72 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64863,"byte_end":64920,"line_start":170,"line_end":170,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65052,"byte_end":65055,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"_73","qualname":"::u32_trait::_73","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 73 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 73 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64983,"byte_end":65040,"line_start":172,"line_end":172,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65172,"byte_end":65175,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"_74","qualname":"::u32_trait::_74","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 74 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 74 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65103,"byte_end":65160,"line_start":174,"line_end":174,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":669},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65292,"byte_end":65295,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"_75","qualname":"::u32_trait::_75","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 75 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 75 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65223,"byte_end":65280,"line_start":176,"line_end":176,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":673},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65412,"byte_end":65415,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"_76","qualname":"::u32_trait::_76","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 76 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 76 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65343,"byte_end":65400,"line_start":178,"line_end":178,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65532,"byte_end":65535,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"_77","qualname":"::u32_trait::_77","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 77 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 77 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65463,"byte_end":65520,"line_start":180,"line_end":180,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65652,"byte_end":65655,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"_78","qualname":"::u32_trait::_78","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 78 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 78 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65583,"byte_end":65640,"line_start":182,"line_end":182,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":685},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65772,"byte_end":65775,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"_79","qualname":"::u32_trait::_79","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 79 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 79 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65703,"byte_end":65760,"line_start":184,"line_end":184,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":689},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65892,"byte_end":65895,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"_80","qualname":"::u32_trait::_80","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 80 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 80 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65823,"byte_end":65880,"line_start":186,"line_end":186,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66012,"byte_end":66015,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"_81","qualname":"::u32_trait::_81","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 81 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 81 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65943,"byte_end":66000,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66132,"byte_end":66135,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"_82","qualname":"::u32_trait::_82","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 82 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 82 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66063,"byte_end":66120,"line_start":190,"line_end":190,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":701},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66252,"byte_end":66255,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"_83","qualname":"::u32_trait::_83","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 83 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 83 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66183,"byte_end":66240,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66372,"byte_end":66375,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"_84","qualname":"::u32_trait::_84","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 84 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 84 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66303,"byte_end":66360,"line_start":194,"line_end":194,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66492,"byte_end":66495,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"_85","qualname":"::u32_trait::_85","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 85 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 85 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66423,"byte_end":66480,"line_start":196,"line_end":196,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":713},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66612,"byte_end":66615,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"_86","qualname":"::u32_trait::_86","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 86 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 86 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66543,"byte_end":66600,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":717},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66732,"byte_end":66735,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"_87","qualname":"::u32_trait::_87","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 87 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 87 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66663,"byte_end":66720,"line_start":200,"line_end":200,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66852,"byte_end":66855,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"_88","qualname":"::u32_trait::_88","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 88 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 88 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66783,"byte_end":66840,"line_start":202,"line_end":202,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66972,"byte_end":66975,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"_89","qualname":"::u32_trait::_89","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 89 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 89 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66903,"byte_end":66960,"line_start":204,"line_end":204,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":729},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67092,"byte_end":67095,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"_90","qualname":"::u32_trait::_90","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 90 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 90 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67023,"byte_end":67080,"line_start":206,"line_end":206,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67212,"byte_end":67215,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"_91","qualname":"::u32_trait::_91","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 91 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 91 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67143,"byte_end":67200,"line_start":208,"line_end":208,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":737},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67332,"byte_end":67335,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"_92","qualname":"::u32_trait::_92","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 92 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 92 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67263,"byte_end":67320,"line_start":210,"line_end":210,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67452,"byte_end":67455,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"_93","qualname":"::u32_trait::_93","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 93 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 93 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67383,"byte_end":67440,"line_start":212,"line_end":212,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67572,"byte_end":67575,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"_94","qualname":"::u32_trait::_94","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 94 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 94 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67503,"byte_end":67560,"line_start":214,"line_end":214,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":749},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67692,"byte_end":67695,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"_95","qualname":"::u32_trait::_95","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 95 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 95 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67623,"byte_end":67680,"line_start":216,"line_end":216,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":753},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67812,"byte_end":67815,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"_96","qualname":"::u32_trait::_96","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 96 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 96 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67743,"byte_end":67800,"line_start":218,"line_end":218,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":757},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67932,"byte_end":67935,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"_97","qualname":"::u32_trait::_97","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 97 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 97 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67863,"byte_end":67920,"line_start":220,"line_end":220,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":761},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68052,"byte_end":68055,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"_98","qualname":"::u32_trait::_98","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 98 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 98 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67983,"byte_end":68040,"line_start":222,"line_end":222,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68172,"byte_end":68175,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"_99","qualname":"::u32_trait::_99","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 99 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 99 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68103,"byte_end":68160,"line_start":224,"line_end":224,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":769},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68293,"byte_end":68297,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"_100","qualname":"::u32_trait::_100","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 100 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 100 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68223,"byte_end":68281,"line_start":226,"line_end":226,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68417,"byte_end":68421,"line_start":229,"line_end":229,"column_start":12,"column_end":16},"name":"_112","qualname":"::u32_trait::_112","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 112 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 112 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68347,"byte_end":68405,"line_start":228,"line_end":228,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68541,"byte_end":68545,"line_start":231,"line_end":231,"column_start":12,"column_end":16},"name":"_128","qualname":"::u32_trait::_128","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 128 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 128 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68471,"byte_end":68529,"line_start":230,"line_end":230,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":781},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68665,"byte_end":68669,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"_160","qualname":"::u32_trait::_160","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 160 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 160 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68595,"byte_end":68653,"line_start":232,"line_end":232,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":785},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68789,"byte_end":68793,"line_start":235,"line_end":235,"column_start":12,"column_end":16},"name":"_192","qualname":"::u32_trait::_192","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 192 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 192 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68719,"byte_end":68777,"line_start":234,"line_end":234,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68913,"byte_end":68917,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"_224","qualname":"::u32_trait::_224","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 224 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 224 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68843,"byte_end":68901,"line_start":236,"line_end":236,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69037,"byte_end":69041,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"_256","qualname":"::u32_trait::_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 256 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 256 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68967,"byte_end":69025,"line_start":238,"line_end":238,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69161,"byte_end":69165,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"_384","qualname":"::u32_trait::_384","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 384 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 384 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69091,"byte_end":69149,"line_start":240,"line_end":240,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69285,"byte_end":69289,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"_512","qualname":"::u32_trait::_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type representing the value 512 for the `Value` trait.\n","sig":null,"attributes":[{"value":"/ Type representing the value 512 for the `Value` trait.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69215,"byte_end":69273,"line_start":242,"line_end":242,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":805},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ed25519","qualname":"::ed25519","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":820},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":831},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":2395},{"krate":0,"index":2447},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2433},{"krate":0,"index":2431},{"krate":0,"index":2428},{"krate":0,"index":2427},{"krate":0,"index":2417},{"krate":0,"index":2412},{"krate":0,"index":2410},{"krate":0,"index":2399},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":877},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":2450},{"krate":0,"index":2470},{"krate":0,"index":2465},{"krate":0,"index":2454},{"krate":0,"index":891},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":2480},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2496},{"krate":0,"index":2494},{"krate":0,"index":2488},{"krate":0,"index":2483},{"krate":0,"index":2505},{"krate":0,"index":2523},{"krate":0,"index":2522},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2514},{"krate":0,"index":938},{"krate":0,"index":944},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":984},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993}],"decl_id":null,"docs":" Simple Ed25519 API.\n","sig":null,"attributes":[{"value":"! Simple Ed25519 API.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":70049,"byte_end":70072,"line_start":19,"line_end":19,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":840},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":70976,"byte_end":70985,"line_start":47,"line_end":47,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::ed25519::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against ed25519 keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against ed25519 keys","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":70901,"byte_end":70965,"line_start":46,"line_end":46,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2395},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71483,"byte_end":71489,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"Public","qualname":"::ed25519::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" A public key.\n","sig":null,"attributes":[{"value":"/ A public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71310,"byte_end":71327,"line_start":55,"line_end":55,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":843},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71565,"byte_end":71569,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"Pair","qualname":"::ed25519::Pair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A key pair.\n","sig":null,"attributes":[{"value":"/ A key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71506,"byte_end":71521,"line_start":60,"line_end":60,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71522,"byte_end":71553,"line_start":61,"line_end":61,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2450},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74254,"byte_end":74263,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ed25519::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A signature (a 512-bit value).\n","sig":null,"attributes":[{"value":"/ A signature (a 512-bit value).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74169,"byte_end":74203,"line_start":190,"line_end":190,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76654,"byte_end":76662,"line_start":301,"line_end":301,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"fn (data: [u8; 64]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 64-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 64-byte `data`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76442,"byte_end":76491,"line_start":297,"line_end":297,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76493,"byte_end":76496,"line_start":298,"line_end":298,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76498,"byte_end":76578,"line_start":299,"line_end":299,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76580,"byte_end":76645,"line_start":300,"line_end":300,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76949,"byte_end":76959,"line_start":309,"line_end":309,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 64 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 64 bytes long.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76717,"byte_end":76786,"line_start":305,"line_end":305,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76788,"byte_end":76791,"line_start":306,"line_end":306,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76793,"byte_end":76873,"line_start":307,"line_end":307,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76875,"byte_end":76940,"line_start":308,"line_end":308,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77250,"byte_end":77259,"line_start":319,"line_end":319,"column_start":9,"column_end":18},"name":"from_h512","qualname":"<Signature>::from_h512","value":"fn (v: H512) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H512.","sig":null,"attributes":[{"value":"/ A new instance from an H512.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77055,"byte_end":77087,"line_start":315,"line_end":315,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77089,"byte_end":77092,"line_start":316,"line_end":316,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77094,"byte_end":77174,"line_start":317,"line_end":317,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77176,"byte_end":77241,"line_start":318,"line_end":318,"column_start":2,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77462,"byte_end":77480,"line_start":327,"line_end":327,"column_start":12,"column_end":30},"name":"LocalizedSignature","qualname":"::ed25519::LocalizedSignature","value":"LocalizedSignature { signer, signature }","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"decl_id":null,"docs":" A localized signature also contains sender information.\n","sig":null,"attributes":[{"value":"/ A localized signature also contains sender information.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77312,"byte_end":77371,"line_start":324,"line_end":324,"column_start":1,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77372,"byte_end":77395,"line_start":325,"line_end":325,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2481},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77522,"byte_end":77528,"line_start":329,"line_end":329,"column_start":6,"column_end":12},"name":"signer","qualname":"::ed25519::LocalizedSignature::signer","value":"ed25519::Public","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" The signer of the signature.\n","sig":null,"attributes":[{"value":"/ The signer of the signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77484,"byte_end":77516,"line_start":328,"line_end":328,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2482},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77570,"byte_end":77579,"line_start":331,"line_end":331,"column_start":6,"column_end":15},"name":"signature","qualname":"::ed25519::LocalizedSignature::signature","value":"ed25519::Signature","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" The signature itself.\n","sig":null,"attributes":[{"value":"/ The signature itself.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77539,"byte_end":77564,"line_start":330,"line_end":330,"column_start":2,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2506},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77744,"byte_end":77753,"line_start":339,"line_end":339,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::ed25519::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77725,"byte_end":77742,"line_start":338,"line_end":338,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2508},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77773,"byte_end":77782,"line_start":341,"line_end":341,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::ed25519::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77756,"byte_end":77771,"line_start":340,"line_end":340,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2510},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77807,"byte_end":77821,"line_start":343,"line_end":343,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::ed25519::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77785,"byte_end":77805,"line_start":342,"line_end":342,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2512},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77847,"byte_end":77862,"line_start":345,"line_end":345,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::ed25519::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77824,"byte_end":77845,"line_start":344,"line_end":344,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2505},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77710,"byte_end":77721,"line_start":337,"line_end":337,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::ed25519::PublicError","value":"PublicError::{BadBase58, BadLength, UnknownVersion, InvalidChecksum}","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77595,"byte_end":77631,"line_start":334,"line_end":334,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77632,"byte_end":77655,"line_start":335,"line_end":335,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78092,"byte_end":78100,"line_start":353,"line_end":353,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"fn (data: [u8; 32]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 32-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 32-byte `data`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77882,"byte_end":77931,"line_start":349,"line_end":349,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77933,"byte_end":77936,"line_start":350,"line_end":350,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77938,"byte_end":78019,"line_start":351,"line_end":351,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78021,"byte_end":78083,"line_start":352,"line_end":352,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78340,"byte_end":78349,"line_start":361,"line_end":361,"column_start":9,"column_end":18},"name":"from_h256","qualname":"<Public>::from_h256","value":"fn (x: H256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H256.","sig":null,"attributes":[{"value":"/ A new instance from an H256.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78147,"byte_end":78179,"line_start":357,"line_end":357,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78181,"byte_end":78184,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78186,"byte_end":78267,"line_start":359,"line_end":359,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78269,"byte_end":78331,"line_start":360,"line_end":360,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78442,"byte_end":78454,"line_start":366,"line_end":366,"column_start":9,"column_end":21},"name":"as_array_ref","qualname":"<Public>::as_array_ref","value":"fn (&self) -> &[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78393,"byte_end":78433,"line_start":365,"line_end":365,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":958},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79701,"byte_end":79714,"line_start":415,"line_end":415,"column_start":2,"column_end":15},"name":"SoftKeyInPath","qualname":"::ed25519::DeriveError::SoftKeyInPath","value":"DeriveError::SoftKeyInPath","parent":{"krate":0,"index":957},"children":[],"decl_id":null,"docs":" A soft key was found in the path (and is unsupported).\n","sig":null,"attributes":[{"value":"/ A soft key was found in the path (and is unsupported).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79641,"byte_end":79699,"line_start":414,"line_end":414,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":957},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79626,"byte_end":79637,"line_start":413,"line_end":413,"column_start":10,"column_end":21},"name":"DeriveError","qualname":"::ed25519::DeriveError","value":"DeriveError::{SoftKeyInPath}","parent":null,"children":[{"krate":0,"index":958}],"decl_id":null,"docs":" An error when deriving a key.\n","sig":null,"attributes":[{"value":"/ An error when deriving a key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79551,"byte_end":79584,"line_start":411,"line_end":411,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79585,"byte_end":79616,"line_start":412,"line_end":412,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83572,"byte_end":83576,"line_start":536,"line_end":536,"column_start":9,"column_end":13},"name":"seed","qualname":"<Pair>::seed","value":"fn (&self) -> &Seed","parent":null,"children":[],"decl_id":null,"docs":" Get the seed for this key.\n","sig":null,"attributes":[{"value":"/ Get the seed for this key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83533,"byte_end":83563,"line_start":535,"line_end":535,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83839,"byte_end":83857,"line_start":543,"line_end":543,"column_start":9,"column_end":27},"name":"from_legacy_string","qualname":"<Pair>::from_legacy_string","value":"fn (s: &str, password_override: Option<&str>) -> Pair","parent":null,"children":[],"decl_id":null,"docs":" Exactly as `from_string` except that if no matches are found then, the the first 32\n characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.\n","sig":null,"attributes":[{"value":"/ Exactly as `from_string` except that if no matches are found then, the the first 32","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83627,"byte_end":83714,"line_start":540,"line_end":540,"column_start":2,"column_end":89}},{"value":"/ characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83716,"byte_end":83805,"line_start":541,"line_end":541,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83807,"byte_end":83830,"line_start":542,"line_end":542,"column_start":2,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":995},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sr25519","qualname":"::sr25519","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1014},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1040},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":2525},{"krate":0,"index":2577},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2563},{"krate":0,"index":2561},{"krate":0,"index":2558},{"krate":0,"index":2557},{"krate":0,"index":2547},{"krate":0,"index":2542},{"krate":0,"index":2540},{"krate":0,"index":2529},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1075},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":2580},{"krate":0,"index":2600},{"krate":0,"index":2595},{"krate":0,"index":2584},{"krate":0,"index":1093},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1133},{"krate":0,"index":2610},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2615},{"krate":0,"index":2613},{"krate":0,"index":1136},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1151},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1200},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210}],"decl_id":null,"docs":" Simple sr25519 (Schnorr-Ristretto) API.","sig":null,"attributes":[{"value":"! Simple sr25519 (Schnorr-Ristretto) API.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":90131,"byte_end":90174,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":90175,"byte_end":90178,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Note: `CHAIN_CODE_LENGTH` must be equal to `crate::crypto::JUNCTION_ID_LEN`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":90179,"byte_end":90258,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"! for this to work.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":90259,"byte_end":90280,"line_start":22,"line_end":22,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1045},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91525,"byte_end":91534,"line_start":59,"line_end":59,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::sr25519::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against sr25519 keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against sr25519 keys","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91450,"byte_end":91514,"line_start":58,"line_end":58,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2525},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91790,"byte_end":91796,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Public","qualname":"::sr25519::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.\n","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91576,"byte_end":91634,"line_start":61,"line_end":61,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91913,"byte_end":91917,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"Pair","qualname":"::sr25519::Pair","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.\n","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91813,"byte_end":91869,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91870,"byte_end":91901,"line_start":67,"line_end":67,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2580},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94593,"byte_end":94602,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"Signature","qualname":"::sr25519::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","sig":null,"attributes":[{"value":"/ An Schnorrkel/Ristretto x25519 (\"sr25519\") signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94389,"byte_end":94446,"line_start":189,"line_end":189,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94447,"byte_end":94450,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Instead of importing it for the local module, alias it to be available as a public type","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94451,"byte_end":94542,"line_start":191,"line_end":191,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97151,"byte_end":97169,"line_start":308,"line_end":308,"column_start":12,"column_end":30},"name":"LocalizedSignature","qualname":"::sr25519::LocalizedSignature","value":"LocalizedSignature { signer, signature }","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2612}],"decl_id":null,"docs":" A localized signature also contains sender information.\n NOTE: Encode and Decode traits are supported in ed25519 but not possible for now here.\n","sig":null,"attributes":[{"value":"/ A localized signature also contains sender information.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96926,"byte_end":96985,"line_start":304,"line_end":304,"column_start":1,"column_end":60}},{"value":"/ NOTE: Encode and Decode traits are supported in ed25519 but not possible for now here.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96986,"byte_end":97076,"line_start":305,"line_end":305,"column_start":1,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97077,"byte_end":97100,"line_start":306,"line_end":306,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2611},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97211,"byte_end":97217,"line_start":310,"line_end":310,"column_start":6,"column_end":12},"name":"signer","qualname":"::sr25519::LocalizedSignature::signer","value":"sr25519::Public","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" The signer of the signature.\n","sig":null,"attributes":[{"value":"/ The signer of the signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97173,"byte_end":97205,"line_start":309,"line_end":309,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2612},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97259,"byte_end":97268,"line_start":312,"line_end":312,"column_start":6,"column_end":15},"name":"signature","qualname":"::sr25519::LocalizedSignature::signature","value":"sr25519::Signature","parent":{"krate":0,"index":2610},"children":[],"decl_id":null,"docs":" The signature itself.\n","sig":null,"attributes":[{"value":"/ The signature itself.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97228,"byte_end":97253,"line_start":311,"line_end":311,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97664,"byte_end":97672,"line_start":322,"line_end":322,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"fn (data: [u8; 64]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 64-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 64-byte `data`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97302,"byte_end":97351,"line_start":316,"line_end":316,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97353,"byte_end":97356,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97358,"byte_end":97432,"line_start":318,"line_end":318,"column_start":2,"column_end":76}},{"value":"/ it if you are certain that the array actually is a signature, or if you","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97434,"byte_end":97509,"line_start":319,"line_end":319,"column_start":2,"column_end":77}},{"value":"/ immediately verify the signature.  All functions that verify signatures","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97511,"byte_end":97586,"line_start":320,"line_end":320,"column_start":2,"column_end":77}},{"value":"/ will fail if the `Signature` is not actually a valid signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97588,"byte_end":97655,"line_start":321,"line_end":321,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97959,"byte_end":97969,"line_start":330,"line_end":330,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 64 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 64 bytes long.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97727,"byte_end":97796,"line_start":326,"line_end":326,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97798,"byte_end":97801,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97803,"byte_end":97883,"line_start":328,"line_end":328,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97885,"byte_end":97950,"line_start":329,"line_end":329,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98260,"byte_end":98269,"line_start":340,"line_end":340,"column_start":9,"column_end":18},"name":"from_h512","qualname":"<Signature>::from_h512","value":"fn (v: H512) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H512.","sig":null,"attributes":[{"value":"/ A new instance from an H512.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98065,"byte_end":98097,"line_start":336,"line_end":336,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98099,"byte_end":98102,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98104,"byte_end":98184,"line_start":338,"line_end":338,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98186,"byte_end":98251,"line_start":339,"line_end":339,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99066,"byte_end":99074,"line_start":367,"line_end":367,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"fn (data: [u8; 32]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 32-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 32-byte `data`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98856,"byte_end":98905,"line_start":363,"line_end":363,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98907,"byte_end":98910,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98912,"byte_end":98993,"line_start":365,"line_end":365,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98995,"byte_end":99057,"line_start":366,"line_end":366,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99314,"byte_end":99323,"line_start":375,"line_end":375,"column_start":9,"column_end":18},"name":"from_h256","qualname":"<Public>::from_h256","value":"fn (x: H256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from an H256.","sig":null,"attributes":[{"value":"/ A new instance from an H256.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99121,"byte_end":99153,"line_start":371,"line_end":371,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99155,"byte_end":99158,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99160,"byte_end":99241,"line_start":373,"line_end":373,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99243,"byte_end":99305,"line_start":374,"line_end":374,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99416,"byte_end":99428,"line_start":380,"line_end":380,"column_start":9,"column_end":21},"name":"as_array_ref","qualname":"<Public>::as_array_ref","value":"fn (&self) -> &[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice filled with raw data.\n","sig":null,"attributes":[{"value":"/ Return a slice filled with raw data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99367,"byte_end":99407,"line_start":379,"line_end":379,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105176,"byte_end":105188,"line_start":581,"line_end":581,"column_start":9,"column_end":21},"name":"from_entropy","qualname":"<Pair>::from_entropy","value":"fn (entropy: &[u8], password: Option<&str>) -> (Pair, Seed)","parent":null,"children":[],"decl_id":null,"docs":" Make a new key pair from binary data derived from a valid seed phrase.","sig":null,"attributes":[{"value":"/ Make a new key pair from binary data derived from a valid seed phrase.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":104965,"byte_end":105039,"line_start":577,"line_end":577,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105041,"byte_end":105044,"line_start":578,"line_end":578,"column_start":2,"column_end":5}},{"value":"/ This uses a key derivation function to convert the entropy into a seed, then returns","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105046,"byte_end":105134,"line_start":579,"line_end":579,"column_start":2,"column_end":90}},{"value":"/ the pair generated from it.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105136,"byte_end":105167,"line_start":580,"line_end":580,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105681,"byte_end":105698,"line_start":592,"line_end":592,"column_start":9,"column_end":26},"name":"verify_deprecated","qualname":"<Pair>::verify_deprecated","value":"fn <M> (sig: &Signature, message: M, pubkey: &Public) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verify a signature on a message. Returns `true` if the signature is good.\n Supports old 0.1.1 deprecated signatures and should be used only for backward\n compatibility.\n","sig":null,"attributes":[{"value":"/ Verify a signature on a message. Returns `true` if the signature is good.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105492,"byte_end":105569,"line_start":589,"line_end":589,"column_start":2,"column_end":79}},{"value":"/ Supports old 0.1.1 deprecated signatures and should be used only for backward","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105571,"byte_end":105652,"line_start":590,"line_end":590,"column_start":2,"column_end":83}},{"value":"/ compatibility.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":105654,"byte_end":105672,"line_start":591,"line_end":591,"column_start":2,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1210},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106554,"byte_end":106566,"line_start":625,"line_end":625,"column_start":8,"column_end":20},"name":"verify_batch","qualname":"::sr25519::verify_batch","value":"fn (messages: Vec<&[u8]>, signatures: Vec<&Signature>, pub_keys: Vec<&Public>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Batch verification.","sig":null,"attributes":[{"value":"/ Batch verification.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106348,"byte_end":106371,"line_start":619,"line_end":619,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106372,"byte_end":106375,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ `messages`, `signatures` and `pub_keys` should all have equal length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106376,"byte_end":106449,"line_start":621,"line_end":621,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106450,"byte_end":106453,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ Returns `true` if all signatures are correct, `false` otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106454,"byte_end":106522,"line_start":623,"line_end":623,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106523,"byte_end":106546,"line_start":624,"line_end":624,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":1212},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1226},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1239},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":2624},{"krate":0,"index":2654},{"krate":0,"index":2644},{"krate":0,"index":2639},{"krate":0,"index":2628},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":2656},{"krate":0,"index":2674},{"krate":0,"index":2673},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2665},{"krate":0,"index":1260},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1303},{"krate":0,"index":2676},{"krate":0,"index":2696},{"krate":0,"index":2691},{"krate":0,"index":2680},{"krate":0,"index":1306},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1332},{"krate":0,"index":1336},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1360},{"krate":0,"index":1364},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":1367},{"krate":0,"index":1390},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399}],"decl_id":null,"docs":" Simple ECDSA API.\n","sig":null,"attributes":[{"value":"! Simple ECDSA API.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":116104,"byte_end":116125,"line_start":19,"line_end":19,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1250},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117050,"byte_end":117059,"line_start":46,"line_end":46,"column_start":11,"column_end":20},"name":"CRYPTO_ID","qualname":"::ecdsa::CRYPTO_ID","value":"CryptoTypeId","parent":null,"children":[],"decl_id":null,"docs":" An identifier used to match public keys against ecdsa keys\n","sig":null,"attributes":[{"value":"/ An identifier used to match public keys against ecdsa keys","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":116977,"byte_end":117039,"line_start":45,"line_end":45,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117412,"byte_end":117418,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Public","qualname":"::ecdsa::Public","value":"","parent":null,"children":[],"decl_id":null,"docs":" The ECDSA compressed public key.\n","sig":null,"attributes":[{"value":"/ The ECDSA compressed public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117318,"byte_end":117354,"line_start":54,"line_end":54,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2657},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117935,"byte_end":117944,"line_start":83,"line_end":83,"column_start":2,"column_end":11},"name":"BadBase58","qualname":"::ecdsa::PublicError::BadBase58","value":"PublicError::BadBase58","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Bad alphabet.\n","sig":null,"attributes":[{"value":"/ Bad alphabet.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117916,"byte_end":117933,"line_start":82,"line_end":82,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2659},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117964,"byte_end":117973,"line_start":85,"line_end":85,"column_start":2,"column_end":11},"name":"BadLength","qualname":"::ecdsa::PublicError::BadLength","value":"PublicError::BadLength","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Bad length.\n","sig":null,"attributes":[{"value":"/ Bad length.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117947,"byte_end":117962,"line_start":84,"line_end":84,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2661},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117998,"byte_end":118012,"line_start":87,"line_end":87,"column_start":2,"column_end":16},"name":"UnknownVersion","qualname":"::ecdsa::PublicError::UnknownVersion","value":"PublicError::UnknownVersion","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Unknown version.\n","sig":null,"attributes":[{"value":"/ Unknown version.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117976,"byte_end":117996,"line_start":86,"line_end":86,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2663},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118038,"byte_end":118053,"line_start":89,"line_end":89,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::ecdsa::PublicError::InvalidChecksum","value":"PublicError::InvalidChecksum","parent":{"krate":0,"index":2656},"children":[],"decl_id":null,"docs":" Invalid checksum.\n","sig":null,"attributes":[{"value":"/ Invalid checksum.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118015,"byte_end":118036,"line_start":88,"line_end":88,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2656},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117901,"byte_end":117912,"line_start":81,"line_end":81,"column_start":10,"column_end":21},"name":"PublicError","qualname":"::ecdsa::PublicError","value":"PublicError::{BadBase58, BadLength, UnknownVersion, InvalidChecksum}","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2663}],"decl_id":null,"docs":" An error type for SS58 decoding.\n","sig":null,"attributes":[{"value":"/ An error type for SS58 decoding.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117786,"byte_end":117822,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117823,"byte_end":117846,"line_start":79,"line_end":79,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118283,"byte_end":118291,"line_start":97,"line_end":97,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Public>::from_raw","value":"fn (data: [u8; 33]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 33-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 33-byte `data`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118073,"byte_end":118122,"line_start":93,"line_end":93,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118124,"byte_end":118127,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real public key. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118129,"byte_end":118210,"line_start":95,"line_end":95,"column_start":2,"column_end":83}},{"value":"/ you are certain that the array actually is a pubkey. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118212,"byte_end":118274,"line_start":96,"line_end":96,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118503,"byte_end":118512,"line_start":105,"line_end":105,"column_start":9,"column_end":18},"name":"from_full","qualname":"<Public>::from_full","value":"fn (full: &[u8]) -> Result<Self, ()>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance from the given full public key.","sig":null,"attributes":[{"value":"/ Create a new instance from the given full public key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118336,"byte_end":118393,"line_start":101,"line_end":101,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118395,"byte_end":118398,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ This will convert the full public key into the compressed format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118400,"byte_end":118469,"line_start":103,"line_end":103,"column_start":2,"column_end":71}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118471,"byte_end":118494,"line_start":104,"line_end":104,"column_start":2,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121370,"byte_end":121379,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A signature (a 512-bit value, plus 8 bits for recovery ID).\n","sig":null,"attributes":[{"value":"/ A signature (a 512-bit value, plus 8 bits for recovery ID).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121256,"byte_end":121319,"line_start":229,"line_end":229,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123677,"byte_end":123685,"line_start":334,"line_end":334,"column_start":9,"column_end":17},"name":"from_raw","qualname":"<Signature>::from_raw","value":"fn (data: [u8; 65]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given 65-byte `data`.","sig":null,"attributes":[{"value":"/ A new instance from the given 65-byte `data`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123465,"byte_end":123514,"line_start":330,"line_end":330,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123516,"byte_end":123519,"line_start":331,"line_end":331,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123521,"byte_end":123601,"line_start":332,"line_end":332,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123603,"byte_end":123668,"line_start":333,"line_end":333,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123972,"byte_end":123982,"line_start":342,"line_end":342,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<Signature>::from_slice","value":"fn (data: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new instance from the given slice that should be 65 bytes long.","sig":null,"attributes":[{"value":"/ A new instance from the given slice that should be 65 bytes long.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123740,"byte_end":123809,"line_start":338,"line_end":338,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123811,"byte_end":123814,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ NOTE: No checking goes on to ensure this is a real signature. Only use it if","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123816,"byte_end":123896,"line_start":340,"line_end":340,"column_start":2,"column_end":82}},{"value":"/ you are certain that the array actually is a signature. GIGO!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123898,"byte_end":123963,"line_start":341,"line_end":341,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":124181,"byte_end":124188,"line_start":350,"line_end":350,"column_start":9,"column_end":16},"name":"recover","qualname":"<Signature>::recover","value":"fn <M> (&self, message: M) -> Option<Public>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key from this signature and a message.\n","sig":null,"attributes":[{"value":"/ Recover the public key from this signature and a message.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":124078,"byte_end":124139,"line_start":348,"line_end":348,"column_start":2,"column_end":63}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":124141,"byte_end":124172,"line_start":349,"line_end":349,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125652,"byte_end":125665,"line_start":394,"line_end":394,"column_start":2,"column_end":15},"name":"SoftKeyInPath","qualname":"::ecdsa::DeriveError::SoftKeyInPath","value":"DeriveError::SoftKeyInPath","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" A soft key was found in the path (and is unsupported).\n","sig":null,"attributes":[{"value":"/ A soft key was found in the path (and is unsupported).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125592,"byte_end":125650,"line_start":393,"line_end":393,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":1364},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125577,"byte_end":125588,"line_start":392,"line_end":392,"column_start":10,"column_end":21},"name":"DeriveError","qualname":"::ecdsa::DeriveError","value":"DeriveError::{SoftKeyInPath}","parent":null,"children":[{"krate":0,"index":1365}],"decl_id":null,"docs":" An error when deriving a key.\n","sig":null,"attributes":[{"value":"/ An error when deriving a key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125502,"byte_end":125535,"line_start":390,"line_end":390,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125536,"byte_end":125567,"line_start":391,"line_end":391,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2706},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125746,"byte_end":125750,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"name":"Pair","qualname":"::ecdsa::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708}],"decl_id":null,"docs":" A key pair.\n","sig":null,"attributes":[{"value":"/ A key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125670,"byte_end":125685,"line_start":397,"line_end":397,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"full_crypto\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125686,"byte_end":125717,"line_start":398,"line_end":398,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":129936,"byte_end":129940,"line_start":519,"line_end":519,"column_start":9,"column_end":13},"name":"seed","qualname":"<Pair>::seed","value":"fn (&self) -> Seed","parent":null,"children":[],"decl_id":null,"docs":" Get the seed for this key.\n","sig":null,"attributes":[{"value":"/ Get the seed for this key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":129897,"byte_end":129927,"line_start":518,"line_end":518,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130201,"byte_end":130219,"line_start":526,"line_end":526,"column_start":9,"column_end":27},"name":"from_legacy_string","qualname":"<Pair>::from_legacy_string","value":"fn (s: &str, password_override: Option<&str>) -> Pair","parent":null,"children":[],"decl_id":null,"docs":" Exactly as `from_string` except that if no matches are found then, the the first 32\n characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.\n","sig":null,"attributes":[{"value":"/ Exactly as `from_string` except that if no matches are found then, the the first 32","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":129989,"byte_end":130076,"line_start":523,"line_end":523,"column_start":2,"column_end":89}},{"value":"/ characters are taken (padded with spaces as necessary) and used as the MiniSecretKey.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130078,"byte_end":130167,"line_start":524,"line_end":524,"column_start":2,"column_end":91}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130169,"byte_end":130192,"line_start":525,"line_end":525,"column_start":2,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1401},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash","qualname":"::hash","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1406}],"decl_id":null,"docs":" A fixed hash type.\n","sig":null,"attributes":[{"value":"! A fixed hash type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136746,"byte_end":136768,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1406},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":137008,"byte_end":137020,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"convert_hash","qualname":"::hash::convert_hash","value":"fn <H1, H2> (src: &H2) -> H1","parent":null,"children":[],"decl_id":null,"docs":" Hash conversion. Used to convert between unbound associated hash types in traits,\n implemented by the same hash type.\n Panics if used to convert between different hash types.\n","sig":null,"attributes":[{"value":"/ Hash conversion. Used to convert between unbound associated hash types in traits,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136816,"byte_end":136901,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/ implemented by the same hash type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136902,"byte_end":136940,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ Panics if used to convert between different hash types.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hash.rs","byte_start":136941,"byte_end":137000,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2711},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":140634,"byte_end":140646,"line_start":27,"line_end":27,"column_start":13,"column_end":25},"name":"Blake2Hasher","qualname":"::hasher::blake2::Blake2Hasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of Hasher using Blake2b 256-bit hashes\n","sig":null,"attributes":[{"value":"/ Concrete implementation of Hasher using Blake2b 256-bit hashes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":140537,"byte_end":140603,"line_start":25,"line_end":25,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2715},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":141055,"byte_end":141067,"line_start":47,"line_end":47,"column_start":13,"column_end":25},"name":"KeccakHasher","qualname":"::hasher::keccak::KeccakHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of Hasher using Keccak 256-bit hashes\n","sig":null,"attributes":[{"value":"/ Concrete implementation of Hasher using Keccak 256-bit hashes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":140959,"byte_end":141024,"line_start":45,"line_end":45,"column_start":2,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":1428},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offchain","qualname":"::offchain","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1502},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":2808},{"krate":0,"index":2889},{"krate":0,"index":2888},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2876},{"krate":0,"index":2871},{"krate":0,"index":2869},{"krate":0,"index":2860},{"krate":0,"index":2854},{"krate":0,"index":2815},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":2891},{"krate":0,"index":2939},{"krate":0,"index":2938},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2925},{"krate":0,"index":2923},{"krate":0,"index":2921},{"krate":0,"index":2911},{"krate":0,"index":2906},{"krate":0,"index":2897},{"krate":0,"index":2894},{"krate":0,"index":1560},{"krate":0,"index":2941},{"krate":0,"index":2980},{"krate":0,"index":2979},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2971},{"krate":0,"index":2965},{"krate":0,"index":2960},{"krate":0,"index":2951},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":2982},{"krate":0,"index":3017},{"krate":0,"index":3016},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3007},{"krate":0,"index":3001},{"krate":0,"index":2996},{"krate":0,"index":2992},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":3019},{"krate":0,"index":3048},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3035},{"krate":0,"index":3030},{"krate":0,"index":3028},{"krate":0,"index":3024},{"krate":0,"index":3022},{"krate":0,"index":3050},{"krate":0,"index":3088},{"krate":0,"index":3086},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3069},{"krate":0,"index":3064},{"krate":0,"index":3062},{"krate":0,"index":3053},{"krate":0,"index":1573},{"krate":0,"index":3090},{"krate":0,"index":3126},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3109},{"krate":0,"index":3104},{"krate":0,"index":3102},{"krate":0,"index":3093},{"krate":0,"index":1575},{"krate":0,"index":3128},{"krate":0,"index":3175},{"krate":0,"index":3174},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3165},{"krate":0,"index":3159},{"krate":0,"index":3157},{"krate":0,"index":3155},{"krate":0,"index":3146},{"krate":0,"index":3136},{"krate":0,"index":3131},{"krate":0,"index":3177},{"krate":0,"index":3224},{"krate":0,"index":3223},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3214},{"krate":0,"index":3208},{"krate":0,"index":3206},{"krate":0,"index":3204},{"krate":0,"index":3195},{"krate":0,"index":3185},{"krate":0,"index":3180},{"krate":0,"index":1577},{"krate":0,"index":1580},{"krate":0,"index":3226},{"krate":0,"index":3257},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3249},{"krate":0,"index":3248},{"krate":0,"index":3259},{"krate":0,"index":3272},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3263},{"krate":0,"index":3262},{"krate":0,"index":1586},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1612},{"krate":0,"index":1629},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":3284},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3292},{"krate":0,"index":1659}],"decl_id":null,"docs":" Offchain workers types\n","sig":null,"attributes":[{"value":"! Offchain workers types","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":141958,"byte_end":141984,"line_start":18,"line_end":18,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1443},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::offchain::storage","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":2719},{"krate":0,"index":2725},{"krate":0,"index":2723},{"krate":0,"index":2721},{"krate":0,"index":1449},{"krate":0,"index":1456},{"krate":0,"index":2727},{"krate":0,"index":2745},{"krate":0,"index":2743},{"krate":0,"index":2740},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2747},{"krate":0,"index":2755},{"krate":0,"index":2753},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1499}],"decl_id":null,"docs":" In-memory implementation of offchain workers database.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142204,"byte_end":142227,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"! In-memory implementation of offchain workers database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165159,"byte_end":165217,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2719},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165421,"byte_end":165441,"line_start":26,"line_end":26,"column_start":12,"column_end":32},"name":"InMemOffchainStorage","qualname":"::offchain::storage::InMemOffchainStorage","value":"InMemOffchainStorage {  }","parent":null,"children":[{"krate":0,"index":2720}],"decl_id":null,"docs":" In-memory storage for offchain workers.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165333,"byte_end":165376,"line_start":24,"line_end":24,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165592,"byte_end":165601,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<InMemOffchainStorage>::into_iter","value":"fn (self) -> impl Iterator<Item = (Vec<u8>, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165513,"byte_end":165583,"line_start":31,"line_end":31,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165742,"byte_end":165746,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"iter","qualname":"<InMemOffchainStorage>::iter","value":"fn <'a> (&'a self) -> impl Iterator<Item = (&'a Vec<u8>, &'a Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165683,"byte_end":165733,"line_start":36,"line_end":36,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165917,"byte_end":165923,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"name":"remove","qualname":"<InMemOffchainStorage>::remove","value":"fn (&mut self, prefix: &[u8], key: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165839,"byte_end":165908,"line_start":41,"line_end":41,"column_start":2,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167152,"byte_end":167158,"line_start":89,"line_end":89,"column_start":2,"column_end":8},"name":"Remove","qualname":"::offchain::storage::OffchainOverlayedChange::Remove","value":"OffchainOverlayedChange::Remove","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Remove the data associated with the key\n","sig":null,"attributes":[{"value":"/ Remove the data associated with the key","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167107,"byte_end":167150,"line_start":88,"line_end":88,"column_start":2,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167207,"byte_end":167215,"line_start":91,"line_end":91,"column_start":2,"column_end":10},"name":"SetValue","qualname":"::offchain::storage::OffchainOverlayedChange::SetValue","value":"OffchainOverlayedChange::SetValue(Vec<u8>)","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" Overwrite the value of an associated key\n","sig":null,"attributes":[{"value":"/ Overwrite the value of an associated key","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167161,"byte_end":167205,"line_start":90,"line_end":90,"column_start":2,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2727},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167080,"byte_end":167103,"line_start":87,"line_end":87,"column_start":10,"column_end":33},"name":"OffchainOverlayedChange","qualname":"::offchain::storage::OffchainOverlayedChange","value":"OffchainOverlayedChange::{Remove, SetValue}","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2730}],"decl_id":null,"docs":" Change to be applied to the offchain worker db in regards to a key.\n","sig":null,"attributes":[{"value":"/ Change to be applied to the offchain worker db in regards to a key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":166958,"byte_end":167029,"line_start":85,"line_end":85,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2748},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167489,"byte_end":167497,"line_start":98,"line_end":98,"column_start":2,"column_end":10},"name":"Disabled","qualname":"::offchain::storage::OffchainOverlayedChanges::Disabled","value":"OffchainOverlayedChanges::Disabled","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" Writing overlay changes to the offchain worker database is disabled by configuration.\n","sig":null,"attributes":[{"value":"/ Writing overlay changes to the offchain worker database is disabled by configuration.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167398,"byte_end":167487,"line_start":97,"line_end":97,"column_start":2,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2750},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167581,"byte_end":167588,"line_start":100,"line_end":100,"column_start":2,"column_end":9},"name":"Enabled","qualname":"::offchain::storage::OffchainOverlayedChanges::Enabled","value":"OffchainOverlayedChanges::Enabled(HashMap<Vec<u8>, OffchainOverlayedChange>)","parent":{"krate":0,"index":2747},"children":[],"decl_id":null,"docs":" Overlay changes can be recorded using the inner collection of this variant.\n","sig":null,"attributes":[{"value":"/ Overlay changes can be recorded using the inner collection of this variant.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167500,"byte_end":167579,"line_start":99,"line_end":99,"column_start":2,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":2747},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167370,"byte_end":167394,"line_start":96,"line_end":96,"column_start":10,"column_end":34},"name":"OffchainOverlayedChanges","qualname":"::offchain::storage::OffchainOverlayedChanges","value":"OffchainOverlayedChanges::{Disabled, Enabled}","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2750}],"decl_id":null,"docs":" In-memory storage for offchain workers recoding changes for the actual offchain storage implementation.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers recoding changes for the actual offchain storage implementation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167229,"byte_end":167336,"line_start":94,"line_end":94,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167801,"byte_end":167809,"line_start":111,"line_end":111,"column_start":9,"column_end":17},"name":"disabled","qualname":"<OffchainOverlayedChanges>::disabled","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the disabled variant.\n","sig":null,"attributes":[{"value":"/ Create the disabled variant.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167760,"byte_end":167792,"line_start":110,"line_end":110,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167884,"byte_end":167891,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"enabled","qualname":"<OffchainOverlayedChanges>::enabled","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the enabled variant.\n","sig":null,"attributes":[{"value":"/ Create the enabled variant.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167844,"byte_end":167875,"line_start":115,"line_end":115,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168020,"byte_end":168029,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<OffchainOverlayedChanges>::into_iter","value":"fn (self) -> OffchainOverlayedChangesIntoIter","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167941,"byte_end":168011,"line_start":120,"line_end":120,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168184,"byte_end":168188,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"iter","qualname":"<OffchainOverlayedChanges>::iter","value":"fn <'a> (&'a self) -> OffchainOverlayedChangesIter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168125,"byte_end":168175,"line_start":125,"line_end":125,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168330,"byte_end":168335,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"name":"drain","qualname":"<OffchainOverlayedChanges>::drain","value":"fn <'a, 'd> (&'a mut self) -> OffchainOverlayedChangesDrain<'d>","parent":null,"children":[],"decl_id":null,"docs":" Drain all elements of changeset.\n","sig":null,"attributes":[{"value":"/ Drain all elements of changeset.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168285,"byte_end":168321,"line_start":130,"line_end":130,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168536,"byte_end":168542,"line_start":136,"line_end":136,"column_start":9,"column_end":15},"name":"remove","qualname":"<OffchainOverlayedChanges>::remove","value":"fn (&mut self, prefix: &[u8], key: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168458,"byte_end":168527,"line_start":135,"line_end":135,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168859,"byte_end":168862,"line_start":144,"line_end":144,"column_start":9,"column_end":12},"name":"set","qualname":"<OffchainOverlayedChanges>::set","value":"fn (&mut self, prefix: &[u8], key: &[u8], value: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the value associated with a key under a prefix to the value provided.\n","sig":null,"attributes":[{"value":"/ Set the value associated with a key under a prefix to the value provided.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":168773,"byte_end":168850,"line_start":143,"line_end":143,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169195,"byte_end":169198,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"get","qualname":"<OffchainOverlayedChanges>::get","value":"fn (&self, prefix: &[u8], key: &[u8]) -> Option<OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a associated value to the given key in storage with prefix.\n","sig":null,"attributes":[{"value":"/ Obtain a associated value to the given key in storage with prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169116,"byte_end":169186,"line_start":151,"line_end":151,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169561,"byte_end":169589,"line_start":165,"line_end":165,"column_start":12,"column_end":40},"name":"OffchainOverlayedChangesIter","qualname":"::offchain::storage::OffchainOverlayedChangesIter","value":"OffchainOverlayedChangesIter {  }","parent":null,"children":[{"krate":0,"index":1477}],"decl_id":null,"docs":" Iterate by reference over the prepared offchain worker storage changes.\n","sig":null,"attributes":[{"value":"/ Iterate by reference over the prepared offchain worker storage changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169474,"byte_end":169549,"line_start":164,"line_end":164,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170038,"byte_end":170041,"line_start":182,"line_end":182,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainOverlayedChangesIter>::new","value":"fn (container: &'i OffchainOverlayedChanges) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator based on a refernce to the parent container.\n","sig":null,"attributes":[{"value":"/ Create a new iterator based on a refernce to the parent container.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169959,"byte_end":170029,"line_start":181,"line_end":181,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170361,"byte_end":170393,"line_start":194,"line_end":194,"column_start":12,"column_end":44},"name":"OffchainOverlayedChangesIntoIter","qualname":"::offchain::storage::OffchainOverlayedChangesIntoIter","value":"OffchainOverlayedChangesIntoIter {  }","parent":null,"children":[{"krate":0,"index":1486}],"decl_id":null,"docs":" Iterate by value over the prepared offchain worker storage changes.\n","sig":null,"attributes":[{"value":"/ Iterate by value over the prepared offchain worker storage changes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170278,"byte_end":170349,"line_start":193,"line_end":193,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170805,"byte_end":170808,"line_start":211,"line_end":211,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainOverlayedChangesIntoIter>::new","value":"fn (container: OffchainOverlayedChanges) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator by consuming the collection.\n","sig":null,"attributes":[{"value":"/ Create a new iterator by consuming the collection.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170742,"byte_end":170796,"line_start":210,"line_end":210,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171124,"byte_end":171153,"line_start":222,"line_end":222,"column_start":12,"column_end":41},"name":"OffchainOverlayedChangesDrain","qualname":"::offchain::storage::OffchainOverlayedChangesDrain","value":"OffchainOverlayedChangesDrain {  }","parent":null,"children":[{"krate":0,"index":1494}],"decl_id":null,"docs":" Iterate over all items while draining them from the collection.\n","sig":null,"attributes":[{"value":"/ Iterate over all items while draining them from the collection.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171045,"byte_end":171112,"line_start":221,"line_end":221,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171649,"byte_end":171652,"line_start":240,"line_end":240,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainOverlayedChangesDrain>::new","value":"fn (container: &'d mut OffchainOverlayedChanges) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator by taking a mut reference to the collection,\n for the lifetime of the created drain iterator.\n","sig":null,"attributes":[{"value":"/ Create a new iterator by taking a mut reference to the collection,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171517,"byte_end":171587,"line_start":238,"line_end":238,"column_start":2,"column_end":72}},{"value":"/ for the lifetime of the created drain iterator.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171589,"byte_end":171640,"line_start":239,"line_end":239,"column_start":2,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":1502},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::offchain::testing","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1517},{"krate":0,"index":2757},{"krate":0,"index":2776},{"krate":0,"index":2774},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2778},{"krate":0,"index":2788},{"krate":0,"index":2786},{"krate":0,"index":1518},{"krate":0,"index":1524},{"krate":0,"index":2790},{"krate":0,"index":2797},{"krate":0,"index":2795},{"krate":0,"index":2793},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":1546},{"krate":0,"index":1548}],"decl_id":null,"docs":" Utilities for offchain calls testing.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142245,"byte_end":142268,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"! Utilities for offchain calls testing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":173747,"byte_end":173788,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":173789,"byte_end":173792,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Namely all ExecutionExtensions that allow mocking","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":173793,"byte_end":173846,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"! the extra APIs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":173847,"byte_end":173866,"line_start":21,"line_end":21,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174243,"byte_end":174257,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"PendingRequest","qualname":"::offchain::testing::PendingRequest","value":"PendingRequest { method, uri, meta, headers, body, sent, response, read, response_headers }","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766}],"decl_id":null,"docs":" Pending request.\n","sig":null,"attributes":[{"value":"/ Pending request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174170,"byte_end":174190,"line_start":41,"line_end":41,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2758},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174282,"byte_end":174288,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"name":"method","qualname":"::offchain::testing::PendingRequest::method","value":"std::string::String","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" HTTP method\n","sig":null,"attributes":[{"value":"/ HTTP method","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174261,"byte_end":174276,"line_start":44,"line_end":44,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2759},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174312,"byte_end":174315,"line_start":47,"line_end":47,"column_start":6,"column_end":9},"name":"uri","qualname":"::offchain::testing::PendingRequest::uri","value":"std::string::String","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" URI\n","sig":null,"attributes":[{"value":"/ URI","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174299,"byte_end":174306,"line_start":46,"line_end":46,"column_start":2,"column_end":9}}]},{"kind":"Field","id":{"krate":0,"index":2760},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174352,"byte_end":174356,"line_start":49,"line_end":49,"column_start":6,"column_end":10},"name":"meta","qualname":"::offchain::testing::PendingRequest::meta","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Encoded Metadata\n","sig":null,"attributes":[{"value":"/ Encoded Metadata","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174326,"byte_end":174346,"line_start":48,"line_end":48,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2761},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174393,"byte_end":174400,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"name":"headers","qualname":"::offchain::testing::PendingRequest::headers","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Request headers\n","sig":null,"attributes":[{"value":"/ Request headers","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174368,"byte_end":174387,"line_start":50,"line_end":50,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2762},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174448,"byte_end":174452,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"name":"body","qualname":"::offchain::testing::PendingRequest::body","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Request body\n","sig":null,"attributes":[{"value":"/ Request body","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174426,"byte_end":174442,"line_start":52,"line_end":52,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2763},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174508,"byte_end":174512,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"name":"sent","qualname":"::offchain::testing::PendingRequest::sent","value":"bool","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Has the request been sent already.\n","sig":null,"attributes":[{"value":"/ Has the request been sent already.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174464,"byte_end":174502,"line_start":54,"line_end":54,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2764},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174544,"byte_end":174552,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"name":"response","qualname":"::offchain::testing::PendingRequest::response","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Response body\n","sig":null,"attributes":[{"value":"/ Response body","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174521,"byte_end":174538,"line_start":56,"line_end":56,"column_start":2,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2765},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174634,"byte_end":174638,"line_start":59,"line_end":59,"column_start":6,"column_end":10},"name":"read","qualname":"::offchain::testing::PendingRequest::read","value":"usize","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Number of bytes already read from the response body.\n","sig":null,"attributes":[{"value":"/ Number of bytes already read from the response body.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174572,"byte_end":174628,"line_start":58,"line_end":58,"column_start":2,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2766},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174674,"byte_end":174690,"line_start":61,"line_end":61,"column_start":6,"column_end":22},"name":"response_headers","qualname":"::offchain::testing::PendingRequest::response_headers","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2757},"children":[],"decl_id":null,"docs":" Response headers\n","sig":null,"attributes":[{"value":"/ Response headers","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174648,"byte_end":174668,"line_start":60,"line_end":60,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2778},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174877,"byte_end":174890,"line_start":68,"line_end":68,"column_start":12,"column_end":25},"name":"OffchainState","qualname":"::offchain::testing::OffchainState","value":"OffchainState { requests, persistent_storage, local_storage, timestamp, seed }","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784}],"decl_id":null,"docs":" Internal state of the externalities.","sig":null,"attributes":[{"value":"/ Internal state of the externalities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174718,"byte_end":174758,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174759,"byte_end":174762,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This can be used in tests to respond or assert stuff about interactions.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174763,"byte_end":174839,"line_start":66,"line_end":66,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2779},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174931,"byte_end":174939,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"name":"requests","qualname":"::offchain::testing::OffchainState::requests","value":"std::collections::BTreeMap<offchain::HttpRequestId, offchain::testing::PendingRequest>","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":" A list of pending requests.\n","sig":null,"attributes":[{"value":"/ A list of pending requests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":174894,"byte_end":174925,"line_start":69,"line_end":69,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2781},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175070,"byte_end":175088,"line_start":73,"line_end":73,"column_start":6,"column_end":24},"name":"persistent_storage","qualname":"::offchain::testing::OffchainState::persistent_storage","value":"offchain::storage::InMemOffchainStorage","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":" Persistent local storage\n","sig":null,"attributes":[{"value":"/ Persistent local storage","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175036,"byte_end":175064,"line_start":72,"line_end":72,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2782},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175136,"byte_end":175149,"line_start":75,"line_end":75,"column_start":6,"column_end":19},"name":"local_storage","qualname":"::offchain::testing::OffchainState::local_storage","value":"offchain::storage::InMemOffchainStorage","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":" Local storage\n","sig":null,"attributes":[{"value":"/ Local storage","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175113,"byte_end":175130,"line_start":74,"line_end":74,"column_start":2,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2783},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175215,"byte_end":175224,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"name":"timestamp","qualname":"::offchain::testing::OffchainState::timestamp","value":"u64","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":" Current timestamp (unix millis)\n","sig":null,"attributes":[{"value":"/ Current timestamp (unix millis)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175174,"byte_end":175209,"line_start":76,"line_end":76,"column_start":2,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2784},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175267,"byte_end":175271,"line_start":79,"line_end":79,"column_start":6,"column_end":10},"name":"seed","qualname":"::offchain::testing::OffchainState::seed","value":"[u8; 32]","parent":{"krate":0,"index":2778},"children":[],"decl_id":null,"docs":" A supposedly random seed.\n","sig":null,"attributes":[{"value":"/ A supposedly random seed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175232,"byte_end":175261,"line_start":78,"line_end":78,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175393,"byte_end":175416,"line_start":84,"line_end":84,"column_start":9,"column_end":32},"name":"fulfill_pending_request","qualname":"<OffchainState>::fulfill_pending_request","value":"fn (&mut self, id: u16, expected: PendingRequest, response: impl Into<Vec<u8>>, response_headers: impl IntoIterator<Item = (String, String)>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Asserts that pending request has been submitted and fills it's response.\n","sig":null,"attributes":[{"value":"/ Asserts that pending request has been submitted and fills it's response.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175308,"byte_end":175384,"line_start":83,"line_end":83,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176626,"byte_end":176640,"line_start":120,"line_end":120,"column_start":9,"column_end":23},"name":"expect_request","qualname":"<OffchainState>::expect_request","value":"fn (&mut self, id: u16, expected: PendingRequest) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add expected HTTP request.","sig":null,"attributes":[{"value":"/ Add expected HTTP request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176227,"byte_end":176257,"line_start":114,"line_end":114,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176259,"byte_end":176262,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ This method can be used to initialize expected HTTP requests and their responses","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176264,"byte_end":176348,"line_start":116,"line_end":116,"column_start":2,"column_end":86}},{"value":"/ before running the actual code that utilizes them (for instance before calling into runtime).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176350,"byte_end":176447,"line_start":117,"line_end":117,"column_start":2,"column_end":99}},{"value":"/ Expected request has to be fulfilled before this struct is dropped,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176449,"byte_end":176520,"line_start":118,"line_end":118,"column_start":2,"column_end":73}},{"value":"/ the `response` and `response_headers` fields will be used to return results to the callers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176522,"byte_end":176617,"line_start":119,"line_end":119,"column_start":2,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":2790},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177255,"byte_end":177270,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"TestOffchainExt","qualname":"::offchain::testing::TestOffchainExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of offchain externalities used for tests.\n","sig":null,"attributes":[{"value":"/ Implementation of offchain externalities used for tests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177150,"byte_end":177210,"line_start":137,"line_end":137,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177409,"byte_end":177412,"line_start":143,"line_end":143,"column_start":9,"column_end":12},"name":"new","qualname":"<TestOffchainExt>::new","value":"fn () -> (Self, Arc<RwLock<OffchainState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestOffchainExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestOffchainExt` and a reference to the internal state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177329,"byte_end":177400,"line_start":142,"line_end":142,"column_start":2,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2799},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181586,"byte_end":181595,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"PoolState","qualname":"::offchain::testing::PoolState","value":"PoolState { transactions }","parent":null,"children":[{"krate":0,"index":2800}],"decl_id":null,"docs":" The internal state of the fake transaction pool.\n","sig":null,"attributes":[{"value":"/ The internal state of the fake transaction pool.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181503,"byte_end":181555,"line_start":311,"line_end":311,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2800},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181661,"byte_end":181673,"line_start":315,"line_end":315,"column_start":6,"column_end":18},"name":"transactions","qualname":"::offchain::testing::PoolState::transactions","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":2799},"children":[],"decl_id":null,"docs":" A vector of transactions submitted from the runtime.\n","sig":null,"attributes":[{"value":"/ A vector of transactions submitted from the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181599,"byte_end":181655,"line_start":314,"line_end":314,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2803},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182089,"byte_end":182111,"line_start":328,"line_end":328,"column_start":12,"column_end":34},"name":"TestTransactionPoolExt","qualname":"::offchain::testing::TestTransactionPoolExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of transaction pool used for test.","sig":null,"attributes":[{"value":"/ Implementation of transaction pool used for test.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181692,"byte_end":181745,"line_start":318,"line_end":318,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181746,"byte_end":181749,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation does not verify correctness","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181750,"byte_end":181811,"line_start":320,"line_end":320,"column_start":1,"column_end":62}},{"value":"/ of sent extrinsics. It's meant to be used in contexts","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181812,"byte_end":181869,"line_start":321,"line_end":321,"column_start":1,"column_end":58}},{"value":"/ where an actual runtime is not known.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181870,"byte_end":181911,"line_start":322,"line_end":322,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181912,"byte_end":181915,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ It's advised to write integration tests that include the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181916,"byte_end":181976,"line_start":324,"line_end":324,"column_start":1,"column_end":61}},{"value":"/ actual transaction pool to make sure the produced","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":181977,"byte_end":182030,"line_start":325,"line_end":325,"column_start":1,"column_end":54}},{"value":"/ transactions are valid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182031,"byte_end":182058,"line_start":326,"line_end":326,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182256,"byte_end":182259,"line_start":332,"line_end":332,"column_start":9,"column_end":12},"name":"new","qualname":"<TestTransactionPoolExt>::new","value":"fn () -> (Self, Arc<RwLock<PoolState>>)","parent":null,"children":[],"decl_id":null,"docs":" Create new `TestTransactionPoolExt` and a reference to the internal state.\n","sig":null,"attributes":[{"value":"/ Create new `TestTransactionPoolExt` and a reference to the internal state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182169,"byte_end":182247,"line_start":331,"line_end":331,"column_start":2,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":1550},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142357,"byte_end":142371,"line_start":33,"line_end":33,"column_start":11,"column_end":25},"name":"STORAGE_PREFIX","qualname":"::offchain::STORAGE_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Local storage prefix used by the Offchain Worker API to\n","sig":null,"attributes":[{"value":"/ Local storage prefix used by the Offchain Worker API to","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142287,"byte_end":142346,"line_start":32,"line_end":32,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1551},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142449,"byte_end":142464,"line_start":36,"line_end":36,"column_start":11,"column_end":26},"name":"OffchainStorage","qualname":"::offchain::OffchainStorage","value":"OffchainStorage: Clone + Send + Sync","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"decl_id":null,"docs":" Offchain workers local storage.\n","sig":null,"attributes":[{"value":"/ Offchain workers local storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142403,"byte_end":142438,"line_start":35,"line_end":35,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142552,"byte_end":142555,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"set","qualname":"::offchain::OffchainStorage::set","value":"fn (&mut self, prefix: &[u8], key: &[u8], value: &[u8]) -> ()","parent":{"krate":0,"index":1551},"children":[],"decl_id":null,"docs":" Persist a value in storage under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Persist a value in storage under given key and prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142489,"byte_end":142547,"line_start":37,"line_end":37,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142677,"byte_end":142680,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"get","qualname":"::offchain::OffchainStorage::get","value":"fn (&self, prefix: &[u8], key: &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":1551},"children":[],"decl_id":null,"docs":" Retrieve a value from storage under given key and prefix.\n","sig":null,"attributes":[{"value":"/ Retrieve a value from storage under given key and prefix.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142611,"byte_end":142672,"line_start":40,"line_end":40,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142890,"byte_end":142905,"line_start":46,"line_end":46,"column_start":5,"column_end":20},"name":"compare_and_set","qualname":"::offchain::OffchainStorage::compare_and_set","value":"fn (&mut self, prefix: &[u8], key: &[u8], old_value: Option<&[u8]>, new_value: &[u8]) -> bool","parent":{"krate":0,"index":1551},"children":[],"decl_id":null,"docs":" Replace the value in storage if given old_value matches the current one.","sig":null,"attributes":[{"value":"/ Replace the value in storage if given old_value matches the current one.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142737,"byte_end":142813,"line_start":43,"line_end":43,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142815,"byte_end":142818,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if the value has been set and false otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142820,"byte_end":142885,"line_start":45,"line_end":45,"column_start":2,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143654,"byte_end":143664,"line_start":66,"line_end":66,"column_start":2,"column_end":12},"name":"PERSISTENT","qualname":"::offchain::StorageKind::PERSISTENT","value":"StorageKind::PERSISTENT","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" Persistent storage is non-revertible and not fork-aware. It means that any value\n set by the offchain worker triggered at block `N(hash1)` is persisted even\n if that block is reverted as non-canonical and is available for the worker\n that is re-run at block `N(hash2)`.\n This storage can be used by offchain workers to handle forks\n and coordinate offchain workers running on different forks.\n","sig":null,"attributes":[{"value":"/ Persistent storage is non-revertible and not fork-aware. It means that any value","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143236,"byte_end":143320,"line_start":60,"line_end":60,"column_start":2,"column_end":86}},{"value":"/ set by the offchain worker triggered at block `N(hash1)` is persisted even","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143322,"byte_end":143400,"line_start":61,"line_end":61,"column_start":2,"column_end":80}},{"value":"/ if that block is reverted as non-canonical and is available for the worker","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143402,"byte_end":143480,"line_start":62,"line_end":62,"column_start":2,"column_end":80}},{"value":"/ that is re-run at block `N(hash2)`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143482,"byte_end":143521,"line_start":63,"line_end":63,"column_start":2,"column_end":41}},{"value":"/ This storage can be used by offchain workers to handle forks","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143523,"byte_end":143587,"line_start":64,"line_end":64,"column_start":2,"column_end":66}},{"value":"/ and coordinate offchain workers running on different forks.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143589,"byte_end":143652,"line_start":65,"line_end":65,"column_start":2,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143943,"byte_end":143948,"line_start":71,"line_end":71,"column_start":2,"column_end":7},"name":"LOCAL","qualname":"::offchain::StorageKind::LOCAL","value":"StorageKind::LOCAL","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":" Local storage is revertible and fork-aware. It means that any value\n set by the offchain worker triggered at block `N(hash1)` is reverted\n if that block is reverted as non-canonical and is NOT available for the worker\n that is re-run at block `N(hash2)`.\n","sig":null,"attributes":[{"value":"/ Local storage is revertible and fork-aware. It means that any value","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143671,"byte_end":143742,"line_start":67,"line_end":67,"column_start":2,"column_end":73}},{"value":"/ set by the offchain worker triggered at block `N(hash1)` is reverted","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143744,"byte_end":143816,"line_start":68,"line_end":68,"column_start":2,"column_end":74}},{"value":"/ if that block is reverted as non-canonical and is NOT available for the worker","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143818,"byte_end":143900,"line_start":69,"line_end":69,"column_start":2,"column_end":84}},{"value":"/ that is re-run at block `N(hash2)`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143902,"byte_end":143941,"line_start":70,"line_end":70,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2808},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143221,"byte_end":143232,"line_start":59,"line_end":59,"column_start":10,"column_end":21},"name":"StorageKind","qualname":"::offchain::StorageKind","value":"StorageKind::{PERSISTENT, LOCAL}","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2812}],"decl_id":null,"docs":" A type of supported crypto.\n","sig":null,"attributes":[{"value":"/ A type of supported crypto.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143014,"byte_end":143045,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"repr(C)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143201,"byte_end":143211,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":2891},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144558,"byte_end":144571,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"HttpRequestId","qualname":"::offchain::HttpRequestId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque type for offchain http requests.\n","sig":null,"attributes":[{"value":"/ Opaque type for offchain http requests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144362,"byte_end":144405,"line_start":92,"line_end":92,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2942},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144905,"byte_end":144920,"line_start":108,"line_end":108,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::HttpError::DeadlineReached","value":"HttpError::DeadlineReached","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" The requested action couldn't been completed within a deadline.\n","sig":null,"attributes":[{"value":"/ The requested action couldn't been completed within a deadline.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144836,"byte_end":144903,"line_start":107,"line_end":107,"column_start":2,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2945},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144984,"byte_end":144991,"line_start":110,"line_end":110,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::HttpError::IoError","value":"HttpError::IoError","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" There was an IO Error while processing the request.\n","sig":null,"attributes":[{"value":"/ There was an IO Error while processing the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144927,"byte_end":144982,"line_start":109,"line_end":109,"column_start":2,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2948},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145053,"byte_end":145060,"line_start":112,"line_end":112,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::offchain::HttpError::Invalid","value":"HttpError::Invalid","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" The ID of the request is invalid in this context.\n","sig":null,"attributes":[{"value":"/ The ID of the request is invalid in this context.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144998,"byte_end":145051,"line_start":111,"line_end":111,"column_start":2,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":2941},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144823,"byte_end":144832,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"HttpError","qualname":"::offchain::HttpError","value":"HttpError::{DeadlineReached, IoError, Invalid}","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948}],"decl_id":null,"docs":" An error enum returned by some http methods.\n","sig":null,"attributes":[{"value":"/ An error enum returned by some http methods.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144674,"byte_end":144722,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"repr(C)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":144803,"byte_end":144813,"line_start":105,"line_end":105,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2983},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145876,"byte_end":145891,"line_start":141,"line_end":141,"column_start":2,"column_end":17},"name":"DeadlineReached","qualname":"::offchain::HttpRequestStatus::DeadlineReached","value":"HttpRequestStatus::DeadlineReached","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" Deadline was reached while we waited for this request to finish.","sig":null,"attributes":[{"value":"/ Deadline was reached while we waited for this request to finish.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145681,"byte_end":145749,"line_start":137,"line_end":137,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145751,"byte_end":145754,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ Note the deadline is controlled by the calling part, it not necessarily","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145756,"byte_end":145831,"line_start":139,"line_end":139,"column_start":2,"column_end":77}},{"value":"/ means that the request has timed out.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145833,"byte_end":145874,"line_start":140,"line_end":140,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2985},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146114,"byte_end":146121,"line_start":147,"line_end":147,"column_start":2,"column_end":9},"name":"IoError","qualname":"::offchain::HttpRequestStatus::IoError","value":"HttpRequestStatus::IoError","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" An error has occurred during the request, for example a timeout or the\n remote has closed our socket.","sig":null,"attributes":[{"value":"/ An error has occurred during the request, for example a timeout or the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145894,"byte_end":145968,"line_start":142,"line_end":142,"column_start":2,"column_end":76}},{"value":"/ remote has closed our socket.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145970,"byte_end":146003,"line_start":143,"line_end":143,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146005,"byte_end":146008,"line_start":144,"line_end":144,"column_start":2,"column_end":5}},{"value":"/ The request is now considered destroyed. To retry the request you need","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146010,"byte_end":146084,"line_start":145,"line_end":145,"column_start":2,"column_end":76}},{"value":"/ to construct it again.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146086,"byte_end":146112,"line_start":146,"line_end":146,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2987},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146171,"byte_end":146178,"line_start":149,"line_end":149,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::offchain::HttpRequestStatus::Invalid","value":"HttpRequestStatus::Invalid","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" The passed ID is invalid in this context.\n","sig":null,"attributes":[{"value":"/ The passed ID is invalid in this context.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146124,"byte_end":146169,"line_start":148,"line_end":148,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2989},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146235,"byte_end":146243,"line_start":151,"line_end":151,"column_start":2,"column_end":10},"name":"Finished","qualname":"::offchain::HttpRequestStatus::Finished","value":"HttpRequestStatus::Finished(u16)","parent":{"krate":0,"index":2982},"children":[],"decl_id":null,"docs":" The request has finished with given status code.\n","sig":null,"attributes":[{"value":"/ The request has finished with given status code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146181,"byte_end":146233,"line_start":150,"line_end":150,"column_start":2,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":2982},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145660,"byte_end":145677,"line_start":136,"line_end":136,"column_start":10,"column_end":27},"name":"HttpRequestStatus","qualname":"::offchain::HttpRequestStatus","value":"HttpRequestStatus::{DeadlineReached, IoError, Invalid, Finished}","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2989}],"decl_id":null,"docs":" Status of the HTTP request\n","sig":null,"attributes":[{"value":"/ Status of the HTTP request","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145539,"byte_end":145569,"line_start":134,"line_end":134,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3019},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147158,"byte_end":147176,"line_start":183,"line_end":183,"column_start":12,"column_end":30},"name":"OpaqueNetworkState","qualname":"::offchain::OpaqueNetworkState","value":"OpaqueNetworkState { peer_id, external_addresses }","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021}],"decl_id":null,"docs":" A blob to hold information about the local node's network state\n without committing to its format.\n","sig":null,"attributes":[{"value":"/ A blob to hold information about the local node's network state","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146920,"byte_end":146987,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/ without committing to its format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146988,"byte_end":147025,"line_start":180,"line_end":180,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3020},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147215,"byte_end":147222,"line_start":185,"line_end":185,"column_start":6,"column_end":13},"name":"peer_id","qualname":"::offchain::OpaqueNetworkState::peer_id","value":"offchain::OpaquePeerId","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" PeerId of the local node.\n","sig":null,"attributes":[{"value":"/ PeerId of the local node.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147180,"byte_end":147209,"line_start":184,"line_end":184,"column_start":2,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3021},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147303,"byte_end":147321,"line_start":187,"line_end":187,"column_start":6,"column_end":24},"name":"external_addresses","qualname":"::offchain::OpaqueNetworkState::external_addresses","value":"std::vec::Vec<offchain::OpaqueMultiaddr>","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" List of addresses the node knows it can be reached as.\n","sig":null,"attributes":[{"value":"/ List of addresses the node knows it can be reached as.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147239,"byte_end":147297,"line_start":186,"line_end":186,"column_start":2,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147512,"byte_end":147524,"line_start":192,"line_end":192,"column_start":12,"column_end":24},"name":"OpaquePeerId","qualname":"::offchain::OpaquePeerId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold a `PeerId` without committing to its format.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold a `PeerId` without committing to its format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147348,"byte_end":147416,"line_start":190,"line_end":190,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147599,"byte_end":147602,"line_start":196,"line_end":196,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaquePeerId>::new","value":"fn (vec: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `OpaquePeerId`\n","sig":null,"attributes":[{"value":"/ Create new `OpaquePeerId`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147561,"byte_end":147590,"line_start":195,"line_end":195,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3090},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147811,"byte_end":147826,"line_start":203,"line_end":203,"column_start":12,"column_end":27},"name":"OpaqueMultiaddr","qualname":"::offchain::OpaqueMultiaddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Simple blob to hold a `Multiaddr` without committing to its format.\n","sig":null,"attributes":[{"value":"/ Simple blob to hold a `Multiaddr` without committing to its format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147653,"byte_end":147724,"line_start":201,"line_end":201,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147907,"byte_end":147910,"line_start":207,"line_end":207,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaqueMultiaddr>::new","value":"fn (vec: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `OpaqueMultiaddr`\n","sig":null,"attributes":[{"value":"/ Create new `OpaqueMultiaddr`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147866,"byte_end":147898,"line_start":206,"line_end":206,"column_start":2,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3128},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148108,"byte_end":148117,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::offchain::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque timestamp type\n","sig":null,"attributes":[{"value":"/ Opaque timestamp type","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147964,"byte_end":147989,"line_start":212,"line_end":212,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3177},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148261,"byte_end":148269,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"Duration","qualname":"::offchain::Duration","value":"","parent":null,"children":[],"decl_id":null,"docs":" Duration type\n","sig":null,"attributes":[{"value":"/ Duration type","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148125,"byte_end":148142,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148369,"byte_end":148380,"line_start":222,"line_end":222,"column_start":9,"column_end":20},"name":"from_millis","qualname":"<Duration>::from_millis","value":"fn (millis: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new duration representing given number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create new duration representing given number of milliseconds.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148294,"byte_end":148360,"line_start":221,"line_end":221,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148497,"byte_end":148503,"line_start":227,"line_end":227,"column_start":9,"column_end":15},"name":"millis","qualname":"<Duration>::millis","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns number of milliseconds this Duration represents.\n","sig":null,"attributes":[{"value":"/ Returns number of milliseconds this Duration represents.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148428,"byte_end":148488,"line_start":226,"line_end":226,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148627,"byte_end":148643,"line_start":234,"line_end":234,"column_start":9,"column_end":25},"name":"from_unix_millis","qualname":"<Timestamp>::from_unix_millis","value":"fn (millis: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Timestamp` given unix timestamp in milliseconds.\n","sig":null,"attributes":[{"value":"/ Creates new `Timestamp` given unix timestamp in milliseconds.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148553,"byte_end":148618,"line_start":233,"line_end":233,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148748,"byte_end":148751,"line_start":239,"line_end":239,"column_start":9,"column_end":12},"name":"add","qualname":"<Timestamp>::add","value":"fn (&self, duration: Duration) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Increase the timestamp by given `Duration`.\n","sig":null,"attributes":[{"value":"/ Increase the timestamp by given `Duration`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148692,"byte_end":148739,"line_start":238,"line_end":238,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148901,"byte_end":148904,"line_start":244,"line_end":244,"column_start":9,"column_end":12},"name":"sub","qualname":"<Timestamp>::sub","value":"fn (&self, duration: Duration) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Decrease the timestamp by given `Duration`\n","sig":null,"attributes":[{"value":"/ Decrease the timestamp by given `Duration`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148846,"byte_end":148892,"line_start":243,"line_end":243,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149077,"byte_end":149081,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"name":"diff","qualname":"<Timestamp>::diff","value":"fn (&self, other: &Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns a saturated difference (Duration) between two Timestamps.\n","sig":null,"attributes":[{"value":"/ Returns a saturated difference (Duration) between two Timestamps.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148999,"byte_end":149068,"line_start":248,"line_end":248,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149225,"byte_end":149236,"line_start":254,"line_end":254,"column_start":9,"column_end":20},"name":"unix_millis","qualname":"<Timestamp>::unix_millis","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return number of milliseconds since UNIX epoch.\n","sig":null,"attributes":[{"value":"/ Return number of milliseconds since UNIX epoch.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149165,"byte_end":149216,"line_start":253,"line_end":253,"column_start":2,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149423,"byte_end":149438,"line_start":264,"line_end":264,"column_start":2,"column_end":17},"name":"TransactionPool","qualname":"::offchain::Capability::TransactionPool","value":"Capability::TransactionPool","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Access to transaction pool.\n","sig":null,"attributes":[{"value":"/ Access to transaction pool.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149390,"byte_end":149421,"line_start":263,"line_end":263,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3230},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149471,"byte_end":149475,"line_start":266,"line_end":266,"column_start":2,"column_end":6},"name":"Http","qualname":"::offchain::Capability::Http","value":"Capability::Http","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" External http calls.\n","sig":null,"attributes":[{"value":"/ External http calls.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149445,"byte_end":149469,"line_start":265,"line_end":265,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149504,"byte_end":149512,"line_start":268,"line_end":268,"column_start":2,"column_end":10},"name":"Keystore","qualname":"::offchain::Capability::Keystore","value":"Capability::Keystore","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Keystore access.\n","sig":null,"attributes":[{"value":"/ Keystore access.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149482,"byte_end":149502,"line_start":267,"line_end":267,"column_start":2,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149543,"byte_end":149553,"line_start":270,"line_end":270,"column_start":2,"column_end":12},"name":"Randomness","qualname":"::offchain::Capability::Randomness","value":"Capability::Randomness","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Randomness source.\n","sig":null,"attributes":[{"value":"/ Randomness source.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149519,"byte_end":149541,"line_start":269,"line_end":269,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149597,"byte_end":149609,"line_start":272,"line_end":272,"column_start":2,"column_end":14},"name":"NetworkState","qualname":"::offchain::Capability::NetworkState","value":"Capability::NetworkState","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Access to opaque network state.\n","sig":null,"attributes":[{"value":"/ Access to opaque network state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149560,"byte_end":149595,"line_start":271,"line_end":271,"column_start":2,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3242},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149664,"byte_end":149684,"line_start":274,"line_end":274,"column_start":2,"column_end":22},"name":"OffchainWorkerDbRead","qualname":"::offchain::Capability::OffchainWorkerDbRead","value":"Capability::OffchainWorkerDbRead","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Access to offchain worker DB (read only).\n","sig":null,"attributes":[{"value":"/ Access to offchain worker DB (read only).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149617,"byte_end":149662,"line_start":273,"line_end":273,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3245},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149736,"byte_end":149757,"line_start":276,"line_end":276,"column_start":2,"column_end":23},"name":"OffchainWorkerDbWrite","qualname":"::offchain::Capability::OffchainWorkerDbWrite","value":"Capability::OffchainWorkerDbWrite","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Access to offchain worker DB (writes).\n","sig":null,"attributes":[{"value":"/ Access to offchain worker DB (writes).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149692,"byte_end":149734,"line_start":275,"line_end":275,"column_start":2,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3226},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149376,"byte_end":149386,"line_start":262,"line_end":262,"column_start":10,"column_end":20},"name":"Capability","qualname":"::offchain::Capability","value":"Capability::{TransactionPool, Http, Keystore, Randomness, NetworkState, OffchainWorkerDbRead, OffchainWorkerDbWrite}","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245}],"decl_id":null,"docs":" Execution context extra capabilities.\n","sig":null,"attributes":[{"value":"/ Execution context extra capabilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149268,"byte_end":149309,"line_start":259,"line_end":259,"column_start":1,"column_end":42}},{"value":"repr(u8)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149355,"byte_end":149366,"line_start":261,"line_end":261,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3259},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149849,"byte_end":149861,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::offchain::Capabilities","value":"","parent":null,"children":[],"decl_id":null,"docs":" A set of capabilities\n","sig":null,"attributes":[{"value":"/ A set of capabilities","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149767,"byte_end":149792,"line_start":279,"line_end":279,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149961,"byte_end":149965,"line_start":285,"line_end":285,"column_start":9,"column_end":13},"name":"none","qualname":"<Capabilities>::none","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an object representing an empty set of capabilities.\n","sig":null,"attributes":[{"value":"/ Return an object representing an empty set of capabilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149889,"byte_end":149952,"line_start":284,"line_end":284,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150061,"byte_end":150064,"line_start":290,"line_end":290,"column_start":9,"column_end":12},"name":"all","qualname":"<Capabilities>::all","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an object representing all capabilities enabled.\n","sig":null,"attributes":[{"value":"/ Return an object representing all capabilities enabled.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149993,"byte_end":150052,"line_start":289,"line_end":289,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150295,"byte_end":150313,"line_start":298,"line_end":298,"column_start":9,"column_end":27},"name":"rich_offchain_call","qualname":"<Capabilities>::rich_offchain_call","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return capabilities for rich offchain calls.","sig":null,"attributes":[{"value":"/ Return capabilities for rich offchain calls.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150106,"byte_end":150154,"line_start":294,"line_end":294,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150156,"byte_end":150159,"line_start":295,"line_end":295,"column_start":2,"column_end":5}},{"value":"/ Those calls should be allowed to sign and submit transactions","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150161,"byte_end":150226,"line_start":296,"line_end":296,"column_start":2,"column_end":67}},{"value":"/ and access offchain workers database (but read only!).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150228,"byte_end":150286,"line_start":297,"line_end":297,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150499,"byte_end":150502,"line_start":307,"line_end":307,"column_start":9,"column_end":12},"name":"has","qualname":"<Capabilities>::has","value":"fn (&self, capability: Capability) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if particular capability is enabled.\n","sig":null,"attributes":[{"value":"/ Check if particular capability is enabled.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150444,"byte_end":150490,"line_start":306,"line_end":306,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150655,"byte_end":150662,"line_start":312,"line_end":312,"column_start":9,"column_end":16},"name":"has_all","qualname":"<Capabilities>::has_all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this capability object represents all capabilities.\n","sig":null,"attributes":[{"value":"/ Check if this capability object represents all capabilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150582,"byte_end":150646,"line_start":311,"line_end":311,"column_start":2,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1596},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150939,"byte_end":150952,"line_start":324,"line_end":324,"column_start":11,"column_end":24},"name":"Externalities","qualname":"::offchain::Externalities","value":"Externalities: Send","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611}],"decl_id":null,"docs":" An extended externalities for offchain workers.\n","sig":null,"attributes":[{"value":"/ An extended externalities for offchain workers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150877,"byte_end":150928,"line_start":323,"line_end":323,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151172,"byte_end":151184,"line_start":329,"line_end":329,"column_start":5,"column_end":17},"name":"is_validator","qualname":"::offchain::Externalities::is_validator","value":"fn (&self) -> bool","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Returns if the local node is a potential validator.","sig":null,"attributes":[{"value":"/ Returns if the local node is a potential validator.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150962,"byte_end":151017,"line_start":325,"line_end":325,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151019,"byte_end":151022,"line_start":326,"line_end":326,"column_start":2,"column_end":5}},{"value":"/ Even if this function returns `true`, it does not mean that any keys are configured","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151024,"byte_end":151111,"line_start":327,"line_end":327,"column_start":2,"column_end":89}},{"value":"/ and that the validator is registered in the chain.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151113,"byte_end":151167,"line_start":328,"line_end":328,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151269,"byte_end":151282,"line_start":332,"line_end":332,"column_start":5,"column_end":18},"name":"network_state","qualname":"::offchain::Externalities::network_state","value":"fn (&self) -> Result<OpaqueNetworkState, ()>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Returns information about the local node's network state.\n","sig":null,"attributes":[{"value":"/ Returns information about the local node's network state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151203,"byte_end":151264,"line_start":331,"line_end":331,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151378,"byte_end":151387,"line_start":335,"line_end":335,"column_start":5,"column_end":14},"name":"timestamp","qualname":"::offchain::Externalities::timestamp","value":"fn (&mut self) -> Timestamp","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Returns current UNIX timestamp (in millis)\n","sig":null,"attributes":[{"value":"/ Returns current UNIX timestamp (in millis)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151327,"byte_end":151373,"line_start":334,"line_end":334,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151472,"byte_end":151483,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"sleep_until","qualname":"::offchain::Externalities::sleep_until","value":"fn (&mut self, deadline: Timestamp) -> ()","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Pause the execution until `deadline` is reached.\n","sig":null,"attributes":[{"value":"/ Pause the execution until `deadline` is reached.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151415,"byte_end":151467,"line_start":337,"line_end":337,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151690,"byte_end":151701,"line_start":344,"line_end":344,"column_start":5,"column_end":16},"name":"random_seed","qualname":"::offchain::Externalities::random_seed","value":"fn (&mut self) -> [u8; 32]","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Returns a random seed.","sig":null,"attributes":[{"value":"/ Returns a random seed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151519,"byte_end":151545,"line_start":340,"line_end":340,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151547,"byte_end":151550,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ This is a truly random non deterministic seed generated by host environment.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151552,"byte_end":151632,"line_start":342,"line_end":342,"column_start":2,"column_end":82}},{"value":"/ Obviously fine in the off-chain worker context.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151634,"byte_end":151685,"line_start":343,"line_end":343,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151939,"byte_end":151956,"line_start":350,"line_end":350,"column_start":5,"column_end":22},"name":"local_storage_set","qualname":"::offchain::Externalities::local_storage_set","value":"fn (&mut self, kind: StorageKind, key: &[u8], value: &[u8]) -> ()","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Sets a value in the local storage.","sig":null,"attributes":[{"value":"/ Sets a value in the local storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151728,"byte_end":151766,"line_start":346,"line_end":346,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151768,"byte_end":151771,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151773,"byte_end":151848,"line_start":348,"line_end":348,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It IS persisted between runs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":151850,"byte_end":151934,"line_start":349,"line_end":349,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152460,"byte_end":152489,"line_start":361,"line_end":361,"column_start":5,"column_end":34},"name":"local_storage_compare_and_set","qualname":"::offchain::Externalities::local_storage_compare_and_set","value":"fn (&mut self, kind: StorageKind, key: &[u8], old_value: Option<&[u8]>, new_value: &[u8]) -> bool","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Sets a value in the local storage if it matches current value.","sig":null,"attributes":[{"value":"/ Sets a value in the local storage if it matches current value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152016,"byte_end":152082,"line_start":352,"line_end":352,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152084,"byte_end":152087,"line_start":353,"line_end":353,"column_start":2,"column_end":5}},{"value":"/ Since multiple offchain workers may be running concurrently, to prevent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152089,"byte_end":152164,"line_start":354,"line_end":354,"column_start":2,"column_end":77}},{"value":"/ data races use CAS to coordinate between them.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152166,"byte_end":152216,"line_start":355,"line_end":355,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152218,"byte_end":152221,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if the value has been set, `false` otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152223,"byte_end":152287,"line_start":357,"line_end":357,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152289,"byte_end":152292,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152294,"byte_end":152369,"line_start":359,"line_end":359,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It IS persisted between runs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152371,"byte_end":152455,"line_start":360,"line_end":360,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152887,"byte_end":152904,"line_start":374,"line_end":374,"column_start":5,"column_end":22},"name":"local_storage_get","qualname":"::offchain::Externalities::local_storage_get","value":"fn (&mut self, kind: StorageKind, key: &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Gets a value from the local storage.","sig":null,"attributes":[{"value":"/ Gets a value from the local storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152601,"byte_end":152641,"line_start":369,"line_end":369,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152643,"byte_end":152646,"line_start":370,"line_end":370,"column_start":2,"column_end":5}},{"value":"/ If the value does not exist in the storage `None` will be returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152648,"byte_end":152719,"line_start":371,"line_end":371,"column_start":2,"column_end":73}},{"value":"/ Note this storage is not part of the consensus, it's only accessible by","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152721,"byte_end":152796,"line_start":372,"line_end":372,"column_start":2,"column_end":77}},{"value":"/ offchain worker tasks running on the same machine. It IS persisted between runs.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152798,"byte_end":152882,"line_start":373,"line_end":373,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153323,"byte_end":153341,"line_start":385,"line_end":385,"column_start":5,"column_end":23},"name":"http_request_start","qualname":"::offchain::Externalities::http_request_start","value":"fn (&mut self, method: &str, uri: &str, meta: &[u8]) -> Result<HttpRequestId, ()>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Initiates a http request given HTTP verb and the URL.","sig":null,"attributes":[{"value":"/ Initiates a http request given HTTP verb and the URL.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":152969,"byte_end":153026,"line_start":376,"line_end":376,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153028,"byte_end":153031,"line_start":377,"line_end":377,"column_start":2,"column_end":5}},{"value":"/ Meta is a future-reserved field containing additional, parity-scale-codec encoded parameters.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153033,"byte_end":153130,"line_start":378,"line_end":378,"column_start":2,"column_end":99}},{"value":"/ Returns the id of newly started request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153132,"byte_end":153176,"line_start":379,"line_end":379,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153178,"byte_end":153181,"line_start":380,"line_end":380,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153183,"byte_end":153207,"line_start":381,"line_end":381,"column_start":2,"column_end":26}},{"value":"/ - No new request identifier could be allocated.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153209,"byte_end":153260,"line_start":382,"line_end":382,"column_start":2,"column_end":53}},{"value":"/ - The method or URI contain invalid characters.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153262,"byte_end":153313,"line_start":383,"line_end":383,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153315,"byte_end":153318,"line_start":384,"line_end":384,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153933,"byte_end":153956,"line_start":405,"line_end":405,"column_start":5,"column_end":28},"name":"http_request_add_header","qualname":"::offchain::Externalities::http_request_add_header","value":"fn (&mut self, request_id: HttpRequestId, name: &str, value: &str) -> Result<(), ()>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Append header to the request.","sig":null,"attributes":[{"value":"/ Append header to the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153434,"byte_end":153467,"line_start":392,"line_end":392,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153469,"byte_end":153472,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ Calling this function multiple times with the same header name continues appending new","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153474,"byte_end":153564,"line_start":394,"line_end":394,"column_start":2,"column_end":92}},{"value":"/ headers. In other words, headers are never replaced.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153566,"byte_end":153622,"line_start":395,"line_end":395,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153624,"byte_end":153627,"line_start":396,"line_end":396,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153629,"byte_end":153653,"line_start":397,"line_end":397,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153655,"byte_end":153695,"line_start":398,"line_end":398,"column_start":2,"column_end":42}},{"value":"/ - You have called `http_request_write_body` on that request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153697,"byte_end":153761,"line_start":399,"line_end":399,"column_start":2,"column_end":66}},{"value":"/ - The name or value contain invalid characters.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153763,"byte_end":153814,"line_start":400,"line_end":400,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153816,"byte_end":153819,"line_start":401,"line_end":401,"column_start":2,"column_end":5}},{"value":"/ An error doesn't poison the request, and you can continue as if the call had never been","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153821,"byte_end":153912,"line_start":402,"line_end":402,"column_start":2,"column_end":93}},{"value":"/ made.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153914,"byte_end":153923,"line_start":403,"line_end":403,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":153925,"byte_end":153928,"line_start":404,"line_end":404,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154695,"byte_end":154718,"line_start":427,"line_end":427,"column_start":5,"column_end":28},"name":"http_request_write_body","qualname":"::offchain::Externalities::http_request_write_body","value":"fn (&mut self, request_id: HttpRequestId, chunk: &[u8], deadline: Option<Timestamp>) -> Result<(), HttpError>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Write a chunk of request body.","sig":null,"attributes":[{"value":"/ Write a chunk of request body.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154052,"byte_end":154086,"line_start":412,"line_end":412,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154088,"byte_end":154091,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ Calling this function with a non-empty slice may or may not start the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154093,"byte_end":154166,"line_start":414,"line_end":414,"column_start":2,"column_end":75}},{"value":"/ HTTP request. Calling this function with an empty chunks finalizes the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154168,"byte_end":154242,"line_start":415,"line_end":415,"column_start":2,"column_end":76}},{"value":"/ request and always starts it. It is no longer valid to write more data","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154244,"byte_end":154318,"line_start":416,"line_end":416,"column_start":2,"column_end":76}},{"value":"/ afterwards.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154320,"byte_end":154335,"line_start":417,"line_end":417,"column_start":2,"column_end":17}},{"value":"/ Passing `None` as deadline blocks forever.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154337,"byte_end":154383,"line_start":418,"line_end":418,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154385,"byte_end":154388,"line_start":419,"line_end":419,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154390,"byte_end":154414,"line_start":420,"line_end":420,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154416,"byte_end":154456,"line_start":421,"line_end":421,"column_start":2,"column_end":42}},{"value":"/ - `http_response_wait` has already been called on this request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154458,"byte_end":154525,"line_start":422,"line_end":422,"column_start":2,"column_end":69}},{"value":"/ - The deadline is reached.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154527,"byte_end":154557,"line_start":423,"line_end":423,"column_start":2,"column_end":32}},{"value":"/ - An I/O error has happened, for example the remote has closed our","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154559,"byte_end":154629,"line_start":424,"line_end":424,"column_start":2,"column_end":72}},{"value":"/   request. The request is then considered invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154631,"byte_end":154685,"line_start":425,"line_end":425,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154687,"byte_end":154690,"line_start":426,"line_end":426,"column_start":2,"column_end":5}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155289,"byte_end":155307,"line_start":444,"line_end":444,"column_start":5,"column_end":23},"name":"http_response_wait","qualname":"::offchain::Externalities::http_response_wait","value":"fn (&mut self, ids: &[HttpRequestId], deadline: Option<Timestamp>) -> Vec<HttpRequestStatus>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Block and wait for the responses for given requests.","sig":null,"attributes":[{"value":"/ Block and wait for the responses for given requests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154839,"byte_end":154895,"line_start":434,"line_end":434,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154897,"byte_end":154900,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ Returns a vector of request statuses (the len is the same as ids).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154902,"byte_end":154972,"line_start":436,"line_end":436,"column_start":2,"column_end":72}},{"value":"/ Note that if deadline is not provided the method will block indefinitely,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":154974,"byte_end":155051,"line_start":437,"line_end":437,"column_start":2,"column_end":79}},{"value":"/ otherwise unready responses will produce `DeadlineReached` status.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155053,"byte_end":155123,"line_start":438,"line_end":438,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155125,"byte_end":155128,"line_start":439,"line_end":439,"column_start":2,"column_end":5}},{"value":"/ If a response returns an `IoError`, it is then considered destroyed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155130,"byte_end":155202,"line_start":440,"line_end":440,"column_start":2,"column_end":74}},{"value":"/ Its id is then invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155204,"byte_end":155231,"line_start":441,"line_end":441,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155233,"byte_end":155236,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ Passing `None` as deadline blocks forever.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155238,"byte_end":155284,"line_start":443,"line_end":443,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155768,"byte_end":155789,"line_start":459,"line_end":459,"column_start":5,"column_end":26},"name":"http_response_headers","qualname":"::offchain::Externalities::http_response_headers","value":"fn (&mut self, request_id: HttpRequestId) -> Vec<(Vec<u8>, Vec<u8>)>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Read all response headers.","sig":null,"attributes":[{"value":"/ Read all response headers.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155409,"byte_end":155439,"line_start":450,"line_end":450,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155441,"byte_end":155444,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ Returns a vector of pairs `(HeaderKey, HeaderValue)`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155446,"byte_end":155503,"line_start":452,"line_end":452,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155505,"byte_end":155508,"line_start":453,"line_end":453,"column_start":2,"column_end":5}},{"value":"/ Dispatches the request if it hasn't been done yet. It is no longer","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155510,"byte_end":155580,"line_start":454,"line_end":454,"column_start":2,"column_end":72}},{"value":"/ valid to modify the headers or write data to the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155582,"byte_end":155643,"line_start":455,"line_end":455,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155645,"byte_end":155648,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ Returns an empty list if the identifier is unknown/invalid, hasn't","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155650,"byte_end":155720,"line_start":457,"line_end":457,"column_start":2,"column_end":72}},{"value":"/ received a response, or has finished.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155722,"byte_end":155763,"line_start":458,"line_end":458,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156657,"byte_end":156680,"line_start":483,"line_end":483,"column_start":5,"column_end":28},"name":"http_response_read_body","qualname":"::offchain::Externalities::http_response_read_body","value":"fn (&mut self, request_id: HttpRequestId, buffer: &mut [u8], deadline: Option<Timestamp>) -> Result<usize, HttpError>","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Read a chunk of body response to given buffer.","sig":null,"attributes":[{"value":"/ Read a chunk of body response to given buffer.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155865,"byte_end":155915,"line_start":464,"line_end":464,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155917,"byte_end":155920,"line_start":465,"line_end":465,"column_start":2,"column_end":5}},{"value":"/ Dispatches the request if it hasn't been done yet. It is no longer","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155922,"byte_end":155992,"line_start":466,"line_end":466,"column_start":2,"column_end":72}},{"value":"/ valid to modify the headers or write data to the request.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":155994,"byte_end":156055,"line_start":467,"line_end":467,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156057,"byte_end":156060,"line_start":468,"line_end":468,"column_start":2,"column_end":5}},{"value":"/ Returns the number of bytes written or an error in case a deadline","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156062,"byte_end":156132,"line_start":469,"line_end":469,"column_start":2,"column_end":72}},{"value":"/ is reached or server closed the connection.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156134,"byte_end":156181,"line_start":470,"line_end":470,"column_start":2,"column_end":49}},{"value":"/ Passing `None` as a deadline blocks forever.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156183,"byte_end":156231,"line_start":471,"line_end":471,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156233,"byte_end":156236,"line_start":472,"line_end":472,"column_start":2,"column_end":5}},{"value":"/ If `Ok(0)` or `Err(IoError)` is returned, the request is considered","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156238,"byte_end":156309,"line_start":473,"line_end":473,"column_start":2,"column_end":73}},{"value":"/ destroyed. Doing another read or getting the response's headers, for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156311,"byte_end":156383,"line_start":474,"line_end":474,"column_start":2,"column_end":74}},{"value":"/ example, is then invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156385,"byte_end":156414,"line_start":475,"line_end":475,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156416,"byte_end":156419,"line_start":476,"line_end":476,"column_start":2,"column_end":5}},{"value":"/ Returns an error if:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156421,"byte_end":156445,"line_start":477,"line_end":477,"column_start":2,"column_end":26}},{"value":"/ - The request identifier is invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156447,"byte_end":156487,"line_start":478,"line_end":478,"column_start":2,"column_end":42}},{"value":"/ - The deadline is reached.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156489,"byte_end":156519,"line_start":479,"line_end":479,"column_start":2,"column_end":32}},{"value":"/ - An I/O error has happened, for example the remote has closed our","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156521,"byte_end":156591,"line_start":480,"line_end":480,"column_start":2,"column_end":72}},{"value":"/   request. The request is then considered invalid.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156593,"byte_end":156647,"line_start":481,"line_end":481,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156649,"byte_end":156652,"line_start":482,"line_end":482,"column_start":2,"column_end":5}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":158956,"byte_end":158976,"line_start":566,"line_end":566,"column_start":12,"column_end":32},"name":"LimitedExternalities","qualname":"::offchain::LimitedExternalities","value":"LimitedExternalities {  }","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632}],"decl_id":null,"docs":" An `OffchainExternalities` implementation with limited capabilities.\n","sig":null,"attributes":[{"value":"/ An `OffchainExternalities` implementation with limited capabilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":158872,"byte_end":158944,"line_start":565,"line_end":565,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":159138,"byte_end":159141,"line_start":573,"line_end":573,"column_start":9,"column_end":12},"name":"new","qualname":"<LimitedExternalities<T>>::new","value":"fn (capabilities: Capabilities, externalities: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new externalities limited to given `capabilities`.\n","sig":null,"attributes":[{"value":"/ Create new externalities limited to given `capabilities`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":159068,"byte_end":159129,"line_start":572,"line_end":572,"column_start":2,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162647,"byte_end":162658,"line_start":681,"line_end":681,"column_start":13,"column_end":24},"name":"OffchainExt","qualname":"::offchain::OffchainExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The offchain extension that will be registered at the Substrate externalities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162776,"byte_end":162779,"line_start":687,"line_end":687,"column_start":9,"column_end":12},"name":"new","qualname":"<OffchainExt>::new","value":"fn <O> (offchain: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162731,"byte_end":162767,"line_start":686,"line_end":686,"column_start":2,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":1657},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163133,"byte_end":163148,"line_start":698,"line_end":698,"column_start":11,"column_end":26},"name":"TransactionPool","qualname":"::offchain::TransactionPool","value":"TransactionPool","parent":null,"children":[{"krate":0,"index":1658}],"decl_id":null,"docs":" Abstraction over transaction pool.","sig":null,"attributes":[{"value":"/ Abstraction over transaction pool.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162864,"byte_end":162902,"line_start":692,"line_end":692,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162903,"byte_end":162906,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ This trait is currently used within the `ExternalitiesExtension`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162907,"byte_end":162975,"line_start":694,"line_end":694,"column_start":1,"column_end":69}},{"value":"/ to provide offchain calls with access to the transaction pool without","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162976,"byte_end":163049,"line_start":695,"line_end":695,"column_start":1,"column_end":74}},{"value":"/ tight coupling with any pool implementation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163050,"byte_end":163098,"line_start":696,"line_end":696,"column_start":1,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163099,"byte_end":163122,"line_start":697,"line_end":697,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163259,"byte_end":163277,"line_start":702,"line_end":702,"column_start":5,"column_end":23},"name":"submit_transaction","qualname":"::offchain::TransactionPool::submit_transaction","value":"fn (&mut self, extrinsic: Vec<u8>) -> Result<(), ()>","parent":{"krate":0,"index":1657},"children":[],"decl_id":null,"docs":" Submit transaction.","sig":null,"attributes":[{"value":"/ Submit transaction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163152,"byte_end":163175,"line_start":699,"line_end":699,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163177,"byte_end":163180,"line_start":700,"line_end":700,"column_start":2,"column_end":5}},{"value":"/ The transaction will end up in the pool and be propagated to others.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163182,"byte_end":163254,"line_start":701,"line_end":701,"column_start":2,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3284},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163471,"byte_end":163489,"line_start":708,"line_end":708,"column_start":13,"column_end":31},"name":"TransactionPoolExt","qualname":"::offchain::TransactionPoolExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" An externalities extension to submit transactions to the pool.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163637,"byte_end":163640,"line_start":714,"line_end":714,"column_start":9,"column_end":12},"name":"new","qualname":"<TransactionPoolExt>::new","value":"fn <O> (pool: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TransactionPoolExt`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TransactionPoolExt`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163578,"byte_end":163628,"line_start":713,"line_end":713,"column_start":2,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1662},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sandbox","qualname":"::sandbox","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":3294},{"krate":0,"index":3303},{"krate":0,"index":3298},{"krate":0,"index":3296},{"krate":0,"index":3309},{"krate":0,"index":3336},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3323},{"krate":0,"index":3318},{"krate":0,"index":3316},{"krate":0,"index":3338},{"krate":0,"index":3362},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3349},{"krate":0,"index":3344},{"krate":0,"index":3342},{"krate":0,"index":3364},{"krate":0,"index":3390},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3373},{"krate":0,"index":3368},{"krate":0,"index":3366},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671}],"decl_id":null,"docs":" Definition of a sandbox environment.\n","sig":null,"attributes":[{"value":"! Definition of a sandbox environment.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183249,"byte_end":183289,"line_start":18,"line_end":18,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183468,"byte_end":183477,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"HostError","qualname":"::sandbox::HostError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error error that can be returned from host function.\n","sig":null,"attributes":[{"value":"/ Error error that can be returned from host function.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183343,"byte_end":183399,"line_start":23,"line_end":23,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3310},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183779,"byte_end":183787,"line_start":35,"line_end":35,"column_start":2,"column_end":10},"name":"Function","qualname":"::sandbox::ExternEntity::Function","value":"ExternEntity::Function(u32)","parent":{"krate":0,"index":3309},"children":[],"decl_id":null,"docs":" Function that is specified by an index in a default table of\n a module that creates the sandbox.\n","sig":null,"attributes":[{"value":"/ Function that is specified by an index in a default table of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183650,"byte_end":183714,"line_start":32,"line_end":32,"column_start":2,"column_end":66}},{"value":"/ a module that creates the sandbox.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183716,"byte_end":183754,"line_start":33,"line_end":33,"column_start":2,"column_end":40}},{"value":"codec(index = \"1\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183756,"byte_end":183777,"line_start":34,"line_end":34,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3313},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183943,"byte_end":183949,"line_start":40,"line_end":40,"column_start":2,"column_end":8},"name":"Memory","qualname":"::sandbox::ExternEntity::Memory","value":"ExternEntity::Memory(u32)","parent":{"krate":0,"index":3309},"children":[],"decl_id":null,"docs":" Linear memory that is specified by some identifier returned by sandbox\n module upon creation new sandboxed memory.\n","sig":null,"attributes":[{"value":"/ Linear memory that is specified by some identifier returned by sandbox","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183796,"byte_end":183870,"line_start":37,"line_end":37,"column_start":2,"column_end":76}},{"value":"/ module upon creation new sandboxed memory.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183872,"byte_end":183918,"line_start":38,"line_end":38,"column_start":2,"column_end":48}},{"value":"codec(index = \"2\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183920,"byte_end":183941,"line_start":39,"line_end":39,"column_start":2,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3309},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183634,"byte_end":183646,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"ExternEntity","qualname":"::sandbox::ExternEntity","value":"ExternEntity::{Function, Memory}","parent":null,"children":[{"krate":0,"index":3310},{"krate":0,"index":3313}],"decl_id":null,"docs":" Describes an entity to define or import into the environment.\n","sig":null,"attributes":[{"value":"/ Describes an entity to define or import into the environment.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183480,"byte_end":183545,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3338},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184185,"byte_end":184190,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"Entry","qualname":"::sandbox::Entry","value":"Entry { module_name, field_name, entity }","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341}],"decl_id":null,"docs":" An entry in a environment definition table.","sig":null,"attributes":[{"value":"/ An entry in a environment definition table.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":183959,"byte_end":184006,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184007,"byte_end":184010,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Each entry has a two-level name and description of an entity","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184011,"byte_end":184075,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/ being defined.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184076,"byte_end":184094,"line_start":46,"line_end":46,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3339},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184260,"byte_end":184271,"line_start":51,"line_end":51,"column_start":6,"column_end":17},"name":"module_name","qualname":"::sandbox::Entry::module_name","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":" Module name of which corresponding entity being defined.\n","sig":null,"attributes":[{"value":"/ Module name of which corresponding entity being defined.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184194,"byte_end":184254,"line_start":50,"line_end":50,"column_start":2,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3340},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184348,"byte_end":184358,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"name":"field_name","qualname":"::sandbox::Entry::field_name","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":" Field name in which corresponding entity being defined.\n","sig":null,"attributes":[{"value":"/ Field name in which corresponding entity being defined.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184283,"byte_end":184342,"line_start":52,"line_end":52,"column_start":2,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3341},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184410,"byte_end":184416,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"name":"entity","qualname":"::sandbox::Entry::entity","value":"sandbox::ExternEntity","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":" External entity being defined.\n","sig":null,"attributes":[{"value":"/ External entity being defined.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184370,"byte_end":184404,"line_start":54,"line_end":54,"column_start":2,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3364},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184589,"byte_end":184610,"line_start":61,"line_end":61,"column_start":12,"column_end":33},"name":"EnvironmentDefinition","qualname":"::sandbox::EnvironmentDefinition","value":"EnvironmentDefinition { entries }","parent":null,"children":[{"krate":0,"index":3365}],"decl_id":null,"docs":" Definition of runtime that could be used by sandboxed code.\n","sig":null,"attributes":[{"value":"/ Definition of runtime that could be used by sandboxed code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184435,"byte_end":184498,"line_start":58,"line_end":58,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3365},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184676,"byte_end":184683,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"name":"entries","qualname":"::sandbox::EnvironmentDefinition::entries","value":"std::vec::Vec<sandbox::Entry>","parent":{"krate":0,"index":3364},"children":[],"decl_id":null,"docs":" Vector of all entries in the environment definition.\n","sig":null,"attributes":[{"value":"/ Vector of all entries in the environment definition.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184614,"byte_end":184670,"line_start":62,"line_end":62,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1667},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184812,"byte_end":184825,"line_start":68,"line_end":68,"column_start":11,"column_end":24},"name":"MEM_UNLIMITED","qualname":"::sandbox::MEM_UNLIMITED","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Constant for specifying no limit when creating a sandboxed\n memory instance. For FFI purposes.\n","sig":null,"attributes":[{"value":"/ Constant for specifying no limit when creating a sandboxed","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184700,"byte_end":184762,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/ memory instance. For FFI purposes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184763,"byte_end":184801,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1668},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184907,"byte_end":184913,"line_start":73,"line_end":73,"column_start":11,"column_end":17},"name":"ERR_OK","qualname":"::sandbox::ERR_OK","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" No error happened.","sig":null,"attributes":[{"value":"/ No error happened.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184848,"byte_end":184870,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184871,"byte_end":184874,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184875,"byte_end":184896,"line_start":72,"line_end":72,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1669},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185057,"byte_end":185067,"line_start":79,"line_end":79,"column_start":11,"column_end":21},"name":"ERR_MODULE","qualname":"::sandbox::ERR_MODULE","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Validation or instantiation error occurred when creating new\n sandboxed module instance.","sig":null,"attributes":[{"value":"/ Validation or instantiation error occurred when creating new","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184925,"byte_end":184989,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ sandboxed module instance.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":184990,"byte_end":185020,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185021,"byte_end":185024,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185025,"byte_end":185046,"line_start":78,"line_end":78,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1670},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185183,"byte_end":185200,"line_start":84,"line_end":84,"column_start":11,"column_end":28},"name":"ERR_OUT_OF_BOUNDS","qualname":"::sandbox::ERR_OUT_OF_BOUNDS","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Out-of-bounds access attempted with memory or table.","sig":null,"attributes":[{"value":"/ Out-of-bounds access attempted with memory or table.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185090,"byte_end":185146,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185147,"byte_end":185150,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185151,"byte_end":185172,"line_start":83,"line_end":83,"column_start":1,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":1671},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185306,"byte_end":185319,"line_start":89,"line_end":89,"column_start":11,"column_end":24},"name":"ERR_EXECUTION","qualname":"::sandbox::ERR_EXECUTION","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Execution error occurred (typically trap).","sig":null,"attributes":[{"value":"/ Execution error occurred (typically trap).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185223,"byte_end":185269,"line_start":86,"line_end":86,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185270,"byte_end":185273,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ For FFI purposes.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sandbox.rs","byte_start":185274,"byte_end":185295,"line_start":88,"line_end":88,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1672},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/uint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uint","qualname":"::uint","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/uint.rs","parent":null,"children":[{"krate":0,"index":1673}],"decl_id":null,"docs":" An unsigned fixed-size integer.\n","sig":null,"attributes":[{"value":"! An unsigned fixed-size integer.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/uint.rs","byte_start":186760,"byte_end":186795,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3392},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190151,"byte_end":190175,"line_start":28,"line_end":28,"column_start":12,"column_end":36},"name":"ChangesTrieConfiguration","qualname":"::changes_trie::ChangesTrieConfiguration","value":"ChangesTrieConfiguration { digest_interval, digest_levels }","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394}],"decl_id":null,"docs":" Substrate changes trie configuration.\n","sig":null,"attributes":[{"value":"/ Substrate changes trie configuration.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":189931,"byte_end":189972,"line_start":25,"line_end":25,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190308,"byte_end":190323,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"name":"digest_interval","qualname":"::changes_trie::ChangesTrieConfiguration::digest_interval","value":"u32","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" Interval (in blocks) at which level1-digests are created. Digests are not\n created when this is less or equal to 1.\n","sig":null,"attributes":[{"value":"/ Interval (in blocks) at which level1-digests are created. Digests are not","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190179,"byte_end":190256,"line_start":29,"line_end":29,"column_start":2,"column_end":79}},{"value":"/ created when this is less or equal to 1.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190258,"byte_end":190302,"line_start":30,"line_end":30,"column_start":2,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3394},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190857,"byte_end":190870,"line_start":39,"line_end":39,"column_start":6,"column_end":19},"name":"digest_levels","qualname":"::changes_trie::ChangesTrieConfiguration::digest_levels","value":"u32","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" Maximal number of digest levels in hierarchy. 0 means that digests are not\n created at all (even level1 digests). 1 means only level1-digests are created.\n 2 means that every digest_interval^2 there will be a level2-digest, and so on.\n Please ensure that maximum digest interval (i.e. digest_interval^digest_levels)\n is within `u32` limits. Otherwise you'll never see digests covering such intervals\n && maximal digests interval will be truncated to the last interval that fits\n `u32` limits.\n","sig":null,"attributes":[{"value":"/ Maximal number of digest levels in hierarchy. 0 means that digests are not","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190331,"byte_end":190409,"line_start":32,"line_end":32,"column_start":2,"column_end":80}},{"value":"/ created at all (even level1 digests). 1 means only level1-digests are created.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190411,"byte_end":190493,"line_start":33,"line_end":33,"column_start":2,"column_end":84}},{"value":"/ 2 means that every digest_interval^2 there will be a level2-digest, and so on.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190495,"byte_end":190577,"line_start":34,"line_end":34,"column_start":2,"column_end":84}},{"value":"/ Please ensure that maximum digest interval (i.e. digest_interval^digest_levels)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190579,"byte_end":190662,"line_start":35,"line_end":35,"column_start":2,"column_end":85}},{"value":"/ is within `u32` limits. Otherwise you'll never see digests covering such intervals","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190664,"byte_end":190750,"line_start":36,"line_end":36,"column_start":2,"column_end":88}},{"value":"/ && maximal digests interval will be truncated to the last interval that fits","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190752,"byte_end":190832,"line_start":37,"line_end":37,"column_start":2,"column_end":82}},{"value":"/ `u32` limits.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190834,"byte_end":190851,"line_start":38,"line_end":38,"column_start":2,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3470},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190978,"byte_end":191007,"line_start":44,"line_end":44,"column_start":12,"column_end":41},"name":"ChangesTrieConfigurationRange","qualname":"::changes_trie::ChangesTrieConfigurationRange","value":"ChangesTrieConfigurationRange { zero, end, config }","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475}],"decl_id":null,"docs":" Substrate changes trie configuration range.\n","sig":null,"attributes":[{"value":"/ Substrate changes trie configuration range.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":190880,"byte_end":190927,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3473},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191063,"byte_end":191067,"line_start":46,"line_end":46,"column_start":6,"column_end":10},"name":"zero","qualname":"::changes_trie::ChangesTrieConfigurationRange::zero","value":"(Number, Hash)","parent":{"krate":0,"index":3470},"children":[],"decl_id":null,"docs":" Zero block of configuration.\n","sig":null,"attributes":[{"value":"/ Zero block of configuration.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191025,"byte_end":191057,"line_start":45,"line_end":45,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3474},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191178,"byte_end":191181,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"name":"end","qualname":"::changes_trie::ChangesTrieConfigurationRange::end","value":"std::option::Option<(Number, Hash)>","parent":{"krate":0,"index":3470},"children":[],"decl_id":null,"docs":" Last block of configuration (if configuration has been deactivated at some point).\n","sig":null,"attributes":[{"value":"/ Last block of configuration (if configuration has been deactivated at some point).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191086,"byte_end":191172,"line_start":47,"line_end":47,"column_start":2,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3475},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191294,"byte_end":191300,"line_start":50,"line_end":50,"column_start":6,"column_end":12},"name":"config","qualname":"::changes_trie::ChangesTrieConfigurationRange::config","value":"std::option::Option<changes_trie::ChangesTrieConfiguration>","parent":{"krate":0,"index":3470},"children":[],"decl_id":null,"docs":" The configuration itself. None if changes tries were disabled in this range.\n","sig":null,"attributes":[{"value":"/ The configuration itself. None if changes tries were disabled in this range.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191208,"byte_end":191288,"line_start":49,"line_end":49,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191443,"byte_end":191446,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"name":"new","qualname":"<ChangesTrieConfiguration>::new","value":"fn (digest_interval: u32, digest_levels: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new configuration given digest interval and levels.\n","sig":null,"attributes":[{"value":"/ Create new configuration given digest interval and levels.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191372,"byte_end":191434,"line_start":54,"line_end":54,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191583,"byte_end":191606,"line_start":60,"line_end":60,"column_start":9,"column_end":32},"name":"is_digest_build_enabled","qualname":"<ChangesTrieConfiguration>::is_digest_build_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is digest build enabled?\n","sig":null,"attributes":[{"value":"/ Is digest build enabled?","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191546,"byte_end":191574,"line_start":59,"line_end":59,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191737,"byte_end":191770,"line_start":65,"line_end":65,"column_start":9,"column_end":42},"name":"is_digest_build_required_at_block","qualname":"<ChangesTrieConfiguration>::is_digest_build_required_at_block","value":"fn <Number> (&self, zero: Number, block: Number) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we need to build digest at given block?\n","sig":null,"attributes":[{"value":"/ Do we need to build digest at given block?","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191682,"byte_end":191728,"line_start":64,"line_end":64,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":192191,"byte_end":192210,"line_start":81,"line_end":81,"column_start":9,"column_end":28},"name":"max_digest_interval","qualname":"<ChangesTrieConfiguration>::max_digest_interval","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns max digest interval. One if digests are not created at all.\n","sig":null,"attributes":[{"value":"/ Returns max digest interval. One if digests are not created at all.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":192111,"byte_end":192182,"line_start":80,"line_end":80,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":192760,"byte_end":192787,"line_start":100,"line_end":100,"column_start":9,"column_end":36},"name":"prev_max_level_digest_block","qualname":"<ChangesTrieConfiguration>::prev_max_level_digest_block","value":"fn <Number> (&self, zero: Number, block: Number) -> Option<Number>","parent":null,"children":[],"decl_id":null,"docs":" Returns max level digest block number that has been created at block <= passed block number.","sig":null,"attributes":[{"value":"/ Returns max level digest block number that has been created at block <= passed block number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":192597,"byte_end":192693,"line_start":97,"line_end":97,"column_start":2,"column_end":98}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":192695,"byte_end":192698,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ Returns None if digests are not created at all.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":192700,"byte_end":192751,"line_start":99,"line_end":99,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":193757,"byte_end":193784,"line_start":134,"line_end":134,"column_start":9,"column_end":36},"name":"next_max_level_digest_range","qualname":"<ChangesTrieConfiguration>::next_max_level_digest_range","value":"fn <Number> (&self, zero: Number, mut block: Number) -> Option<(Number, Number)>","parent":null,"children":[],"decl_id":null,"docs":" Returns max level digest blocks range (inclusive) which includes passed block.","sig":null,"attributes":[{"value":"/ Returns max level digest blocks range (inclusive) which includes passed block.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":193540,"byte_end":193622,"line_start":130,"line_end":130,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":193624,"byte_end":193627,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ Returns None if digests are not created at all.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":193629,"byte_end":193680,"line_start":132,"line_end":132,"column_start":2,"column_end":53}},{"value":"/ It will return the first max-level digest if block is <= zero.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":193682,"byte_end":193748,"line_start":133,"line_end":133,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":195020,"byte_end":195041,"line_start":172,"line_end":172,"column_start":9,"column_end":30},"name":"digest_level_at_block","qualname":"<ChangesTrieConfiguration>::digest_level_at_block","value":"fn <Number> (&self, zero: Number, block: Number) -> Option<(u32, u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Returns Some if digest must be built at given block number.\n The tuple is:\n (\n  digest level\n  digest interval (in blocks)\n  step between blocks we're interested in when digest is built\n )\n","sig":null,"attributes":[{"value":"/ Returns Some if digest must be built at given block number.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":194795,"byte_end":194858,"line_start":165,"line_end":165,"column_start":2,"column_end":65}},{"value":"/ The tuple is:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":194860,"byte_end":194877,"line_start":166,"line_end":166,"column_start":2,"column_end":19}},{"value":"/ (","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":194879,"byte_end":194884,"line_start":167,"line_end":167,"column_start":2,"column_end":7}},{"value":"/  digest level","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":194886,"byte_end":194903,"line_start":168,"line_end":168,"column_start":2,"column_end":19}},{"value":"/  digest interval (in blocks)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":194905,"byte_end":194937,"line_start":169,"line_end":169,"column_start":2,"column_end":34}},{"value":"/  step between blocks we're interested in when digest is built","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":194939,"byte_end":195004,"line_start":170,"line_end":170,"column_start":2,"column_end":67}},{"value":"/ )","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":195006,"byte_end":195011,"line_start":171,"line_end":171,"column_start":2,"column_end":7}}]},{"kind":"Mod","id":{"krate":0,"index":1696},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1704},{"krate":0,"index":1711},{"krate":0,"index":3499},{"krate":0,"index":3516},{"krate":0,"index":3514},{"krate":0,"index":1714},{"krate":0,"index":1731},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":1732},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":3528},{"krate":0,"index":3533},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":1763},{"krate":0,"index":3540},{"krate":0,"index":3548},{"krate":0,"index":3547},{"krate":0,"index":3545},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":3550},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":3560},{"krate":0,"index":3563},{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":1774},{"krate":0,"index":1776}],"decl_id":null,"docs":" Shareable Substrate traits.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1867,"byte_end":1890,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"! Shareable Substrate traits.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201360,"byte_end":201391,"line_start":18,"line_end":18,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3500},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201810,"byte_end":201825,"line_start":39,"line_end":39,"column_start":2,"column_end":17},"name":"KeyNotSupported","qualname":"::traits::BareCryptoStoreError::KeyNotSupported","value":"BareCryptoStoreError::KeyNotSupported(KeyTypeId)","parent":{"krate":0,"index":3499},"children":[],"decl_id":null,"docs":" Public key type is not supported\n","sig":null,"attributes":[{"value":"/ Public key type is not supported","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201725,"byte_end":201761,"line_start":37,"line_end":37,"column_start":2,"column_end":38}},{"value":"display(fmt = \"Key not supported: {:?}\", _0)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201763,"byte_end":201808,"line_start":38,"line_end":38,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3503},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201934,"byte_end":201946,"line_start":42,"line_end":42,"column_start":2,"column_end":14},"name":"PairNotFound","qualname":"::traits::BareCryptoStoreError::PairNotFound","value":"BareCryptoStoreError::PairNotFound(String)","parent":{"krate":0,"index":3499},"children":[],"decl_id":null,"docs":" Pair not found for public key and KeyTypeId\n","sig":null,"attributes":[{"value":"/ Pair not found for public key and KeyTypeId","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201839,"byte_end":201886,"line_start":40,"line_end":40,"column_start":2,"column_end":49}},{"value":"display(fmt = \"Pair was not found: {}\", _0)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201888,"byte_end":201932,"line_start":41,"line_end":41,"column_start":2,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3506},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202023,"byte_end":202038,"line_start":45,"line_end":45,"column_start":2,"column_end":17},"name":"ValidationError","qualname":"::traits::BareCryptoStoreError::ValidationError","value":"BareCryptoStoreError::ValidationError(String)","parent":{"krate":0,"index":3499},"children":[],"decl_id":null,"docs":" Validation error\n","sig":null,"attributes":[{"value":"/ Validation error","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201957,"byte_end":201977,"line_start":43,"line_end":43,"column_start":2,"column_end":22}},{"value":"display(fmt = \"Validation error: {}\", _0)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201979,"byte_end":202021,"line_start":44,"line_end":44,"column_start":2,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3509},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202115,"byte_end":202126,"line_start":48,"line_end":48,"column_start":2,"column_end":13},"name":"Unavailable","qualname":"::traits::BareCryptoStoreError::Unavailable","value":"BareCryptoStoreError::Unavailable","parent":{"krate":0,"index":3499},"children":[],"decl_id":null,"docs":" Keystore unavailable\n","sig":null,"attributes":[{"value":"/ Keystore unavailable","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202049,"byte_end":202073,"line_start":46,"line_end":46,"column_start":2,"column_end":26}},{"value":"display(fmt = \"Keystore unavailable\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202075,"byte_end":202113,"line_start":47,"line_end":47,"column_start":2,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3511},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202215,"byte_end":202220,"line_start":51,"line_end":51,"column_start":2,"column_end":7},"name":"Other","qualname":"::traits::BareCryptoStoreError::Other","value":"BareCryptoStoreError::Other(String)","parent":{"krate":0,"index":3499},"children":[],"decl_id":null,"docs":" Programming errors\n","sig":null,"attributes":[{"value":"/ Programming errors","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202129,"byte_end":202151,"line_start":49,"line_end":49,"column_start":2,"column_end":24}},{"value":"display(fmt = \"An unknown keystore error occurred: {}\", _0)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202153,"byte_end":202213,"line_start":50,"line_end":50,"column_start":2,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":3499},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201701,"byte_end":201721,"line_start":36,"line_end":36,"column_start":10,"column_end":30},"name":"BareCryptoStoreError","qualname":"::traits::BareCryptoStoreError","value":"BareCryptoStoreError::{KeyNotSupported, PairNotFound, ValidationError, Unavailable, Other}","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3511}],"decl_id":null,"docs":" BareCryptoStore error\n","sig":null,"attributes":[{"value":"/ BareCryptoStore error","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":201627,"byte_end":201652,"line_start":34,"line_end":34,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":1714},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202308,"byte_end":202323,"line_start":55,"line_end":55,"column_start":11,"column_end":26},"name":"BareCryptoStore","qualname":"::traits::BareCryptoStore","value":"BareCryptoStore: Send + Sync","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1729}],"decl_id":null,"docs":" Something that generates, stores and provides access to keys.\n","sig":null,"attributes":[{"value":"/ Something that generates, stores and provides access to keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202232,"byte_end":202297,"line_start":54,"line_end":54,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202404,"byte_end":202423,"line_start":57,"line_end":57,"column_start":5,"column_end":24},"name":"sr25519_public_keys","qualname":"::traits::BareCryptoStore::sr25519_public_keys","value":"fn (&self, id: KeyTypeId) -> Vec<sr25519::Public>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Returns all sr25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all sr25519 public keys for the given key type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202340,"byte_end":202399,"line_start":56,"line_end":56,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202703,"byte_end":202723,"line_start":63,"line_end":63,"column_start":5,"column_end":25},"name":"sr25519_generate_new","qualname":"::traits::BareCryptoStore::sr25519_generate_new","value":"fn (&mut self, id: KeyTypeId, seed: Option<&str>) -> Result<sr25519::Public, BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Generate a new sr25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new sr25519 key pair for the given key type and an optional seed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202472,"byte_end":202552,"line_start":58,"line_end":58,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202554,"byte_end":202557,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202559,"byte_end":202638,"line_start":60,"line_end":60,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202640,"byte_end":202643,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202645,"byte_end":202698,"line_start":62,"line_end":62,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202895,"byte_end":202914,"line_start":69,"line_end":69,"column_start":5,"column_end":24},"name":"ed25519_public_keys","qualname":"::traits::BareCryptoStore::ed25519_public_keys","value":"fn (&self, id: KeyTypeId) -> Vec<ed25519::Public>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Returns all ed25519 public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ed25519 public keys for the given key type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202831,"byte_end":202890,"line_start":68,"line_end":68,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203194,"byte_end":203214,"line_start":75,"line_end":75,"column_start":5,"column_end":25},"name":"ed25519_generate_new","qualname":"::traits::BareCryptoStore::ed25519_generate_new","value":"fn (&mut self, id: KeyTypeId, seed: Option<&str>) -> Result<ed25519::Public, BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Generate a new ed25519 key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ed25519 key pair for the given key type and an optional seed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202963,"byte_end":203043,"line_start":70,"line_end":70,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203045,"byte_end":203048,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203050,"byte_end":203129,"line_start":72,"line_end":72,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203131,"byte_end":203134,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203136,"byte_end":203189,"line_start":74,"line_end":74,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203384,"byte_end":203401,"line_start":81,"line_end":81,"column_start":5,"column_end":22},"name":"ecdsa_public_keys","qualname":"::traits::BareCryptoStore::ecdsa_public_keys","value":"fn (&self, id: KeyTypeId) -> Vec<ecdsa::Public>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Returns all ecdsa public keys for the given key type.\n","sig":null,"attributes":[{"value":"/ Returns all ecdsa public keys for the given key type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203322,"byte_end":203379,"line_start":80,"line_end":80,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203677,"byte_end":203695,"line_start":87,"line_end":87,"column_start":5,"column_end":23},"name":"ecdsa_generate_new","qualname":"::traits::BareCryptoStore::ecdsa_generate_new","value":"fn (&mut self, id: KeyTypeId, seed: Option<&str>) -> Result<ecdsa::Public, BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Generate a new ecdsa key pair for the given key type and an optional seed.","sig":null,"attributes":[{"value":"/ Generate a new ecdsa key pair for the given key type and an optional seed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203448,"byte_end":203526,"line_start":82,"line_end":82,"column_start":2,"column_end":80}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203528,"byte_end":203531,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ If the given seed is `Some(_)`, the key pair will only be stored in memory.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203533,"byte_end":203612,"line_start":84,"line_end":84,"column_start":2,"column_end":81}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203614,"byte_end":203617,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ Returns the public key of the generated key pair.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203619,"byte_end":203672,"line_start":86,"line_end":86,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204065,"byte_end":204079,"line_start":99,"line_end":99,"column_start":5,"column_end":19},"name":"insert_unknown","qualname":"::traits::BareCryptoStore::insert_unknown","value":"fn (&mut self, _key_type: KeyTypeId, _suri: &str, _public: &[u8]) -> Result<(), ()>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Insert a new key. This doesn't require any known of the crypto; but a public key must be\n manually provided.","sig":null,"attributes":[{"value":"/ Insert a new key. This doesn't require any known of the crypto; but a public key must be","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203802,"byte_end":203894,"line_start":93,"line_end":93,"column_start":2,"column_end":94}},{"value":"/ manually provided.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203896,"byte_end":203918,"line_start":94,"line_end":94,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203920,"byte_end":203923,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ Places it into the file system store.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203925,"byte_end":203966,"line_start":96,"line_end":96,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203968,"byte_end":203971,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ `Err` if there's some sort of weird filesystem error, but should generally be `Ok`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":203973,"byte_end":204060,"line_start":98,"line_end":98,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204204,"byte_end":204212,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"password","qualname":"::traits::BareCryptoStore::password","value":"fn (&self) -> Option<&str>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Get the password for this store.\n","sig":null,"attributes":[{"value":"/ Get the password for this store.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204163,"byte_end":204199,"line_start":101,"line_end":101,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204451,"byte_end":204465,"line_start":107,"line_end":107,"column_start":5,"column_end":19},"name":"supported_keys","qualname":"::traits::BareCryptoStore::supported_keys","value":"fn (&self, id: KeyTypeId, keys: Vec<CryptoTypePublicPair>) -> Result<Vec<CryptoTypePublicPair>, BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Find intersection between provided keys and supported keys","sig":null,"attributes":[{"value":"/ Find intersection between provided keys and supported keys","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204238,"byte_end":204300,"line_start":103,"line_end":103,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204302,"byte_end":204305,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ Provided a list of (CryptoTypeId,[u8]) pairs, this would return","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204307,"byte_end":204374,"line_start":105,"line_end":105,"column_start":2,"column_end":69}},{"value":"/ a filtered set of public keys which are supported by the keystore.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204376,"byte_end":204446,"line_start":106,"line_end":106,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204683,"byte_end":204687,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"keys","qualname":"::traits::BareCryptoStore::keys","value":"fn (&self, id: KeyTypeId) -> Result<Vec<CryptoTypePublicPair>, BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" List all supported keys","sig":null,"attributes":[{"value":"/ List all supported keys","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204591,"byte_end":204618,"line_start":112,"line_end":112,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204620,"byte_end":204623,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ Returns a set of public keys the signer supports.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204625,"byte_end":204678,"line_start":114,"line_end":114,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204927,"byte_end":204935,"line_start":120,"line_end":120,"column_start":5,"column_end":13},"name":"has_keys","qualname":"::traits::BareCryptoStore::has_keys","value":"fn (&self, public_keys: &[(Vec<u8>, KeyTypeId)]) -> bool","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Checks if the private keys for the given public key and key type combinations exist.","sig":null,"attributes":[{"value":"/ Checks if the private keys for the given public key and key type combinations exist.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204772,"byte_end":204860,"line_start":117,"line_end":117,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204862,"byte_end":204865,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ Returns `true` iff all private keys could be found.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204867,"byte_end":204922,"line_start":119,"line_end":119,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205202,"byte_end":205211,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"sign_with","qualname":"::traits::BareCryptoStore::sign_with","value":"fn (&self, id: KeyTypeId, key: &CryptoTypePublicPair, msg: &[u8]) -> Result<Vec<u8>, BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Sign with key","sig":null,"attributes":[{"value":"/ Sign with key","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":204992,"byte_end":205009,"line_start":122,"line_end":122,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205011,"byte_end":205014,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ Signs a message with the private key that matches","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205016,"byte_end":205069,"line_start":124,"line_end":124,"column_start":2,"column_end":55}},{"value":"/ the public key passed.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205071,"byte_end":205097,"line_start":125,"line_end":125,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205099,"byte_end":205102,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded signature if key is found & supported,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205104,"byte_end":205172,"line_start":127,"line_end":127,"column_start":2,"column_end":70}},{"value":"/ an error otherwise.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205174,"byte_end":205197,"line_start":128,"line_end":128,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205549,"byte_end":205562,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"sign_with_any","qualname":"::traits::BareCryptoStore::sign_with_any","value":"fn (&self, id: KeyTypeId, keys: Vec<CryptoTypePublicPair>, msg: &[u8]) -> Result<(CryptoTypePublicPair, Vec<u8>), BareCryptoStoreError>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Sign with any key","sig":null,"attributes":[{"value":"/ Sign with any key","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205330,"byte_end":205351,"line_start":136,"line_end":136,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205353,"byte_end":205356,"line_start":137,"line_end":137,"column_start":2,"column_end":5}},{"value":"/ Given a list of public keys, find the first supported key and","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205358,"byte_end":205423,"line_start":138,"line_end":138,"column_start":2,"column_end":67}},{"value":"/ sign the provided message with that key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205425,"byte_end":205469,"line_start":139,"line_end":139,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205471,"byte_end":205474,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ Returns a tuple of the used key and the SCALE encoded signature.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":205476,"byte_end":205544,"line_start":141,"line_end":141,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206297,"byte_end":206310,"line_start":167,"line_end":167,"column_start":5,"column_end":18},"name":"sign_with_all","qualname":"::traits::BareCryptoStore::sign_with_all","value":"fn (&self, id: KeyTypeId, keys: Vec<CryptoTypePublicPair>, msg: &[u8]) -> Result<Vec<Result<Vec<u8>, BareCryptoStoreError>>, ()>","parent":{"krate":0,"index":1714},"children":[],"decl_id":null,"docs":" Sign with all keys","sig":null,"attributes":[{"value":"/ Sign with all keys","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206010,"byte_end":206032,"line_start":160,"line_end":160,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206034,"byte_end":206037,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ Provided a list of public keys, sign a message with","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206039,"byte_end":206094,"line_start":162,"line_end":162,"column_start":2,"column_end":57}},{"value":"/ each key given that the key is supported.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206096,"byte_end":206141,"line_start":163,"line_end":163,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206143,"byte_end":206146,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ Returns a list of `Result`s each representing the SCALE encoded","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206148,"byte_end":206215,"line_start":165,"line_end":165,"column_start":2,"column_end":69}},{"value":"/ signature of each key or a BareCryptoStoreError for non-supported keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206217,"byte_end":206292,"line_start":166,"line_end":166,"column_start":2,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1731},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206560,"byte_end":206578,"line_start":178,"line_end":178,"column_start":10,"column_end":28},"name":"BareCryptoStorePtr","qualname":"::traits::BareCryptoStorePtr","value":"Arc<parking_lot::RwLock<dyn BareCryptoStore>>","parent":null,"children":[],"decl_id":null,"docs":" A pointer to the key store.\n","sig":null,"attributes":[{"value":"/ A pointer to the key store.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206519,"byte_end":206550,"line_start":177,"line_end":177,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3518},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206750,"byte_end":206761,"line_start":182,"line_end":182,"column_start":13,"column_end":24},"name":"KeystoreExt","qualname":"::traits::KeystoreExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keystore extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1732},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206823,"byte_end":206835,"line_start":186,"line_end":186,"column_start":11,"column_end":23},"name":"CodeExecutor","qualname":"::traits::CodeExecutor","value":"CodeExecutor: Sized + Send + Sync + CallInWasm + Clone + 'static","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734}],"decl_id":null,"docs":" Code execution engine.\n","sig":null,"attributes":[{"value":"/ Code execution engine.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206786,"byte_end":206812,"line_start":185,"line_end":185,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1733},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206927,"byte_end":206932,"line_start":188,"line_end":188,"column_start":7,"column_end":12},"name":"Error","qualname":"::traits::CodeExecutor::Error","value":"type Error: Display + Debug + Send + 'static;","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" Externalities error type.\n","sig":null,"attributes":[{"value":"/ Externalities error type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206891,"byte_end":206920,"line_start":187,"line_end":187,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207164,"byte_end":207168,"line_start":192,"line_end":192,"column_start":5,"column_end":9},"name":"call","qualname":"::traits::CodeExecutor::call","value":"fn <R, NC> (&self, ext: &mut dyn Externalities, runtime_code: &RuntimeCode, method: &str, data: &[u8], use_native: bool, native_call: Option<NC>) -> (Result<crate::NativeOrEncoded<R>, Self::Error>, bool)","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" Call a given method in the runtime. Returns a tuple of the result (either the output data\n or an execution error) together with a `bool`, which is true if native execution was used.\n","sig":null,"attributes":[{"value":"/ Call a given method in the runtime. Returns a tuple of the result (either the output data","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206970,"byte_end":207063,"line_start":190,"line_end":190,"column_start":2,"column_end":95}},{"value":"/ or an execution error) together with a `bool`, which is true if native execution was used.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207065,"byte_end":207159,"line_start":191,"line_end":191,"column_start":2,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":1737},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207528,"byte_end":207544,"line_start":207,"line_end":207,"column_start":11,"column_end":27},"name":"FetchRuntimeCode","qualname":"::traits::FetchRuntimeCode","value":"FetchRuntimeCode","parent":null,"children":[{"krate":0,"index":1738}],"decl_id":null,"docs":" Something that can fetch the runtime `:code`.\n","sig":null,"attributes":[{"value":"/ Something that can fetch the runtime `:code`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207468,"byte_end":207517,"line_start":206,"line_end":206,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207669,"byte_end":207687,"line_start":211,"line_end":211,"column_start":5,"column_end":23},"name":"fetch_runtime_code","qualname":"::traits::FetchRuntimeCode::fetch_runtime_code","value":"fn <'a> (&'a self) -> Option<Cow<'a, [u8]>>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Fetch the runtime `:code`.","sig":null,"attributes":[{"value":"/ Fetch the runtime `:code`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207548,"byte_end":207578,"line_start":208,"line_end":208,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207580,"byte_end":207583,"line_start":209,"line_end":209,"column_start":2,"column_end":5}},{"value":"/ If the `:code` could not be found/not available, `None` should be returned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207585,"byte_end":207664,"line_start":210,"line_end":210,"column_start":2,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207808,"byte_end":207826,"line_start":215,"line_end":215,"column_start":12,"column_end":30},"name":"WrappedRuntimeCode","qualname":"::traits::WrappedRuntimeCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper to use a `u8` slice or `Vec` as [`FetchRuntimeCode`].\n","sig":null,"attributes":[{"value":"/ Wrapper to use a `u8` slice or `Vec` as [`FetchRuntimeCode`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207731,"byte_end":207796,"line_start":214,"line_end":214,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1748},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208105,"byte_end":208125,"line_start":224,"line_end":224,"column_start":12,"column_end":32},"name":"NoneFetchRuntimeCode","qualname":"::traits::NoneFetchRuntimeCode","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type that implements [`FetchRuntimeCode`] and always returns `None`.\n","sig":null,"attributes":[{"value":"/ Type that implements [`FetchRuntimeCode`] and always returns `None`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208021,"byte_end":208093,"line_start":223,"line_end":223,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3528},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208324,"byte_end":208335,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"RuntimeCode","qualname":"::traits::RuntimeCode","value":"RuntimeCode { code_fetcher, heap_pages, hash }","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532}],"decl_id":null,"docs":" The Wasm code of a Substrate runtime.\n","sig":null,"attributes":[{"value":"/ The Wasm code of a Substrate runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208254,"byte_end":208295,"line_start":232,"line_end":232,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3530},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208412,"byte_end":208424,"line_start":236,"line_end":236,"column_start":6,"column_end":18},"name":"code_fetcher","qualname":"::traits::RuntimeCode::code_fetcher","value":"&'a (dyn traits::FetchRuntimeCode + 'a)","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":" The code fetcher that can be used to lazily fetch the code.\n","sig":null,"attributes":[{"value":"/ The code fetcher that can be used to lazily fetch the code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208343,"byte_end":208406,"line_start":235,"line_end":235,"column_start":2,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3531},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208602,"byte_end":208612,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"name":"heap_pages","qualname":"::traits::RuntimeCode::heap_pages","value":"std::option::Option<u64>","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":" The optional heap pages this `code` should be executed with.","sig":null,"attributes":[{"value":"/ The optional heap pages this `code` should be executed with.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208453,"byte_end":208517,"line_start":237,"line_end":237,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208519,"byte_end":208522,"line_start":238,"line_end":238,"column_start":2,"column_end":5}},{"value":"/ If `None` are given, the default value of the executor will be used.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208524,"byte_end":208596,"line_start":239,"line_end":239,"column_start":2,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3532},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208782,"byte_end":208786,"line_start":245,"line_end":245,"column_start":6,"column_end":10},"name":"hash","qualname":"::traits::RuntimeCode::hash","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3528},"children":[],"decl_id":null,"docs":" The SCALE encoded hash of `code`.","sig":null,"attributes":[{"value":"/ The SCALE encoded hash of `code`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208628,"byte_end":208665,"line_start":241,"line_end":241,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208667,"byte_end":208670,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ The hashing algorithm isn't that important, as long as all runtime","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208672,"byte_end":208742,"line_start":243,"line_end":243,"column_start":2,"column_end":72}},{"value":"/ code instances use the same.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208744,"byte_end":208776,"line_start":244,"line_end":244,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209054,"byte_end":209059,"line_start":258,"line_end":258,"column_start":9,"column_end":14},"name":"empty","qualname":"<RuntimeCode>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty instance.","sig":null,"attributes":[{"value":"/ Create an empty instance.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208939,"byte_end":208968,"line_start":255,"line_end":255,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208970,"byte_end":208973,"line_start":256,"line_end":256,"column_start":2,"column_end":5}},{"value":"/ This is only useful for tests that don't want to execute any code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208975,"byte_end":209045,"line_start":257,"line_end":257,"column_start":2,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3536},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209452,"byte_end":209464,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"CodeNotFound","qualname":"::traits::CodeNotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Could not find the `:code` in the externalities while initializing the [`RuntimeCode`].\n","sig":null,"attributes":[{"value":"/ Could not find the `:code` in the externalities while initializing the [`RuntimeCode`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209332,"byte_end":209423,"line_start":273,"line_end":273,"column_start":1,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209903,"byte_end":209908,"line_start":288,"line_end":288,"column_start":2,"column_end":7},"name":"Allow","qualname":"::traits::MissingHostFunctions::Allow","value":"MissingHostFunctions::Allow","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Any missing host function will be replaced by a stub that returns an error when\n being called.\n","sig":null,"attributes":[{"value":"/ Any missing host function will be replaced by a stub that returns an error when","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209799,"byte_end":209882,"line_start":286,"line_end":286,"column_start":2,"column_end":85}},{"value":"/ being called.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209884,"byte_end":209901,"line_start":287,"line_end":287,"column_start":2,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3543},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210001,"byte_end":210009,"line_start":290,"line_end":290,"column_start":2,"column_end":10},"name":"Disallow","qualname":"::traits::MissingHostFunctions::Disallow","value":"MissingHostFunctions::Disallow","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Any missing host function will result in an error while instantiating the WASM blob,\n","sig":null,"attributes":[{"value":"/ Any missing host function will result in an error while instantiating the WASM blob,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209911,"byte_end":209999,"line_start":289,"line_end":289,"column_start":2,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":3540},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209775,"byte_end":209795,"line_start":285,"line_end":285,"column_start":10,"column_end":30},"name":"MissingHostFunctions","qualname":"::traits::MissingHostFunctions","value":"MissingHostFunctions::{Allow, Disallow}","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3543}],"decl_id":null,"docs":" `Allow` or `Disallow` missing host functions when instantiating a WASM blob.\n","sig":null,"attributes":[{"value":"/ `Allow` or `Disallow` missing host functions when instantiating a WASM blob.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209655,"byte_end":209735,"line_start":283,"line_end":283,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210091,"byte_end":210098,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"name":"allowed","qualname":"<MissingHostFunctions>::allowed","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are missing host functions allowed?\n","sig":null,"attributes":[{"value":"/ Are missing host functions allowed?","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210043,"byte_end":210082,"line_start":294,"line_end":294,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":1767},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210214,"byte_end":210224,"line_start":301,"line_end":301,"column_start":11,"column_end":21},"name":"CallInWasm","qualname":"::traits::CallInWasm","value":"CallInWasm: Send + Sync","parent":null,"children":[{"krate":0,"index":1768}],"decl_id":null,"docs":" Something that can call a method in a WASM blob.\n","sig":null,"attributes":[{"value":"/ Something that can call a method in a WASM blob.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210151,"byte_end":210203,"line_start":300,"line_end":300,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210618,"byte_end":210630,"line_start":311,"line_end":311,"column_start":5,"column_end":17},"name":"call_in_wasm","qualname":"::traits::CallInWasm::call_in_wasm","value":"fn (&self, wasm_code: &[u8], code_hash: Option<Vec<u8>>, method: &str, call_data: &[u8], ext: &mut dyn Externalities, missing_host_functions: MissingHostFunctions) -> Result<Vec<u8>, String>","parent":{"krate":0,"index":1767},"children":[],"decl_id":null,"docs":" Call the given `method` in the given `wasm_blob` using `call_data` (SCALE encoded arguments)\n to decode the arguments for the method.","sig":null,"attributes":[{"value":"/ Call the given `method` in the given `wasm_blob` using `call_data` (SCALE encoded arguments)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210241,"byte_end":210337,"line_start":302,"line_end":302,"column_start":2,"column_end":98}},{"value":"/ to decode the arguments for the method.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210339,"byte_end":210382,"line_start":303,"line_end":303,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210384,"byte_end":210387,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ Returns the SCALE encoded return value of the method.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210389,"byte_end":210446,"line_start":305,"line_end":305,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210448,"byte_end":210451,"line_start":306,"line_end":306,"column_start":2,"column_end":5}},{"value":"/ # Note","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210453,"byte_end":210463,"line_start":307,"line_end":307,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210465,"byte_end":210468,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ If `code_hash` is `Some(_)` the `wasm_code` module and instance will be cached internally,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210470,"byte_end":210564,"line_start":309,"line_end":309,"column_start":2,"column_end":96}},{"value":"/ otherwise it is thrown away after the call.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210566,"byte_end":210613,"line_start":310,"line_end":310,"column_start":2,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3550},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210965,"byte_end":210978,"line_start":324,"line_end":324,"column_start":13,"column_end":26},"name":"CallInWasmExt","qualname":"::traits::CallInWasmExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" The call-in-wasm extension to register/retrieve from the externalities.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211072,"byte_end":211075,"line_start":329,"line_end":329,"column_start":9,"column_end":12},"name":"new","qualname":"<CallInWasmExt>::new","value":"fn <T> (inner: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211026,"byte_end":211063,"line_start":328,"line_end":328,"column_start":2,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":1772},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211220,"byte_end":211234,"line_start":335,"line_end":335,"column_start":11,"column_end":25},"name":"CloneableSpawn","qualname":"::traits::CloneableSpawn","value":"CloneableSpawn: futures::task::Spawn + Send + Sync","parent":null,"children":[{"krate":0,"index":1773}],"decl_id":null,"docs":" Something that can spawn tasks and also can be cloned.\n","sig":null,"attributes":[{"value":"/ Something that can spawn tasks and also can be cloned.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211151,"byte_end":211209,"line_start":334,"line_end":334,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211314,"byte_end":211319,"line_start":337,"line_end":337,"column_start":5,"column_end":10},"name":"clone","qualname":"::traits::CloneableSpawn::clone","value":"fn (&self) -> Box<dyn CloneableSpawn>","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" Clone as heap-allocated handle.\n","sig":null,"attributes":[{"value":"/ Clone as heap-allocated handle.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211274,"byte_end":211309,"line_start":336,"line_end":336,"column_start":2,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3560},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211436,"byte_end":211451,"line_start":342,"line_end":342,"column_start":13,"column_end":28},"name":"TaskExecutorExt","qualname":"::traits::TaskExecutorExt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Task executor extension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211558,"byte_end":211561,"line_start":347,"line_end":347,"column_start":9,"column_end":12},"name":"new","qualname":"<TaskExecutorExt>::new","value":"fn (spawn_handle: Box<dyn CloneableSpawn>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" New instance of task executor extension.\n","sig":null,"attributes":[{"value":"/ New instance of task executor extension.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211505,"byte_end":211549,"line_start":346,"line_end":346,"column_start":2,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":1776},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211696,"byte_end":211709,"line_start":353,"line_end":353,"column_start":11,"column_end":24},"name":"SpawnBlocking","qualname":"::traits::SpawnBlocking","value":"SpawnBlocking","parent":null,"children":[{"krate":0,"index":1777}],"decl_id":null,"docs":" Something that can spawn a blocking future.\n","sig":null,"attributes":[{"value":"/ Something that can spawn a blocking future.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211638,"byte_end":211685,"line_start":352,"line_end":352,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211824,"byte_end":211838,"line_start":357,"line_end":357,"column_start":5,"column_end":19},"name":"spawn_blocking","qualname":"::traits::SpawnBlocking::spawn_blocking","value":"fn (&self, name: &'static str, future: futures::future::BoxFuture<'static, ()>) -> ()","parent":{"krate":0,"index":1776},"children":[],"decl_id":null,"docs":" Spawn the given blocking future.","sig":null,"attributes":[{"value":"/ Spawn the given blocking future.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211713,"byte_end":211749,"line_start":354,"line_end":354,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211751,"byte_end":211754,"line_start":355,"line_end":355,"column_start":2,"column_end":5}},{"value":"/ The given `name` is used to identify the future in tracing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211756,"byte_end":211819,"line_start":356,"line_end":356,"column_start":2,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":1778},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"testing","qualname":"::testing","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":1793},{"krate":0,"index":1804},{"krate":0,"index":1834},{"krate":0,"index":3574},{"krate":0,"index":3577},{"krate":0,"index":1835},{"krate":0,"index":1837}],"decl_id":null,"docs":" Types that should only be used for testing!\n","sig":null,"attributes":[{"value":"! Types that should only be used for testing!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":212605,"byte_end":212652,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":1790},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":212930,"byte_end":212937,"line_start":30,"line_end":30,"column_start":11,"column_end":18},"name":"ED25519","qualname":"::testing::ED25519","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Ed25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Ed25519 key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":212882,"byte_end":212919,"line_start":29,"line_end":29,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1791},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213021,"byte_end":213028,"line_start":32,"line_end":32,"column_start":11,"column_end":18},"name":"SR25519","qualname":"::testing::SR25519","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Sr 25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Sr 25519 key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":212972,"byte_end":213010,"line_start":31,"line_end":31,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1792},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213112,"byte_end":213117,"line_start":34,"line_end":34,"column_start":11,"column_end":16},"name":"ECDSA","qualname":"::testing::ECDSA","value":"KeyTypeId","parent":null,"children":[],"decl_id":null,"docs":" Key type for generic Sr 25519 key.\n","sig":null,"attributes":[{"value":"/ Key type for generic Sr 25519 key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213063,"byte_end":213101,"line_start":33,"line_end":33,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213254,"byte_end":213262,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"KeyStore","qualname":"::testing::KeyStore","value":"KeyStore {  }","parent":null,"children":[{"krate":0,"index":3571}],"decl_id":null,"docs":" A keystore implementation usable in tests.\n","sig":null,"attributes":[{"value":"/ A keystore implementation usable in tests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213153,"byte_end":213199,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213200,"byte_end":213223,"line_start":37,"line_end":37,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213518,"byte_end":213521,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"new","qualname":"<KeyStore>::new","value":"fn () -> crate::traits::BareCryptoStorePtr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of `Self`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213472,"byte_end":213509,"line_start":46,"line_end":46,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3574},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222239,"byte_end":222260,"line_start":349,"line_end":349,"column_start":12,"column_end":33},"name":"SpawnBlockingExecutor","qualname":"::testing::SpawnBlockingExecutor","value":"","parent":null,"children":[],"decl_id":null,"docs":" An executor that supports spawning blocking futures in tests.","sig":null,"attributes":[{"value":"/ An executor that supports spawning blocking futures in tests.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":221955,"byte_end":222020,"line_start":343,"line_end":343,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222021,"byte_end":222024,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ Internally this just wraps a `ThreadPool` with a pool size of `8`. This","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222025,"byte_end":222100,"line_start":345,"line_end":345,"column_start":1,"column_end":76}},{"value":"/ should ensure that we have enough threads in tests for spawning blocking futures.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222101,"byte_end":222186,"line_start":346,"line_end":346,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222187,"byte_end":222210,"line_start":347,"line_end":347,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222393,"byte_end":222396,"line_start":354,"line_end":354,"column_start":9,"column_end":12},"name":"new","qualname":"<SpawnBlockingExecutor>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222348,"byte_end":222384,"line_start":353,"line_end":353,"column_start":2,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1839},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tasks","qualname":"::tasks","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":3579},{"krate":0,"index":3583},{"krate":0,"index":3581},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850}],"decl_id":null,"docs":" Module for low-level asynchronous processing.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1924,"byte_end":1947,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"! Module for low-level asynchronous processing.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224286,"byte_end":224335,"line_start":18,"line_end":18,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3579},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224588,"byte_end":224596,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Executor","qualname":"::tasks::Executor","value":"Executor {  }","parent":null,"children":[{"krate":0,"index":3580}],"decl_id":null,"docs":" Simple task executor.","sig":null,"attributes":[{"value":"/ Simple task executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224404,"byte_end":224429,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224430,"byte_end":224433,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Uses single thread for scheduling tasks. Can be cloned and used in","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224434,"byte_end":224504,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ runtime host (implements `CloneableSpawn`).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224505,"byte_end":224552,"line_start":26,"line_end":26,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1850},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":225109,"byte_end":225117,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"executor","qualname":"::tasks::executor","value":"fn () -> Box<dyn CloneableSpawn>","parent":null,"children":[],"decl_id":null,"docs":" Create tasks executor.\n","sig":null,"attributes":[{"value":"/ Create tasks executor.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":225075,"byte_end":225101,"line_start":54,"line_end":54,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2579,"byte_end":2588,"line_start":97,"line_end":97,"column_start":2,"column_end":11},"name":"Importing","qualname":"::ExecutionContext::Importing","value":"ExecutionContext::Importing","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Context for general importing (including own blocks).\n","sig":null,"attributes":[{"value":"/ Context for general importing (including own blocks).","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2520,"byte_end":2577,"line_start":96,"line_end":96,"column_start":2,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2638,"byte_end":2645,"line_start":99,"line_end":99,"column_start":2,"column_end":9},"name":"Syncing","qualname":"::ExecutionContext::Syncing","value":"ExecutionContext::Syncing","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Context used when syncing the blockchain.\n","sig":null,"attributes":[{"value":"/ Context used when syncing the blockchain.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2591,"byte_end":2636,"line_start":98,"line_end":98,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1876},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2690,"byte_end":2707,"line_start":101,"line_end":101,"column_start":2,"column_end":19},"name":"BlockConstruction","qualname":"::ExecutionContext::BlockConstruction","value":"ExecutionContext::BlockConstruction","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Context used for block construction.\n","sig":null,"attributes":[{"value":"/ Context used for block construction.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2648,"byte_end":2688,"line_start":100,"line_end":100,"column_start":2,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2837,"byte_end":2849,"line_start":105,"line_end":105,"column_start":2,"column_end":14},"name":"OffchainCall","qualname":"::ExecutionContext::OffchainCall","value":"ExecutionContext::OffchainCall(Option<(Box<dyn offchain::Externalities>, offchain::Capabilities)>)","parent":{"krate":0,"index":1871},"children":[],"decl_id":null,"docs":" Context used for offchain calls.","sig":null,"attributes":[{"value":"/ Context used for offchain calls.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2710,"byte_end":2746,"line_start":102,"line_end":102,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2748,"byte_end":2751,"line_start":103,"line_end":103,"column_start":2,"column_end":5}},{"value":"/ This allows passing offchain extension and customizing available capabilities.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2753,"byte_end":2835,"line_start":104,"line_end":104,"column_start":2,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":1871},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2500,"byte_end":2516,"line_start":95,"line_end":95,"column_start":10,"column_end":26},"name":"ExecutionContext","qualname":"::ExecutionContext","value":"ExecutionContext::{Importing, Syncing, BlockConstruction, OffchainCall}","parent":null,"children":[{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878}],"decl_id":null,"docs":" Context for executing a call into the runtime.\n","sig":null,"attributes":[{"value":"/ Context for executing a call into the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2440,"byte_end":2490,"line_start":94,"line_end":94,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3007,"byte_end":3019,"line_start":110,"line_end":110,"column_start":9,"column_end":21},"name":"capabilities","qualname":"<ExecutionContext>::capabilities","value":"fn (&self) -> offchain::Capabilities","parent":null,"children":[],"decl_id":null,"docs":" Returns the capabilities of particular context.\n","sig":null,"attributes":[{"value":"/ Returns the capabilities of particular context.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2947,"byte_end":2998,"line_start":109,"line_end":109,"column_start":2,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3585},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3626,"byte_end":3631,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::Bytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hex-serialized shim for `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Hex-serialized shim for `Vec<u8>`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3446,"byte_end":3484,"line_start":126,"line_end":126,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3653},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4264,"byte_end":4278,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"OpaqueMetadata","qualname":"::OpaqueMetadata","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stores the encoded `RuntimeMetadata` for the native side as opaque type.\n","sig":null,"attributes":[{"value":"/ Stores the encoded `RuntimeMetadata` for the native side as opaque type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4139,"byte_end":4215,"line_start":153,"line_end":153,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4378,"byte_end":4381,"line_start":159,"line_end":159,"column_start":9,"column_end":12},"name":"new","qualname":"<OpaqueMetadata>::new","value":"fn (metadata: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance with the given metadata blob.\n","sig":null,"attributes":[{"value":"/ Creates a new instance with the given metadata blob.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4313,"byte_end":4369,"line_start":158,"line_end":158,"column_start":2,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4712,"byte_end":4718,"line_start":176,"line_end":176,"column_start":2,"column_end":8},"name":"Native","qualname":"::NativeOrEncoded::Native","value":"NativeOrEncoded::Native(R)","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" The native representation.\n","sig":null,"attributes":[{"value":"/ The native representation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4680,"byte_end":4710,"line_start":175,"line_end":175,"column_start":2,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1904},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4757,"byte_end":4764,"line_start":178,"line_end":178,"column_start":2,"column_end":9},"name":"Encoded","qualname":"::NativeOrEncoded::Encoded","value":"NativeOrEncoded::Encoded(Vec<u8>)","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" The encoded representation.\n","sig":null,"attributes":[{"value":"/ The encoded representation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4724,"byte_end":4755,"line_start":177,"line_end":177,"column_start":2,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1899},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4658,"byte_end":4673,"line_start":174,"line_end":174,"column_start":10,"column_end":25},"name":"NativeOrEncoded","qualname":"::NativeOrEncoded","value":"NativeOrEncoded::{Native, Encoded}","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1904}],"decl_id":null,"docs":" Something that is either a native or an encoded value.\n","sig":null,"attributes":[{"value":"/ Something that is either a native or an encoded value.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4566,"byte_end":4624,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4625,"byte_end":4648,"line_start":173,"line_end":173,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5134,"byte_end":5144,"line_start":191,"line_end":191,"column_start":9,"column_end":19},"name":"as_encoded","qualname":"<NativeOrEncoded<R>>::as_encoded","value":"fn (&self) -> Cow<'_, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return the value as the encoded format.\n","sig":null,"attributes":[{"value":"/ Return the value as the encoded format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5082,"byte_end":5125,"line_start":190,"line_end":190,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5367,"byte_end":5379,"line_start":199,"line_end":199,"column_start":9,"column_end":21},"name":"into_encoded","qualname":"<NativeOrEncoded<R>>::into_encoded","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return the value as the encoded format.\n","sig":null,"attributes":[{"value":"/ Return the value as the encoded format.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5315,"byte_end":5358,"line_start":198,"line_end":198,"column_start":2,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3675},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6182,"byte_end":6198,"line_start":224,"line_end":224,"column_start":10,"column_end":26},"name":"NeverNativeValue","qualname":"::NeverNativeValue","value":"NeverNativeValue::{}","parent":null,"children":[],"decl_id":null,"docs":" A value that is never in a native representation.\n This is type is useful in conjunction with `NativeOrEncoded`.\n","sig":null,"attributes":[{"value":"/ A value that is never in a native representation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6008,"byte_end":6061,"line_start":220,"line_end":220,"column_start":1,"column_end":54}},{"value":"/ This is type is useful in conjunction with `NativeOrEncoded`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6062,"byte_end":6127,"line_start":221,"line_end":221,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6128,"byte_end":6151,"line_start":222,"line_end":222,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":1923},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6737,"byte_end":6743,"line_start":245,"line_end":245,"column_start":11,"column_end":17},"name":"TypeId","qualname":"::TypeId","value":"TypeId","parent":null,"children":[{"krate":0,"index":1924}],"decl_id":null,"docs":" Provide a simple 4 byte identifier for a type.\n","sig":null,"attributes":[{"value":"/ Provide a simple 4 byte identifier for a type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6676,"byte_end":6726,"line_start":244,"line_end":244,"column_start":1,"column_end":51}}]},{"kind":"Const","id":{"krate":0,"index":1924},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":247,"line_end":247,"column_start":8,"column_end":15},"name":"TYPE_ID","qualname":"::TypeId::TYPE_ID","value":"[u8; 4]","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" Simple 4 byte identifier.\n","sig":null,"attributes":[{"value":"/ Simple 4 byte identifier.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6747,"byte_end":6776,"line_start":246,"line_end":246,"column_start":2,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3680},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7031,"byte_end":7036,"line_start":256,"line_end":256,"column_start":2,"column_end":7},"name":"Error","qualname":"::LogLevel::Error","value":"LogLevel::Error","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":" `Error` log level.\n","sig":null,"attributes":[{"value":"/ `Error` log level.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7007,"byte_end":7029,"line_start":255,"line_end":255,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3683},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7066,"byte_end":7070,"line_start":258,"line_end":258,"column_start":2,"column_end":6},"name":"Warn","qualname":"::LogLevel::Warn","value":"LogLevel::Warn","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":" `Warn` log level.\n","sig":null,"attributes":[{"value":"/ `Warn` log level.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7043,"byte_end":7064,"line_start":257,"line_end":257,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3686},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7100,"byte_end":7104,"line_start":260,"line_end":260,"column_start":2,"column_end":6},"name":"Info","qualname":"::LogLevel::Info","value":"LogLevel::Info","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":" `Info` log level.\n","sig":null,"attributes":[{"value":"/ `Info` log level.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7077,"byte_end":7098,"line_start":259,"line_end":259,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3689},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7135,"byte_end":7140,"line_start":262,"line_end":262,"column_start":2,"column_end":7},"name":"Debug","qualname":"::LogLevel::Debug","value":"LogLevel::Debug","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":" `Debug` log level.\n","sig":null,"attributes":[{"value":"/ `Debug` log level.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7111,"byte_end":7133,"line_start":261,"line_end":261,"column_start":2,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3692},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7171,"byte_end":7176,"line_start":264,"line_end":264,"column_start":2,"column_end":7},"name":"Trace","qualname":"::LogLevel::Trace","value":"LogLevel::Trace","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":" `Trace` log level.\n","sig":null,"attributes":[{"value":"/ `Trace` log level.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7147,"byte_end":7169,"line_start":263,"line_end":263,"column_start":2,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3679},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6995,"byte_end":7003,"line_start":254,"line_end":254,"column_start":10,"column_end":18},"name":"LogLevel","qualname":"::LogLevel","value":"LogLevel::{Error, Warn, Info, Debug, Trace}","parent":null,"children":[{"krate":0,"index":3680},{"krate":0,"index":3683},{"krate":0,"index":3686},{"krate":0,"index":3689},{"krate":0,"index":3692}],"decl_id":null,"docs":" A log level matching the one from `log` crate.","sig":null,"attributes":[{"value":"/ A log level matching the one from `log` crate.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6805,"byte_end":6855,"line_start":250,"line_end":250,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6856,"byte_end":6859,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ Used internally by `sp_io::log` method.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6860,"byte_end":6903,"line_start":252,"line_end":252,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15441,"byte_end":15451,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15653,"byte_end":15663,"line_start":28,"line_end":28,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16129,"byte_end":16139,"line_start":47,"line_end":47,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16635,"byte_end":16638,"line_start":70,"line_end":70,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20068,"byte_end":20069,"line_start":76,"line_end":76,"column_start":51,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20299,"byte_end":20308,"line_start":88,"line_end":88,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20396,"byte_end":20405,"line_start":94,"line_end":94,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20532,"byte_end":20541,"line_start":103,"line_end":103,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20679,"byte_end":20688,"line_start":109,"line_end":109,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20769,"byte_end":20778,"line_start":115,"line_end":115,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20860,"byte_end":20869,"line_start":121,"line_end":121,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22147,"byte_end":22161,"line_start":158,"line_end":158,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23953,"byte_end":23967,"line_start":219,"line_end":219,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":32188,"byte_end":32189,"line_start":493,"line_end":493,"column_start":77,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34894,"byte_end":34905,"line_start":572,"line_end":572,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35032,"byte_end":35043,"line_start":579,"line_end":579,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35069,"byte_end":35080,"line_start":581,"line_end":581,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35153,"byte_end":35164,"line_start":587,"line_end":587,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35253,"byte_end":35264,"line_start":593,"line_end":593,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35341,"byte_end":35352,"line_start":599,"line_end":599,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35440,"byte_end":35451,"line_start":605,"line_end":605,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35564,"byte_end":35575,"line_start":611,"line_end":611,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35899,"byte_end":35910,"line_start":630,"line_end":630,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36002,"byte_end":36013,"line_start":636,"line_end":636,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36125,"byte_end":36136,"line_start":643,"line_end":643,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36278,"byte_end":36289,"line_start":649,"line_end":649,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36673,"byte_end":36684,"line_start":663,"line_end":663,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36899,"byte_end":36910,"line_start":670,"line_end":670,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37381,"byte_end":37386,"line_start":688,"line_end":688,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37456,"byte_end":37461,"line_start":692,"line_end":692,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37641,"byte_end":37646,"line_start":701,"line_end":701,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37691,"byte_end":37696,"line_start":705,"line_end":705,"column_start":18,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37718,"byte_end":37723,"line_start":707,"line_end":707,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":38044,"byte_end":38049,"line_start":719,"line_end":719,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46049,"byte_end":46050,"line_start":908,"line_end":908,"column_start":39,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46399,"byte_end":46404,"line_start":919,"line_end":919,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47266,"byte_end":47275,"line_start":949,"line_end":949,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47461,"byte_end":47470,"line_start":961,"line_end":961,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48156,"byte_end":48176,"line_start":983,"line_end":983,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56350,"byte_end":56352,"line_start":27,"line_end":27,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56466,"byte_end":56468,"line_start":29,"line_end":29,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56582,"byte_end":56584,"line_start":31,"line_end":31,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56698,"byte_end":56700,"line_start":33,"line_end":33,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56814,"byte_end":56816,"line_start":35,"line_end":35,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56930,"byte_end":56932,"line_start":37,"line_end":37,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57046,"byte_end":57048,"line_start":39,"line_end":39,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57162,"byte_end":57164,"line_start":41,"line_end":41,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57278,"byte_end":57280,"line_start":43,"line_end":43,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57394,"byte_end":57396,"line_start":45,"line_end":45,"column_start":31,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57512,"byte_end":57515,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57632,"byte_end":57635,"line_start":49,"line_end":49,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57752,"byte_end":57755,"line_start":51,"line_end":51,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57872,"byte_end":57875,"line_start":53,"line_end":53,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57992,"byte_end":57995,"line_start":55,"line_end":55,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58112,"byte_end":58115,"line_start":57,"line_end":57,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58232,"byte_end":58235,"line_start":59,"line_end":59,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58352,"byte_end":58355,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58472,"byte_end":58475,"line_start":63,"line_end":63,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58592,"byte_end":58595,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58712,"byte_end":58715,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58832,"byte_end":58835,"line_start":69,"line_end":69,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58952,"byte_end":58955,"line_start":71,"line_end":71,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59072,"byte_end":59075,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59192,"byte_end":59195,"line_start":75,"line_end":75,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59312,"byte_end":59315,"line_start":77,"line_end":77,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59432,"byte_end":59435,"line_start":79,"line_end":79,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59552,"byte_end":59555,"line_start":81,"line_end":81,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59672,"byte_end":59675,"line_start":83,"line_end":83,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59792,"byte_end":59795,"line_start":85,"line_end":85,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59912,"byte_end":59915,"line_start":87,"line_end":87,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60032,"byte_end":60035,"line_start":89,"line_end":89,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60152,"byte_end":60155,"line_start":91,"line_end":91,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60272,"byte_end":60275,"line_start":93,"line_end":93,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60392,"byte_end":60395,"line_start":95,"line_end":95,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60512,"byte_end":60515,"line_start":97,"line_end":97,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60632,"byte_end":60635,"line_start":99,"line_end":99,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60752,"byte_end":60755,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60872,"byte_end":60875,"line_start":103,"line_end":103,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60992,"byte_end":60995,"line_start":105,"line_end":105,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61112,"byte_end":61115,"line_start":107,"line_end":107,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61232,"byte_end":61235,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61352,"byte_end":61355,"line_start":111,"line_end":111,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61472,"byte_end":61475,"line_start":113,"line_end":113,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61592,"byte_end":61595,"line_start":115,"line_end":115,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61712,"byte_end":61715,"line_start":117,"line_end":117,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61832,"byte_end":61835,"line_start":119,"line_end":119,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61952,"byte_end":61955,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62072,"byte_end":62075,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62192,"byte_end":62195,"line_start":125,"line_end":125,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62312,"byte_end":62315,"line_start":127,"line_end":127,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62432,"byte_end":62435,"line_start":129,"line_end":129,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62552,"byte_end":62555,"line_start":131,"line_end":131,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62672,"byte_end":62675,"line_start":133,"line_end":133,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62792,"byte_end":62795,"line_start":135,"line_end":135,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62912,"byte_end":62915,"line_start":137,"line_end":137,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63032,"byte_end":63035,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63152,"byte_end":63155,"line_start":141,"line_end":141,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63272,"byte_end":63275,"line_start":143,"line_end":143,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63392,"byte_end":63395,"line_start":145,"line_end":145,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63512,"byte_end":63515,"line_start":147,"line_end":147,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63632,"byte_end":63635,"line_start":149,"line_end":149,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63752,"byte_end":63755,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63872,"byte_end":63875,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63992,"byte_end":63995,"line_start":155,"line_end":155,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64112,"byte_end":64115,"line_start":157,"line_end":157,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64232,"byte_end":64235,"line_start":159,"line_end":159,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64352,"byte_end":64355,"line_start":161,"line_end":161,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64472,"byte_end":64475,"line_start":163,"line_end":163,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64592,"byte_end":64595,"line_start":165,"line_end":165,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64712,"byte_end":64715,"line_start":167,"line_end":167,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64832,"byte_end":64835,"line_start":169,"line_end":169,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64952,"byte_end":64955,"line_start":171,"line_end":171,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65072,"byte_end":65075,"line_start":173,"line_end":173,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65192,"byte_end":65195,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65312,"byte_end":65315,"line_start":177,"line_end":177,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65432,"byte_end":65435,"line_start":179,"line_end":179,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65552,"byte_end":65555,"line_start":181,"line_end":181,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65672,"byte_end":65675,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65792,"byte_end":65795,"line_start":185,"line_end":185,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65912,"byte_end":65915,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66032,"byte_end":66035,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66152,"byte_end":66155,"line_start":191,"line_end":191,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66272,"byte_end":66275,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66392,"byte_end":66395,"line_start":195,"line_end":195,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66512,"byte_end":66515,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66632,"byte_end":66635,"line_start":199,"line_end":199,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66752,"byte_end":66755,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66872,"byte_end":66875,"line_start":203,"line_end":203,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66992,"byte_end":66995,"line_start":205,"line_end":205,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67112,"byte_end":67115,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67232,"byte_end":67235,"line_start":209,"line_end":209,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67352,"byte_end":67355,"line_start":211,"line_end":211,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67472,"byte_end":67475,"line_start":213,"line_end":213,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67592,"byte_end":67595,"line_start":215,"line_end":215,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67712,"byte_end":67715,"line_start":217,"line_end":217,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67832,"byte_end":67835,"line_start":219,"line_end":219,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67952,"byte_end":67955,"line_start":221,"line_end":221,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68072,"byte_end":68075,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68192,"byte_end":68195,"line_start":225,"line_end":225,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68314,"byte_end":68318,"line_start":227,"line_end":227,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68438,"byte_end":68442,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68562,"byte_end":68566,"line_start":231,"line_end":231,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68686,"byte_end":68690,"line_start":233,"line_end":233,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68810,"byte_end":68814,"line_start":235,"line_end":235,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68934,"byte_end":68938,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69058,"byte_end":69062,"line_start":239,"line_end":239,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69182,"byte_end":69186,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69306,"byte_end":69310,"line_start":243,"line_end":243,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71643,"byte_end":71647,"line_start":65,"line_end":65,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71904,"byte_end":71910,"line_start":75,"line_end":75,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71983,"byte_end":71989,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72062,"byte_end":72068,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72147,"byte_end":72153,"line_start":93,"line_end":93,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72271,"byte_end":72277,"line_start":101,"line_end":101,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72622,"byte_end":72628,"line_start":122,"line_end":122,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72700,"byte_end":72704,"line_start":128,"line_end":128,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72807,"byte_end":72813,"line_start":135,"line_end":135,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72973,"byte_end":72979,"line_start":143,"line_end":143,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73081,"byte_end":73087,"line_start":149,"line_end":149,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73208,"byte_end":73214,"line_start":156,"line_end":156,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73356,"byte_end":73362,"line_start":162,"line_end":162,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73739,"byte_end":73745,"line_start":176,"line_end":176,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73946,"byte_end":73952,"line_start":183,"line_end":183,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74321,"byte_end":74330,"line_start":194,"line_end":194,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74594,"byte_end":74603,"line_start":209,"line_end":209,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74802,"byte_end":74811,"line_start":216,"line_end":216,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75160,"byte_end":75169,"line_start":225,"line_end":225,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75296,"byte_end":75305,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75380,"byte_end":75389,"line_start":239,"line_end":239,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75468,"byte_end":75477,"line_start":245,"line_end":245,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75507,"byte_end":75511,"line_start":247,"line_end":247,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75681,"byte_end":75690,"line_start":259,"line_end":259,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75763,"byte_end":75772,"line_start":265,"line_end":265,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75845,"byte_end":75854,"line_start":271,"line_end":271,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75946,"byte_end":75955,"line_start":277,"line_end":277,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76300,"byte_end":76309,"line_start":290,"line_end":290,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76429,"byte_end":76438,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77872,"byte_end":77878,"line_start":348,"line_end":348,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78520,"byte_end":78526,"line_start":371,"line_end":371,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78992,"byte_end":78998,"line_start":387,"line_end":387,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79025,"byte_end":79045,"line_start":389,"line_end":389,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79125,"byte_end":79145,"line_start":395,"line_end":395,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79770,"byte_end":79774,"line_start":419,"line_end":419,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83525,"byte_end":83529,"line_start":534,"line_end":534,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":84176,"byte_end":84182,"line_start":553,"line_end":553,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":84260,"byte_end":84269,"line_start":558,"line_end":558,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":84379,"byte_end":84383,"line_start":564,"line_end":564,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91976,"byte_end":91980,"line_start":71,"line_end":71,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92228,"byte_end":92234,"line_start":81,"line_end":81,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92307,"byte_end":92313,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92386,"byte_end":92392,"line_start":93,"line_end":93,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92471,"byte_end":92477,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92655,"byte_end":92659,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92762,"byte_end":92768,"line_start":120,"line_end":120,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92936,"byte_end":92942,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93193,"byte_end":93199,"line_start":142,"line_end":142,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93301,"byte_end":93307,"line_start":148,"line_end":148,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93428,"byte_end":93434,"line_start":155,"line_end":155,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93576,"byte_end":93582,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93959,"byte_end":93965,"line_start":175,"line_end":175,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94166,"byte_end":94172,"line_start":182,"line_end":182,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94660,"byte_end":94669,"line_start":195,"line_end":195,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94933,"byte_end":94942,"line_start":210,"line_end":210,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95141,"byte_end":95150,"line_start":217,"line_end":217,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95499,"byte_end":95508,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95635,"byte_end":95644,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95719,"byte_end":95728,"line_start":240,"line_end":240,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95807,"byte_end":95816,"line_start":246,"line_end":246,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95931,"byte_end":95935,"line_start":254,"line_end":254,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96020,"byte_end":96029,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96102,"byte_end":96111,"line_start":266,"line_end":266,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96184,"byte_end":96193,"line_start":272,"line_end":272,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96326,"byte_end":96335,"line_start":279,"line_end":279,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96448,"byte_end":96457,"line_start":285,"line_end":285,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96802,"byte_end":96811,"line_start":298,"line_end":298,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97289,"byte_end":97298,"line_start":315,"line_end":315,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1139},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98338,"byte_end":98344,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98846,"byte_end":98852,"line_start":362,"line_end":362,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99494,"byte_end":99500,"line_start":385,"line_end":385,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99972,"byte_end":99992,"line_start":401,"line_end":401,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100084,"byte_end":100104,"line_start":407,"line_end":407,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100263,"byte_end":100267,"line_start":414,"line_end":414,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100418,"byte_end":100422,"line_start":421,"line_end":421,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100560,"byte_end":100564,"line_start":428,"line_end":428,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100690,"byte_end":100697,"line_start":435,"line_end":435,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100823,"byte_end":100827,"line_start":442,"line_end":442,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":101318,"byte_end":101322,"line_start":459,"line_end":459,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":104957,"byte_end":104961,"line_start":576,"line_end":576,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106116,"byte_end":106122,"line_start":604,"line_end":604,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106200,"byte_end":106209,"line_start":609,"line_end":609,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106319,"byte_end":106323,"line_start":615,"line_end":615,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117451,"byte_end":117457,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117562,"byte_end":117568,"line_start":64,"line_end":64,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117676,"byte_end":117682,"line_start":70,"line_end":70,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117775,"byte_end":117781,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118063,"byte_end":118069,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118695,"byte_end":118701,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119171,"byte_end":119191,"line_start":129,"line_end":129,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119271,"byte_end":119291,"line_start":135,"line_end":135,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119401,"byte_end":119407,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119429,"byte_end":119435,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119509,"byte_end":119515,"line_start":149,"line_end":149,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119588,"byte_end":119594,"line_start":155,"line_end":155,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119699,"byte_end":119705,"line_start":161,"line_end":161,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119923,"byte_end":119929,"line_start":175,"line_end":175,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120012,"byte_end":120018,"line_start":181,"line_end":181,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120132,"byte_end":120138,"line_start":188,"line_end":188,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120280,"byte_end":120286,"line_start":194,"line_end":194,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120664,"byte_end":120670,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120871,"byte_end":120877,"line_start":215,"line_end":215,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121154,"byte_end":121160,"line_start":223,"line_end":223,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121433,"byte_end":121442,"line_start":233,"line_end":233,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121706,"byte_end":121715,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121914,"byte_end":121923,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122272,"byte_end":122281,"line_start":264,"line_end":264,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122408,"byte_end":122417,"line_start":272,"line_end":272,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122492,"byte_end":122501,"line_start":278,"line_end":278,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122580,"byte_end":122589,"line_start":284,"line_end":284,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122704,"byte_end":122713,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122786,"byte_end":122795,"line_start":298,"line_end":298,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122868,"byte_end":122877,"line_start":304,"line_end":304,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122969,"byte_end":122978,"line_start":310,"line_end":310,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123323,"byte_end":123332,"line_start":323,"line_end":323,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123452,"byte_end":123461,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":124578,"byte_end":124587,"line_start":360,"line_end":360,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125847,"byte_end":125851,"line_start":406,"line_end":406,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":129889,"byte_end":129893,"line_start":517,"line_end":517,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130538,"byte_end":130544,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130620,"byte_end":130629,"line_start":541,"line_end":541,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130735,"byte_end":130739,"line_start":547,"line_end":547,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":140666,"byte_end":140678,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":141087,"byte_end":141099,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165489,"byte_end":165509,"line_start":30,"line_end":30,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":166098,"byte_end":166118,"line_start":48,"line_end":48,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167653,"byte_end":167677,"line_start":103,"line_end":103,"column_start":18,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167732,"byte_end":167756,"line_start":109,"line_end":109,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169691,"byte_end":169719,"line_start":169,"line_end":169,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169923,"byte_end":169951,"line_start":180,"line_end":180,"column_start":10,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170486,"byte_end":170518,"line_start":198,"line_end":198,"column_start":19,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170706,"byte_end":170738,"line_start":209,"line_end":209,"column_start":6,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171255,"byte_end":171284,"line_start":226,"line_end":226,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171480,"byte_end":171509,"line_start":237,"line_end":237,"column_start":10,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175291,"byte_end":175304,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176863,"byte_end":176876,"line_start":128,"line_end":128,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177310,"byte_end":177325,"line_start":141,"line_end":141,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177567,"byte_end":177582,"line_start":150,"line_end":150,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182143,"byte_end":182165,"line_start":330,"line_end":330,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182402,"byte_end":182424,"line_start":339,"line_end":339,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143979,"byte_end":143990,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145091,"byte_end":145100,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146562,"byte_end":146579,"line_start":165,"line_end":165,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147545,"byte_end":147557,"line_start":194,"line_end":194,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147847,"byte_end":147862,"line_start":205,"line_end":205,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148282,"byte_end":148290,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148540,"byte_end":148549,"line_start":232,"line_end":232,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149873,"byte_end":149885,"line_start":283,"line_end":283,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150753,"byte_end":150765,"line_start":317,"line_end":317,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156860,"byte_end":156863,"line_start":491,"line_end":491,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":159041,"byte_end":159061,"line_start":571,"line_end":571,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":159569,"byte_end":159589,"line_start":590,"line_end":590,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162716,"byte_end":162727,"line_start":685,"line_end":685,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163556,"byte_end":163574,"line_start":712,"line_end":712,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191344,"byte_end":191368,"line_start":53,"line_end":53,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207895,"byte_end":207913,"line_start":217,"line_end":217,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208154,"byte_end":208174,"line_start":226,"line_end":226,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208823,"byte_end":208834,"line_start":248,"line_end":248,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208920,"byte_end":208931,"line_start":254,"line_end":254,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209203,"byte_end":209214,"line_start":267,"line_end":267,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209494,"byte_end":209506,"line_start":277,"line_end":277,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210019,"byte_end":210039,"line_start":293,"line_end":293,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211009,"byte_end":211022,"line_start":327,"line_end":327,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211486,"byte_end":211501,"line_start":345,"line_end":345,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213460,"byte_end":213468,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":214508,"byte_end":214516,"line_start":78,"line_end":78,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222323,"byte_end":222344,"line_start":352,"line_end":352,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222619,"byte_end":222640,"line_start":361,"line_end":361,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224636,"byte_end":224644,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224816,"byte_end":224824,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224981,"byte_end":224989,"line_start":48,"line_end":48,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2927,"byte_end":2943,"line_start":108,"line_end":108,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3720,"byte_end":3725,"line_start":131,"line_end":131,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3803,"byte_end":3808,"line_start":135,"line_end":135,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3880,"byte_end":3885,"line_start":139,"line_end":139,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4008,"byte_end":4013,"line_start":145,"line_end":145,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4295,"byte_end":4309,"line_start":157,"line_end":157,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4472,"byte_end":4486,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4847,"byte_end":4862,"line_start":182,"line_end":182,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5060,"byte_end":5075,"line_start":189,"line_end":189,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5579,"byte_end":5594,"line_start":208,"line_end":208,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6250,"byte_end":6266,"line_start":227,"line_end":227,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6453,"byte_end":6469,"line_start":235,"line_end":235,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6521,"byte_end":6537,"line_start":238,"line_end":238,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7204,"byte_end":7212,"line_start":267,"line_end":267,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7539,"byte_end":7547,"line_start":279,"line_end":279,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7777,"byte_end":7782,"line_start":292,"line_end":292,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1495,"byte_end":1502,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1652,"byte_end":1662,"line_start":56,"line_end":56,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1672,"byte_end":1678,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1689,"byte_end":1698,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":366}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1709,"byte_end":1716,"line_start":61,"line_end":61,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":805}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1726,"byte_end":1733,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":995}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1743,"byte_end":1748,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1212}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1758,"byte_end":1762,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1401}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1808,"byte_end":1816,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1428}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142236,"byte_end":142243,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1443}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142277,"byte_end":142284,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1502}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1826,"byte_end":1833,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1662}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1843,"byte_end":1847,"line_start":69,"line_end":69,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1672}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1899,"byte_end":1905,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1696}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1915,"byte_end":1922,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1778}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":1956,"byte_end":1961,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1839}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15441,"byte_end":15451,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":15653,"byte_end":15663,"line_start":28,"line_end":28,"column_start":35,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16129,"byte_end":16139,"line_start":47,"line_end":47,"column_start":33,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":89},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hexdisplay.rs","byte_start":16635,"byte_end":16638,"line_start":70,"line_end":70,"column_start":21,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":103}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20068,"byte_end":20069,"line_start":76,"line_end":76,"column_start":51,"column_end":52},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":147},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20299,"byte_end":20308,"line_start":88,"line_end":88,"column_start":31,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20396,"byte_end":20405,"line_start":94,"line_end":94,"column_start":41,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20532,"byte_end":20541,"line_start":103,"line_end":103,"column_start":38,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20679,"byte_end":20688,"line_start":109,"line_end":109,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20769,"byte_end":20778,"line_start":115,"line_end":115,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2013},"to":{"krate":61,"index":15}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":20860,"byte_end":20869,"line_start":121,"line_end":121,"column_start":27,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":22147,"byte_end":22161,"line_start":158,"line_end":158,"column_start":6,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":23953,"byte_end":23967,"line_start":219,"line_end":219,"column_start":33,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2043},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24795,"byte_end":24800,"line_start":264,"line_end":264,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24803,"byte_end":24808,"line_start":264,"line_end":264,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1801},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24817,"byte_end":24822,"line_start":264,"line_end":264,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1798},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":24831,"byte_end":24838,"line_start":264,"line_end":264,"column_start":58,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1874},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":27104,"byte_end":27109,"line_start":328,"line_end":328,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":198}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":32188,"byte_end":32189,"line_start":493,"line_end":493,"column_start":77,"column_end":78},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34010,"byte_end":34015,"line_start":550,"line_end":550,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":1798},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34024,"byte_end":34029,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":1801},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34038,"byte_end":34045,"line_start":550,"line_end":550,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1874},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34048,"byte_end":34054,"line_start":550,"line_end":550,"column_start":40,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":198},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34057,"byte_end":34067,"line_start":550,"line_end":550,"column_start":49,"column_end":59},"kind":"SuperTrait","from":{"krate":0,"index":343},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34070,"byte_end":34079,"line_start":550,"line_end":550,"column_start":62,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":1619},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34082,"byte_end":34084,"line_start":550,"line_end":550,"column_start":74,"column_end":76},"kind":"SuperTrait","from":{"krate":2,"index":1624},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34087,"byte_end":34092,"line_start":550,"line_end":550,"column_start":79,"column_end":84},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34095,"byte_end":34099,"line_start":550,"line_end":550,"column_start":87,"column_end":91},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34102,"byte_end":34106,"line_start":550,"line_end":550,"column_start":94,"column_end":98},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":34894,"byte_end":34905,"line_start":572,"line_end":572,"column_start":43,"column_end":54},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2192},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35032,"byte_end":35043,"line_start":579,"line_end":579,"column_start":20,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2192},"to":{"krate":0,"index":187}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35069,"byte_end":35080,"line_start":581,"line_end":581,"column_start":22,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35153,"byte_end":35164,"line_start":587,"line_end":587,"column_start":22,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35253,"byte_end":35264,"line_start":593,"line_end":593,"column_start":26,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35341,"byte_end":35352,"line_start":599,"line_end":599,"column_start":26,"column_end":37},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35440,"byte_end":35451,"line_start":605,"line_end":605,"column_start":25,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35564,"byte_end":35575,"line_start":611,"line_end":611,"column_start":49,"column_end":60},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":35899,"byte_end":35910,"line_start":630,"line_end":630,"column_start":32,"column_end":43},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36002,"byte_end":36013,"line_start":636,"line_end":636,"column_start":32,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36125,"byte_end":36136,"line_start":643,"line_end":643,"column_start":28,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36278,"byte_end":36289,"line_start":649,"line_end":649,"column_start":29,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2192},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36673,"byte_end":36684,"line_start":663,"line_end":663,"column_start":27,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2192},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":36899,"byte_end":36910,"line_start":670,"line_end":670,"column_start":39,"column_end":50},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2192},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37381,"byte_end":37386,"line_start":688,"line_end":688,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37456,"byte_end":37461,"line_start":692,"line_end":692,"column_start":23,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37641,"byte_end":37646,"line_start":701,"line_end":701,"column_start":22,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2234},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37691,"byte_end":37696,"line_start":705,"line_end":705,"column_start":18,"column_end":23},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2234},"to":{"krate":0,"index":198}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":37718,"byte_end":37723,"line_start":707,"line_end":707,"column_start":18,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2234},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":38044,"byte_end":38049,"line_start":719,"line_end":719,"column_start":16,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2234},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39244,"byte_end":39254,"line_start":749,"line_end":749,"column_start":17,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":343},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39257,"byte_end":39262,"line_start":749,"line_end":749,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39265,"byte_end":39270,"line_start":749,"line_end":749,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39273,"byte_end":39277,"line_start":749,"line_end":749,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":39280,"byte_end":39284,"line_start":749,"line_end":749,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45598,"byte_end":45602,"line_start":895,"line_end":895,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1807},"to":{"krate":0,"index":327}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45612,"byte_end":45616,"line_start":895,"line_end":895,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":1804},"to":{"krate":0,"index":327}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":45932,"byte_end":45937,"line_start":903,"line_end":903,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":331}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46049,"byte_end":46050,"line_start":908,"line_end":908,"column_start":39,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":334},"to":{"krate":0,"index":327}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":46399,"byte_end":46404,"line_start":919,"line_end":919,"column_start":44,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":340},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47266,"byte_end":47275,"line_start":949,"line_end":949,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2249},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":47461,"byte_end":47470,"line_start":961,"line_end":961,"column_start":31,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2249},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/crypto.rs","byte_start":48156,"byte_end":48176,"line_start":983,"line_end":983,"column_start":31,"column_end":51},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56350,"byte_end":56352,"line_start":27,"line_end":27,"column_start":31,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56466,"byte_end":56468,"line_start":29,"line_end":29,"column_start":31,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":373},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56582,"byte_end":56584,"line_start":31,"line_end":31,"column_start":31,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":377},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56698,"byte_end":56700,"line_start":33,"line_end":33,"column_start":31,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56814,"byte_end":56816,"line_start":35,"line_end":35,"column_start":31,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":385},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":56930,"byte_end":56932,"line_start":37,"line_end":37,"column_start":31,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57046,"byte_end":57048,"line_start":39,"line_end":39,"column_start":31,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":393},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57162,"byte_end":57164,"line_start":41,"line_end":41,"column_start":31,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":397},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57278,"byte_end":57280,"line_start":43,"line_end":43,"column_start":31,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":401},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57394,"byte_end":57396,"line_start":45,"line_end":45,"column_start":31,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57512,"byte_end":57515,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57632,"byte_end":57635,"line_start":49,"line_end":49,"column_start":32,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":413},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57752,"byte_end":57755,"line_start":51,"line_end":51,"column_start":32,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":417},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57872,"byte_end":57875,"line_start":53,"line_end":53,"column_start":32,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":421},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":57992,"byte_end":57995,"line_start":55,"line_end":55,"column_start":32,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":425},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58112,"byte_end":58115,"line_start":57,"line_end":57,"column_start":32,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":429},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58232,"byte_end":58235,"line_start":59,"line_end":59,"column_start":32,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":433},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58352,"byte_end":58355,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":437},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58472,"byte_end":58475,"line_start":63,"line_end":63,"column_start":32,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":441},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58592,"byte_end":58595,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58712,"byte_end":58715,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":449},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58832,"byte_end":58835,"line_start":69,"line_end":69,"column_start":32,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":58952,"byte_end":58955,"line_start":71,"line_end":71,"column_start":32,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59072,"byte_end":59075,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":461},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59192,"byte_end":59195,"line_start":75,"line_end":75,"column_start":32,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":465},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59312,"byte_end":59315,"line_start":77,"line_end":77,"column_start":32,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":469},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59432,"byte_end":59435,"line_start":79,"line_end":79,"column_start":32,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":473},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59552,"byte_end":59555,"line_start":81,"line_end":81,"column_start":32,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":477},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59672,"byte_end":59675,"line_start":83,"line_end":83,"column_start":32,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":481},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59792,"byte_end":59795,"line_start":85,"line_end":85,"column_start":32,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":59912,"byte_end":59915,"line_start":87,"line_end":87,"column_start":32,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60032,"byte_end":60035,"line_start":89,"line_end":89,"column_start":32,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":493},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60152,"byte_end":60155,"line_start":91,"line_end":91,"column_start":32,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":497},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60272,"byte_end":60275,"line_start":93,"line_end":93,"column_start":32,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":501},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60392,"byte_end":60395,"line_start":95,"line_end":95,"column_start":32,"column_end":35},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60512,"byte_end":60515,"line_start":97,"line_end":97,"column_start":32,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60632,"byte_end":60635,"line_start":99,"line_end":99,"column_start":32,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":513},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60752,"byte_end":60755,"line_start":101,"line_end":101,"column_start":32,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":517},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60872,"byte_end":60875,"line_start":103,"line_end":103,"column_start":32,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":60992,"byte_end":60995,"line_start":105,"line_end":105,"column_start":32,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":525},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61112,"byte_end":61115,"line_start":107,"line_end":107,"column_start":32,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":529},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61232,"byte_end":61235,"line_start":109,"line_end":109,"column_start":32,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":533},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61352,"byte_end":61355,"line_start":111,"line_end":111,"column_start":32,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":537},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61472,"byte_end":61475,"line_start":113,"line_end":113,"column_start":32,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":541},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61592,"byte_end":61595,"line_start":115,"line_end":115,"column_start":32,"column_end":35},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":545},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61712,"byte_end":61715,"line_start":117,"line_end":117,"column_start":32,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":549},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61832,"byte_end":61835,"line_start":119,"line_end":119,"column_start":32,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":553},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":61952,"byte_end":61955,"line_start":121,"line_end":121,"column_start":32,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":557},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62072,"byte_end":62075,"line_start":123,"line_end":123,"column_start":32,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":561},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62192,"byte_end":62195,"line_start":125,"line_end":125,"column_start":32,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":565},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62312,"byte_end":62315,"line_start":127,"line_end":127,"column_start":32,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":569},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62432,"byte_end":62435,"line_start":129,"line_end":129,"column_start":32,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":573},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62552,"byte_end":62555,"line_start":131,"line_end":131,"column_start":32,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":577},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62672,"byte_end":62675,"line_start":133,"line_end":133,"column_start":32,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":581},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62792,"byte_end":62795,"line_start":135,"line_end":135,"column_start":32,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":585},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":62912,"byte_end":62915,"line_start":137,"line_end":137,"column_start":32,"column_end":35},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":589},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63032,"byte_end":63035,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":593},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63152,"byte_end":63155,"line_start":141,"line_end":141,"column_start":32,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":597},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63272,"byte_end":63275,"line_start":143,"line_end":143,"column_start":32,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":601},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63392,"byte_end":63395,"line_start":145,"line_end":145,"column_start":32,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":605},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63512,"byte_end":63515,"line_start":147,"line_end":147,"column_start":32,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":609},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63632,"byte_end":63635,"line_start":149,"line_end":149,"column_start":32,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":613},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63752,"byte_end":63755,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":617},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63872,"byte_end":63875,"line_start":153,"line_end":153,"column_start":32,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":621},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":63992,"byte_end":63995,"line_start":155,"line_end":155,"column_start":32,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":625},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64112,"byte_end":64115,"line_start":157,"line_end":157,"column_start":32,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":629},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64232,"byte_end":64235,"line_start":159,"line_end":159,"column_start":32,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":633},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64352,"byte_end":64355,"line_start":161,"line_end":161,"column_start":32,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":637},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64472,"byte_end":64475,"line_start":163,"line_end":163,"column_start":32,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":641},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64592,"byte_end":64595,"line_start":165,"line_end":165,"column_start":32,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":645},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64712,"byte_end":64715,"line_start":167,"line_end":167,"column_start":32,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":649},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64832,"byte_end":64835,"line_start":169,"line_end":169,"column_start":32,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":653},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":64952,"byte_end":64955,"line_start":171,"line_end":171,"column_start":32,"column_end":35},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":657},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65072,"byte_end":65075,"line_start":173,"line_end":173,"column_start":32,"column_end":35},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":661},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65192,"byte_end":65195,"line_start":175,"line_end":175,"column_start":32,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":665},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65312,"byte_end":65315,"line_start":177,"line_end":177,"column_start":32,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":669},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65432,"byte_end":65435,"line_start":179,"line_end":179,"column_start":32,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":673},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65552,"byte_end":65555,"line_start":181,"line_end":181,"column_start":32,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":677},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65672,"byte_end":65675,"line_start":183,"line_end":183,"column_start":32,"column_end":35},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":681},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65792,"byte_end":65795,"line_start":185,"line_end":185,"column_start":32,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":685},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":65912,"byte_end":65915,"line_start":187,"line_end":187,"column_start":32,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":689},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66032,"byte_end":66035,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66152,"byte_end":66155,"line_start":191,"line_end":191,"column_start":32,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":697},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66272,"byte_end":66275,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":701},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66392,"byte_end":66395,"line_start":195,"line_end":195,"column_start":32,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":705},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66512,"byte_end":66515,"line_start":197,"line_end":197,"column_start":32,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":709},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66632,"byte_end":66635,"line_start":199,"line_end":199,"column_start":32,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":713},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66752,"byte_end":66755,"line_start":201,"line_end":201,"column_start":32,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":717},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66872,"byte_end":66875,"line_start":203,"line_end":203,"column_start":32,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":721},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":66992,"byte_end":66995,"line_start":205,"line_end":205,"column_start":32,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":725},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67112,"byte_end":67115,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":729},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67232,"byte_end":67235,"line_start":209,"line_end":209,"column_start":32,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":733},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67352,"byte_end":67355,"line_start":211,"line_end":211,"column_start":32,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":737},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67472,"byte_end":67475,"line_start":213,"line_end":213,"column_start":32,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":741},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67592,"byte_end":67595,"line_start":215,"line_end":215,"column_start":32,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":745},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67712,"byte_end":67715,"line_start":217,"line_end":217,"column_start":32,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":749},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67832,"byte_end":67835,"line_start":219,"line_end":219,"column_start":32,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":753},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":67952,"byte_end":67955,"line_start":221,"line_end":221,"column_start":32,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":757},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68072,"byte_end":68075,"line_start":223,"line_end":223,"column_start":32,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":761},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68192,"byte_end":68195,"line_start":225,"line_end":225,"column_start":32,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":765},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68314,"byte_end":68318,"line_start":227,"line_end":227,"column_start":33,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":769},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68438,"byte_end":68442,"line_start":229,"line_end":229,"column_start":33,"column_end":37},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68562,"byte_end":68566,"line_start":231,"line_end":231,"column_start":33,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":777},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68686,"byte_end":68690,"line_start":233,"line_end":233,"column_start":33,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68810,"byte_end":68814,"line_start":235,"line_end":235,"column_start":33,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":68934,"byte_end":68938,"line_start":237,"line_end":237,"column_start":33,"column_end":37},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":789},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69058,"byte_end":69062,"line_start":239,"line_end":239,"column_start":33,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":793},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69182,"byte_end":69186,"line_start":241,"line_end":241,"column_start":33,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":797},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/u32_trait.rs","byte_start":69306,"byte_end":69310,"line_start":243,"line_end":243,"column_start":33,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71643,"byte_end":71647,"line_start":65,"line_end":65,"column_start":16,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71904,"byte_end":71910,"line_start":75,"line_end":75,"column_start":26,"column_end":32},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":71983,"byte_end":71989,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72062,"byte_end":72068,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72147,"byte_end":72153,"line_start":93,"line_end":93,"column_start":16,"column_end":22},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72271,"byte_end":72277,"line_start":101,"line_end":101,"column_start":42,"column_end":48},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72622,"byte_end":72628,"line_start":122,"line_end":122,"column_start":21,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72700,"byte_end":72704,"line_start":128,"line_end":128,"column_start":23,"column_end":27},"kind":{"Impl":{"id":180}},"from":{"krate":85,"index":1722},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72807,"byte_end":72813,"line_start":135,"line_end":135,"column_start":28,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":72973,"byte_end":72979,"line_start":143,"line_end":143,"column_start":34,"column_end":40},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2395},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73081,"byte_end":73087,"line_start":149,"line_end":149,"column_start":30,"column_end":36},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2395},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73208,"byte_end":73214,"line_start":156,"line_end":156,"column_start":28,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73356,"byte_end":73362,"line_start":162,"line_end":162,"column_start":29,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2395},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73739,"byte_end":73745,"line_start":176,"line_end":176,"column_start":20,"column_end":26},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2395},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":73946,"byte_end":73952,"line_start":183,"line_end":183,"column_start":32,"column_end":38},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2395},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74321,"byte_end":74330,"line_start":194,"line_end":194,"column_start":42,"column_end":51},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74594,"byte_end":74603,"line_start":209,"line_end":209,"column_start":20,"column_end":29},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2450},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":74802,"byte_end":74811,"line_start":216,"line_end":216,"column_start":32,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2450},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75160,"byte_end":75169,"line_start":225,"line_end":225,"column_start":16,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75296,"byte_end":75305,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75380,"byte_end":75389,"line_start":239,"line_end":239,"column_start":20,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75468,"byte_end":75477,"line_start":245,"line_end":245,"column_start":13,"column_end":22},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75507,"byte_end":75511,"line_start":247,"line_end":247,"column_start":26,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":85,"index":1866},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75681,"byte_end":75690,"line_start":259,"line_end":259,"column_start":26,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75763,"byte_end":75772,"line_start":265,"line_end":265,"column_start":22,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75845,"byte_end":75854,"line_start":271,"line_end":271,"column_start":22,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":75946,"byte_end":75955,"line_start":277,"line_end":277,"column_start":29,"column_end":38},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76300,"byte_end":76309,"line_start":290,"line_end":290,"column_start":29,"column_end":38},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":6169}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":76429,"byte_end":76438,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":77872,"byte_end":77878,"line_start":348,"line_end":348,"column_start":6,"column_end":12},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78520,"byte_end":78526,"line_start":371,"line_end":371,"column_start":22,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2395},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":78992,"byte_end":78998,"line_start":387,"line_end":387,"column_start":17,"column_end":23},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2395},"to":{"krate":0,"index":198}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79025,"byte_end":79045,"line_start":389,"line_end":389,"column_start":23,"column_end":43},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79125,"byte_end":79145,"line_start":395,"line_end":395,"column_start":24,"column_end":44},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":79770,"byte_end":79774,"line_start":419,"line_end":419,"column_start":20,"column_end":24},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":843},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":83525,"byte_end":83529,"line_start":534,"line_end":534,"column_start":6,"column_end":10},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":84176,"byte_end":84182,"line_start":553,"line_end":553,"column_start":21,"column_end":27},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2395},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":84260,"byte_end":84269,"line_start":558,"line_end":558,"column_start":21,"column_end":30},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2450},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ed25519.rs","byte_start":84379,"byte_end":84383,"line_start":564,"line_end":564,"column_start":21,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":843},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":91976,"byte_end":91980,"line_start":71,"line_end":71,"column_start":16,"column_end":20},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92228,"byte_end":92234,"line_start":81,"line_end":81,"column_start":26,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92307,"byte_end":92313,"line_start":87,"line_end":87,"column_start":22,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92386,"byte_end":92392,"line_start":93,"line_end":93,"column_start":22,"column_end":28},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92471,"byte_end":92477,"line_start":99,"line_end":99,"column_start":16,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92655,"byte_end":92659,"line_start":113,"line_end":113,"column_start":23,"column_end":27},"kind":{"Impl":{"id":230}},"from":{"krate":85,"index":1722},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92762,"byte_end":92768,"line_start":120,"line_end":120,"column_start":28,"column_end":34},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":92936,"byte_end":92942,"line_start":128,"line_end":128,"column_start":42,"column_end":48},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93193,"byte_end":93199,"line_start":142,"line_end":142,"column_start":34,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2525},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93301,"byte_end":93307,"line_start":148,"line_end":148,"column_start":30,"column_end":36},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2525},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93428,"byte_end":93434,"line_start":155,"line_end":155,"column_start":28,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93576,"byte_end":93582,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":93959,"byte_end":93965,"line_start":175,"line_end":175,"column_start":20,"column_end":26},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2525},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94166,"byte_end":94172,"line_start":182,"line_end":182,"column_start":32,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2525},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94660,"byte_end":94669,"line_start":195,"line_end":195,"column_start":42,"column_end":51},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":94933,"byte_end":94942,"line_start":210,"line_end":210,"column_start":20,"column_end":29},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2580},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95141,"byte_end":95150,"line_start":217,"line_end":217,"column_start":32,"column_end":41},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2580},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95499,"byte_end":95508,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95635,"byte_end":95644,"line_start":234,"line_end":234,"column_start":18,"column_end":27},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95719,"byte_end":95728,"line_start":240,"line_end":240,"column_start":20,"column_end":29},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95807,"byte_end":95816,"line_start":246,"line_end":246,"column_start":13,"column_end":22},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":95931,"byte_end":95935,"line_start":254,"line_end":254,"column_start":26,"column_end":30},"kind":{"Impl":{"id":251}},"from":{"krate":85,"index":1866},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96020,"byte_end":96029,"line_start":260,"line_end":260,"column_start":26,"column_end":35},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96102,"byte_end":96111,"line_start":266,"line_end":266,"column_start":22,"column_end":31},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96184,"byte_end":96193,"line_start":272,"line_end":272,"column_start":22,"column_end":31},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96326,"byte_end":96335,"line_start":279,"line_end":279,"column_start":38,"column_end":47},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96448,"byte_end":96457,"line_start":285,"line_end":285,"column_start":29,"column_end":38},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":96802,"byte_end":96811,"line_start":298,"line_end":298,"column_start":29,"column_end":38},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":6169}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":97289,"byte_end":97298,"line_start":315,"line_end":315,"column_start":6,"column_end":15},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98338,"byte_end":98344,"line_start":345,"line_end":345,"column_start":17,"column_end":23},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2525},"to":{"krate":0,"index":198}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":98846,"byte_end":98852,"line_start":362,"line_end":362,"column_start":6,"column_end":12},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99494,"byte_end":99500,"line_start":385,"line_end":385,"column_start":22,"column_end":28},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2525},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":99972,"byte_end":99992,"line_start":401,"line_end":401,"column_start":23,"column_end":43},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100084,"byte_end":100104,"line_start":407,"line_end":407,"column_start":24,"column_end":44},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100263,"byte_end":100267,"line_start":414,"line_end":414,"column_start":30,"column_end":34},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100418,"byte_end":100422,"line_start":421,"line_end":421,"column_start":26,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100560,"byte_end":100564,"line_start":428,"line_end":428,"column_start":36,"column_end":40},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100690,"byte_end":100697,"line_start":435,"line_end":435,"column_start":33,"column_end":40},"kind":{"Impl":{"id":267}},"from":{"krate":96,"index":914},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":100823,"byte_end":100827,"line_start":442,"line_end":442,"column_start":37,"column_end":41},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":101318,"byte_end":101322,"line_start":459,"line_end":459,"column_start":20,"column_end":24},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":104957,"byte_end":104961,"line_start":576,"line_end":576,"column_start":6,"column_end":10},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106116,"byte_end":106122,"line_start":604,"line_end":604,"column_start":21,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2525},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106200,"byte_end":106209,"line_start":609,"line_end":609,"column_start":21,"column_end":30},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2580},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/sr25519.rs","byte_start":106319,"byte_end":106323,"line_start":615,"line_end":615,"column_start":21,"column_end":25},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1046},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117451,"byte_end":117457,"line_start":58,"line_end":58,"column_start":21,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1656}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117562,"byte_end":117568,"line_start":64,"line_end":64,"column_start":14,"column_end":20},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1645}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117676,"byte_end":117682,"line_start":70,"line_end":70,"column_start":20,"column_end":26},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":117775,"byte_end":117781,"line_start":76,"line_end":76,"column_start":13,"column_end":19},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118063,"byte_end":118069,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":118695,"byte_end":118701,"line_start":113,"line_end":113,"column_start":22,"column_end":28},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2624},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119171,"byte_end":119191,"line_start":129,"line_end":129,"column_start":23,"column_end":43},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119271,"byte_end":119291,"line_start":135,"line_end":135,"column_start":24,"column_end":44},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2352},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119401,"byte_end":119407,"line_start":141,"line_end":141,"column_start":17,"column_end":23},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2624},"to":{"krate":0,"index":198}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119429,"byte_end":119435,"line_start":143,"line_end":143,"column_start":18,"column_end":24},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119509,"byte_end":119515,"line_start":149,"line_end":149,"column_start":22,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119588,"byte_end":119594,"line_start":155,"line_end":155,"column_start":22,"column_end":28},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119699,"byte_end":119705,"line_start":161,"line_end":161,"column_start":42,"column_end":48},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":119923,"byte_end":119929,"line_start":175,"line_end":175,"column_start":21,"column_end":27},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120012,"byte_end":120018,"line_start":181,"line_end":181,"column_start":34,"column_end":40},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2624},"to":{"krate":0,"index":140}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120132,"byte_end":120138,"line_start":188,"line_end":188,"column_start":28,"column_end":34},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120280,"byte_end":120286,"line_start":194,"line_end":194,"column_start":29,"column_end":35},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120664,"byte_end":120670,"line_start":208,"line_end":208,"column_start":20,"column_end":26},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2624},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":120871,"byte_end":120877,"line_start":215,"line_end":215,"column_start":32,"column_end":38},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2624},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121154,"byte_end":121160,"line_start":223,"line_end":223,"column_start":29,"column_end":35},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":6169}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121433,"byte_end":121442,"line_start":233,"line_end":233,"column_start":42,"column_end":51},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121706,"byte_end":121715,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2676},"to":{"krate":15,"index":1680}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":121914,"byte_end":121923,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2676},"to":{"krate":15,"index":1192}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122272,"byte_end":122281,"line_start":264,"line_end":264,"column_start":16,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122408,"byte_end":122417,"line_start":272,"line_end":272,"column_start":18,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122492,"byte_end":122501,"line_start":278,"line_end":278,"column_start":20,"column_end":29},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122580,"byte_end":122589,"line_start":284,"line_end":284,"column_start":13,"column_end":22},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1624}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122704,"byte_end":122713,"line_start":292,"line_end":292,"column_start":26,"column_end":35},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122786,"byte_end":122795,"line_start":298,"line_end":298,"column_start":22,"column_end":31},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122868,"byte_end":122877,"line_start":304,"line_end":304,"column_start":22,"column_end":31},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1801}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":122969,"byte_end":122978,"line_start":310,"line_end":310,"column_start":29,"column_end":38},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123323,"byte_end":123332,"line_start":323,"line_end":323,"column_start":29,"column_end":38},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":6169}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":123452,"byte_end":123461,"line_start":329,"line_end":329,"column_start":6,"column_end":15},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":124578,"byte_end":124587,"line_start":360,"line_end":360,"column_start":62,"column_end":71},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2676},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":125847,"byte_end":125851,"line_start":406,"line_end":406,"column_start":20,"column_end":24},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2706},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":129889,"byte_end":129893,"line_start":517,"line_end":517,"column_start":6,"column_end":10},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130538,"byte_end":130544,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2624},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130620,"byte_end":130629,"line_start":541,"line_end":541,"column_start":21,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2676},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/ecdsa.rs","byte_start":130735,"byte_end":130739,"line_start":547,"line_end":547,"column_start":21,"column_end":25},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2706},"to":{"krate":0,"index":343}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":140666,"byte_end":140678,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2711},"to":{"krate":115,"index":11}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/hasher.rs","byte_start":141087,"byte_end":141099,"line_start":49,"line_end":49,"column_start":18,"column_end":30},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2715},"to":{"krate":115,"index":11}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":165489,"byte_end":165509,"line_start":30,"line_end":30,"column_start":6,"column_end":26},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":166098,"byte_end":166118,"line_start":48,"line_end":48,"column_start":26,"column_end":46},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167653,"byte_end":167677,"line_start":103,"line_end":103,"column_start":18,"column_end":42},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2747},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":167732,"byte_end":167756,"line_start":109,"line_end":109,"column_start":6,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169691,"byte_end":169719,"line_start":169,"line_end":169,"column_start":23,"column_end":51},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":169923,"byte_end":169951,"line_start":180,"line_end":180,"column_start":10,"column_end":38},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170486,"byte_end":170518,"line_start":198,"line_end":198,"column_start":19,"column_end":51},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":1485},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":170706,"byte_end":170738,"line_start":209,"line_end":209,"column_start":6,"column_end":38},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":1485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171255,"byte_end":171284,"line_start":226,"line_end":226,"column_start":23,"column_end":52},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":1492},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/storage.rs","byte_start":171480,"byte_end":171509,"line_start":237,"line_end":237,"column_start":10,"column_end":39},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":175291,"byte_end":175304,"line_start":82,"line_end":82,"column_start":6,"column_end":19},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":176863,"byte_end":176876,"line_start":128,"line_end":128,"column_start":15,"column_end":28},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2778},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177310,"byte_end":177325,"line_start":141,"line_end":141,"column_start":6,"column_end":21},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":177567,"byte_end":177582,"line_start":150,"line_end":150,"column_start":34,"column_end":49},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2790},"to":{"krate":0,"index":1596}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182143,"byte_end":182165,"line_start":330,"line_end":330,"column_start":6,"column_end":28},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/testing.rs","byte_start":182402,"byte_end":182424,"line_start":339,"line_end":339,"column_start":26,"column_end":48},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2803},"to":{"krate":0,"index":1657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142466,"byte_end":142471,"line_start":36,"line_end":36,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142474,"byte_end":142478,"line_start":36,"line_end":36,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":142481,"byte_end":142485,"line_start":36,"line_end":36,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1551}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":143979,"byte_end":143990,"line_start":74,"line_end":74,"column_start":23,"column_end":34},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":2808},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":145091,"byte_end":145100,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":2941},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":146562,"byte_end":146579,"line_start":165,"line_end":165,"column_start":23,"column_end":40},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147545,"byte_end":147557,"line_start":194,"line_end":194,"column_start":6,"column_end":18},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":147847,"byte_end":147862,"line_start":205,"line_end":205,"column_start":6,"column_end":21},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":3090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148282,"byte_end":148290,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":148540,"byte_end":148549,"line_start":232,"line_end":232,"column_start":6,"column_end":15},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":3128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":149873,"byte_end":149885,"line_start":283,"line_end":283,"column_start":6,"column_end":18},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":3259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150753,"byte_end":150765,"line_start":317,"line_end":317,"column_start":37,"column_end":49},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":3259},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":150954,"byte_end":150958,"line_start":324,"line_end":324,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1596}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":156860,"byte_end":156863,"line_start":491,"line_end":491,"column_start":51,"column_end":54},"kind":{"Impl":{"id":408}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":1596}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":159041,"byte_end":159061,"line_start":571,"line_end":571,"column_start":9,"column_end":29},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":1629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":159569,"byte_end":159589,"line_start":590,"line_end":590,"column_start":42,"column_end":62},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":1629},"to":{"krate":0,"index":1596}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":162716,"byte_end":162727,"line_start":685,"line_end":685,"column_start":6,"column_end":17},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/offchain/mod.rs","byte_start":163556,"byte_end":163574,"line_start":712,"line_end":712,"column_start":6,"column_end":24},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":3284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/changes_trie.rs","byte_start":191344,"byte_end":191368,"line_start":53,"line_end":53,"column_start":6,"column_end":30},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202325,"byte_end":202329,"line_start":55,"line_end":55,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1714}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":202332,"byte_end":202336,"line_start":55,"line_end":55,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1714}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206837,"byte_end":206842,"line_start":186,"line_end":186,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206845,"byte_end":206849,"line_start":186,"line_end":186,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206852,"byte_end":206856,"line_start":186,"line_end":186,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206859,"byte_end":206869,"line_start":186,"line_end":186,"column_start":47,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1767},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":206872,"byte_end":206877,"line_start":186,"line_end":186,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1593},"to":{"krate":0,"index":1732}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":207895,"byte_end":207913,"line_start":217,"line_end":217,"column_start":31,"column_end":49},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":1740},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208154,"byte_end":208174,"line_start":226,"line_end":226,"column_start":27,"column_end":47},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":1748},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208823,"byte_end":208834,"line_start":248,"line_end":248,"column_start":24,"column_end":35},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":208920,"byte_end":208931,"line_start":254,"line_end":254,"column_start":10,"column_end":21},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209203,"byte_end":209214,"line_start":267,"line_end":267,"column_start":31,"column_end":42},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":3528},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":209494,"byte_end":209506,"line_start":277,"line_end":277,"column_start":28,"column_end":40},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210019,"byte_end":210039,"line_start":293,"line_end":293,"column_start":6,"column_end":26},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210226,"byte_end":210230,"line_start":301,"line_end":301,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1767}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":210233,"byte_end":210237,"line_start":301,"line_end":301,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1767}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211009,"byte_end":211022,"line_start":327,"line_end":327,"column_start":6,"column_end":19},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211251,"byte_end":211256,"line_start":335,"line_end":335,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":122,"index":10},"to":{"krate":0,"index":1772}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211259,"byte_end":211263,"line_start":335,"line_end":335,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":1883},"to":{"krate":0,"index":1772}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211266,"byte_end":211270,"line_start":335,"line_end":335,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1895},"to":{"krate":0,"index":1772}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/traits.rs","byte_start":211486,"byte_end":211501,"line_start":345,"line_end":345,"column_start":6,"column_end":21},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":213460,"byte_end":213468,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":214508,"byte_end":214516,"line_start":78,"line_end":78,"column_start":41,"column_end":49},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3570},"to":{"krate":0,"index":1714}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222323,"byte_end":222344,"line_start":352,"line_end":352,"column_start":6,"column_end":27},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/testing.rs","byte_start":222619,"byte_end":222640,"line_start":361,"line_end":361,"column_start":39,"column_end":60},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3574},"to":{"krate":0,"index":1776}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224636,"byte_end":224644,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224816,"byte_end":224824,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3579},"to":{"krate":122,"index":10}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/tasks.rs","byte_start":224981,"byte_end":224989,"line_start":48,"line_end":48,"column_start":25,"column_end":33},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3579},"to":{"krate":0,"index":1772}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":2927,"byte_end":2943,"line_start":108,"line_end":108,"column_start":6,"column_end":22},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":1871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3720,"byte_end":3725,"line_start":131,"line_end":131,"column_start":24,"column_end":29},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3585},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3803,"byte_end":3808,"line_start":135,"line_end":135,"column_start":31,"column_end":36},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":3585},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":3880,"byte_end":3885,"line_start":139,"line_end":139,"column_start":16,"column_end":21},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":3585},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4008,"byte_end":4013,"line_start":145,"line_end":145,"column_start":31,"column_end":36},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3585},"to":{"krate":2,"index":7498}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4295,"byte_end":4309,"line_start":157,"line_end":157,"column_start":6,"column_end":20},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":3653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4472,"byte_end":4486,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3653},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":4847,"byte_end":4862,"line_start":182,"line_end":182,"column_start":47,"column_end":62},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5060,"byte_end":5075,"line_start":189,"line_end":189,"column_start":24,"column_end":39},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":1899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":5579,"byte_end":5594,"line_start":208,"line_end":208,"column_start":50,"column_end":65},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6250,"byte_end":6266,"line_start":227,"line_end":227,"column_start":24,"column_end":40},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":3675},"to":{"krate":17,"index":107}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6453,"byte_end":6469,"line_start":235,"line_end":235,"column_start":28,"column_end":44},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":3675},"to":{"krate":17,"index":657}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":6521,"byte_end":6537,"line_start":238,"line_end":238,"column_start":24,"column_end":40},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3675},"to":{"krate":17,"index":119}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7204,"byte_end":7212,"line_start":267,"line_end":267,"column_start":20,"column_end":28},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":3679},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7539,"byte_end":7547,"line_start":279,"line_end":279,"column_start":27,"column_end":35},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":3679},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/core/src/lib.rs","byte_start":7777,"byte_end":7782,"line_start":292,"line_end":292,"column_start":30,"column_end":35},"kind":{"Impl":{"id":479}},"from":{"krate":133,"index":177},"to":{"krate":2,"index":1807}}]}