{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parity_util_mem","--edition=2018","/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"parking_lot\"","--cfg","feature=\"primitive-types\"","--cfg","feature=\"std\"","-C","metadata=9fdf3a635a70401d","-C","extra-filename=-9fdf3a635a70401d","--out-dir","/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps","--extern","cfg_if=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libcfg_if-eec319d3a271fda7.rmeta","--extern","impl_trait_for_tuples=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libimpl_trait_for_tuples-d3ed7ab712078c16.so","--extern","parity_util_mem_derive=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libparity_util_mem_derive-0b08bf06c7bc5822.so","--extern","parking_lot=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libparking_lot-e0419b59a318d878.rmeta","--extern","primitive_types=/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libprimitive_types-0e12049147ed9fdd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/template/target/rls/debug/deps/libparity_util_mem-9fdf3a635a70401d.rmeta"},"prelude":{"crate_id":{"name":"parity_util_mem","disambiguator":[3673319352374838710,9109263036345257279]},"crate_root":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src","external_crates":[{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":15,"id":{"name":"primitive_types","disambiguator":[2776970764958629400,18334998628678477911]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":16,"id":{"name":"fixed_hash","disambiguator":[14470681025450579457,6662852255323844967]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":17,"id":{"name":"static_assertions","disambiguator":[2878701793821026304,16986476632016046768]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":18,"id":{"name":"byteorder","disambiguator":[8554857055557278435,8958170879440380952]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":19,"id":{"name":"rustc_hex","disambiguator":[10434719161438519964,14346445293922435357]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":20,"id":{"name":"rand","disambiguator":[14852911624231536199,4329007306221210672]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":21,"id":{"name":"rand_core","disambiguator":[8541689899428407495,4972805062826425925]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":22,"id":{"name":"getrandom","disambiguator":[13618700189715949314,16365477718892601647]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[905820604123660737,9080961431952796619]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":24,"id":{"name":"libc","disambiguator":[15850054303935087509,2172107276946414463]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":25,"id":{"name":"rand_chacha","disambiguator":[5821611541543872135,256988615729141104]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":26,"id":{"name":"ppv_lite86","disambiguator":[2483357076725709498,12969028423603202931]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":27,"id":{"name":"rand_pcg","disambiguator":[1329119161985853472,9189108109752656620]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":28,"id":{"name":"uint","disambiguator":[16452983131080529725,17838387769575104159]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":29,"id":{"name":"crunchy","disambiguator":[8492468043868098796,9147562601699587076]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":30,"id":{"name":"impl_serde","disambiguator":[8980924363609643778,8190912899161023955]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":31,"id":{"name":"serde","disambiguator":[13481768320746797087,7282555180186658229]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":32,"id":{"name":"serde_derive","disambiguator":[14214070500933581380,3624999802238555216]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":33,"id":{"name":"impl_codec","disambiguator":[10299275643052968783,3017370659095368483]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":34,"id":{"name":"parity_scale_codec","disambiguator":[15638882894901664300,15938776292720705477]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":35,"id":{"name":"parity_scale_codec_derive","disambiguator":[379814399442547304,17581532101419470896]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":36,"id":{"name":"arrayvec","disambiguator":[1332372460335241694,11021197825096612758]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","num":37,"id":{"name":"byte_slice_cast","disambiguator":[3640415380441394815,6311138287404375443]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","num":38,"id":{"name":"parity_util_mem_derive","disambiguator":[16094718766684562609,9112552796339687964]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","num":39,"id":{"name":"impl_trait_for_tuples","disambiguator":[11683877044574956040,7740304785833687617]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","num":40,"id":{"name":"parking_lot","disambiguator":[4077664270008470479,11966793794786088639]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","num":41,"id":{"name":"lock_api","disambiguator":[2863804777762583869,14799884867851676310]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","num":42,"id":{"name":"scopeguard","disambiguator":[5081943333480440636,9076196664652206448]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","num":43,"id":{"name":"parking_lot_core","disambiguator":[10023082735607659909,12352998360333487442]}},{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","num":44,"id":{"name":"smallvec","disambiguator":[4204636050770628742,12614792987383810951]}}],"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":342,"byte_end":2921,"line_start":9,"line_end":98,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2145,"byte_end":2160,"line_start":66,"line_end":66,"column_start":21,"column_end":36},"alias_span":null,"name":"MallocSizeOfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2184,"byte_end":2196,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"alias_span":null,"name":"MallocSizeOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2198,"byte_end":2213,"line_start":67,"line_end":67,"column_start":37,"column_end":52},"alias_span":null,"name":"MallocSizeOfOps","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2249,"byte_end":2250,"line_start":69,"line_end":69,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":342,"byte_end":2921,"line_start":9,"line_end":98,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":21},{"krate":0,"index":185},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Crate for parity memory management related utilities.\n It includes global allocator choice, heap measurement and\n memory erasure.\n","sig":null,"attributes":[{"value":"! Crate for parity memory management related utilities.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":342,"byte_end":399,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"! It includes global allocator choice, heap measurement and","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":400,"byte_end":461,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"! memory erasure.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":462,"byte_end":481,"line_start":11,"line_end":11,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocators","qualname":"::allocators","value":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" default allocator management\n Features are:\n - windows:\n\t - no features: default implementation from servo `heapsize` crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - jemalloc: default windows allocator is used instead\n\t - mimalloc: use mimallocator crate\n - arch x86:\n\t - no features: use default alloc\n\t - jemalloc: use jemallocator crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - mimalloc: use mimallocator crate\n - arch x86/macos:\n\t - no features: use default alloc, requires using `estimate_size`\n\t - jemalloc: use jemallocator crate\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - mimalloc: use mimallocator crate\n - arch wasm32:\n\t - no features: default to `estimate_size`\n\t - weealloc: default to `estimate_size`\n\t - dlmalloc: default to `estimate_size`\n\t - jemalloc: compile error\n\t - mimalloc: compile error (until https://github.com/microsoft/mimalloc/pull/32 is merged)\n","sig":null,"attributes":[{"value":"! default allocator management","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3265,"byte_end":3297,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"! Features are:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3298,"byte_end":3315,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"! - windows:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3316,"byte_end":3330,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!\t - no features: default implementation from servo `heapsize` crate","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3331,"byte_end":3401,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"!\t - weealloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3402,"byte_end":3445,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"!\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3446,"byte_end":3489,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"!\t - jemalloc: default windows allocator is used instead","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3490,"byte_end":3548,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"!\t - mimalloc: use mimallocator crate","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3549,"byte_end":3588,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"! - arch x86:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3589,"byte_end":3604,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"!\t - no features: use default alloc","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3605,"byte_end":3642,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"!\t - jemalloc: use jemallocator crate","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3643,"byte_end":3682,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"!\t - weealloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3683,"byte_end":3726,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"!\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3727,"byte_end":3770,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"!\t - mimalloc: use mimallocator crate","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3771,"byte_end":3810,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"! - arch x86/macos:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3811,"byte_end":3832,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"!\t - no features: use default alloc, requires using `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3833,"byte_end":3902,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"!\t - jemalloc: use jemallocator crate","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3903,"byte_end":3942,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"!\t - weealloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3943,"byte_end":3986,"line_start":26,"line_end":26,"column_start":1,"column_end":44}},{"value":"!\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":3987,"byte_end":4030,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"!\t - mimalloc: use mimallocator crate","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4031,"byte_end":4070,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"! - arch wasm32:","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4071,"byte_end":4089,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"!\t - no features: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4090,"byte_end":4136,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"!\t - weealloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4137,"byte_end":4180,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"!\t - dlmalloc: default to `estimate_size`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4181,"byte_end":4224,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"!\t - jemalloc: compile error","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4225,"byte_end":4255,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"!\t - mimalloc: compile error (until https://github.com/microsoft/mimalloc/pull/32 is merged)","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":4256,"byte_end":4350,"line_start":34,"line_end":34,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":6945,"byte_end":6964,"line_start":125,"line_end":125,"column_start":8,"column_end":27},"name":"new_malloc_size_ops","qualname":"::allocators::new_malloc_size_ops","value":"fn () -> MallocSizeOfOps","parent":null,"children":[],"decl_id":null,"docs":" Get a new instance of a MallocSizeOfOps\n","sig":null,"attributes":[{"value":"/ Get a new instance of a MallocSizeOfOps","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":6894,"byte_end":6937,"line_start":124,"line_end":124,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":14},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7309,"byte_end":7324,"line_start":133,"line_end":133,"column_start":11,"column_end":26},"name":"MallocSizeOfExt","qualname":"::allocators::MallocSizeOfExt","value":"MallocSizeOfExt: MallocSizeOf","parent":null,"children":[{"krate":0,"index":15}],"decl_id":null,"docs":" Extension methods for `MallocSizeOf` trait, do not implement\n directly.\n It allows getting heapsize without exposing `MallocSizeOfOps`\n (a single default `MallocSizeOfOps` is used for each call).\n","sig":null,"attributes":[{"value":"/ Extension methods for `MallocSizeOf` trait, do not implement","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7090,"byte_end":7154,"line_start":129,"line_end":129,"column_start":1,"column_end":65}},{"value":"/ directly.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7155,"byte_end":7168,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/ It allows getting heapsize without exposing `MallocSizeOfOps`","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7169,"byte_end":7234,"line_start":131,"line_end":131,"column_start":1,"column_end":66}},{"value":"/ (a single default `MallocSizeOfOps` is used for each call).","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7235,"byte_end":7298,"line_start":132,"line_end":132,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7415,"byte_end":7429,"line_start":136,"line_end":136,"column_start":5,"column_end":19},"name":"malloc_size_of","qualname":"::allocators::MallocSizeOfExt::malloc_size_of","value":"fn (&self) -> usize","parent":{"krate":0,"index":14},"children":[],"decl_id":null,"docs":" Method to launch a heapsize measurement with a\n fresh state.\n","sig":null,"attributes":[{"value":"/ Method to launch a heapsize measurement with a","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7342,"byte_end":7392,"line_start":134,"line_end":134,"column_start":2,"column_end":52}},{"value":"/ fresh state.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7394,"byte_end":7410,"line_start":135,"line_end":135,"column_start":2,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":11627,"byte_end":11642,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"MallocSizeOfOps","qualname":"::malloc_size::MallocSizeOfOps","value":"MallocSizeOfOps {  }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Operations used when measuring heap usage of data structures.\n","sig":null,"attributes":[{"value":"/ Operations used when measuring heap usage of data structures.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":11550,"byte_end":11615,"line_start":87,"line_end":87,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":12303,"byte_end":12306,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"new","qualname":"<MallocSizeOfOps>::new","value":"fn (size_of: VoidPtrToSizeFn, malloc_enclosing_size_of: Option<VoidPtrToSizeFn>, have_seen_ptr: Option<Box<VoidPtrToBoolFnMut>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13375,"byte_end":13389,"line_start":132,"line_end":132,"column_start":16,"column_end":30},"name":"malloc_size_of","qualname":"<MallocSizeOfOps>::malloc_size_of","value":"fn <T> (&self, ptr: *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Call `size_of_op` on `ptr`, first checking that the allocation isn't\n empty, because some types (such as `Vec`) utilize empty allocations.\n","sig":null,"attributes":[{"value":"/ Call `size_of_op` on `ptr`, first checking that the allocation isn't","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13213,"byte_end":13285,"line_start":130,"line_end":130,"column_start":2,"column_end":74}},{"value":"/ empty, because some types (such as `Vec`) utilize empty allocations.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13287,"byte_end":13359,"line_start":131,"line_end":131,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13592,"byte_end":13620,"line_start":141,"line_end":141,"column_start":9,"column_end":37},"name":"has_malloc_enclosing_size_of","qualname":"<MallocSizeOfOps>::has_malloc_enclosing_size_of","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is an `enclosing_size_of_op` available?\n","sig":null,"attributes":[{"value":"/ Is an `enclosing_size_of_op` available?","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13540,"byte_end":13583,"line_start":140,"line_end":140,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13794,"byte_end":13818,"line_start":147,"line_end":147,"column_start":16,"column_end":40},"name":"malloc_enclosing_size_of","qualname":"<MallocSizeOfOps>::malloc_enclosing_size_of","value":"fn <T> (&self, ptr: *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Call `enclosing_size_of_op`, which must be available, on `ptr`, which\n must not be empty.\n","sig":null,"attributes":[{"value":"/ Call `enclosing_size_of_op`, which must be available, on `ptr`, which","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13681,"byte_end":13754,"line_start":145,"line_end":145,"column_start":2,"column_end":75}},{"value":"/ must not be empty.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13756,"byte_end":13778,"line_start":146,"line_end":146,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14011,"byte_end":14024,"line_start":153,"line_end":153,"column_start":9,"column_end":22},"name":"have_seen_ptr","qualname":"<MallocSizeOfOps>::have_seen_ptr","value":"fn <T> (&mut self, ptr: *const T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Call `have_seen_ptr_op` on `ptr`.\n","sig":null,"attributes":[{"value":"/ Call `have_seen_ptr_op` on `ptr`.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":13965,"byte_end":14002,"line_start":152,"line_end":152,"column_start":2,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14330,"byte_end":14342,"line_start":161,"line_end":161,"column_start":11,"column_end":23},"name":"MallocSizeOf","qualname":"::malloc_size::MallocSizeOf","value":"MallocSizeOf","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Trait for measuring the \"deep\" heap usage of a data structure. This is the\n most commonly-used of the traits.\n","sig":null,"attributes":[{"value":"/ Trait for measuring the \"deep\" heap usage of a data structure. This is the","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14203,"byte_end":14281,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ most commonly-used of the traits.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14282,"byte_end":14319,"line_start":160,"line_end":160,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14475,"byte_end":14482,"line_start":164,"line_end":164,"column_start":5,"column_end":12},"name":"size_of","qualname":"::malloc_size::MallocSizeOf::size_of","value":"fn (&self, ops: &mut MallocSizeOfOps) -> usize","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Measure the heap usage of all descendant heap-allocated structures, but\n not the space taken up by the value itself.\n","sig":null,"attributes":[{"value":"/ Measure the heap usage of all descendant heap-allocated structures, but","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14346,"byte_end":14421,"line_start":162,"line_end":162,"column_start":2,"column_end":77}},{"value":"/ not the space taken up by the value itself.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":14423,"byte_end":14470,"line_start":163,"line_end":163,"column_start":2,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":185},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primitives_impls","qualname":"::primitives_impls","value":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487}],"decl_id":null,"docs":" Implementation of `MallocSize` primitive types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"primitive-types\")","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2062,"byte_end":2097,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"! Implementation of `MallocSize` primitive types.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/primitives_impls.rs","byte_start":33409,"byte_end":33460,"line_start":9,"line_end":9,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2352,"byte_end":2363,"line_start":74,"line_end":74,"column_start":8,"column_end":19},"name":"malloc_size","qualname":"::malloc_size","value":"fn <T> (t: &T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Heap size of structure.","sig":null,"attributes":[{"value":"/ Heap size of structure.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2253,"byte_end":2280,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2281,"byte_end":2284,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Structure can be anything that implements MallocSizeOf.","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2285,"byte_end":2344,"line_start":73,"line_end":73,"column_start":1,"column_end":60}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7585,"byte_end":7586,"line_start":142,"line_end":142,"column_start":43,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7665,"byte_end":7668,"line_start":145,"line_end":145,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":12277,"byte_end":12292,"line_start":104,"line_end":104,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":16635,"byte_end":16638,"line_start":215,"line_end":215,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":16793,"byte_end":16796,"line_start":221,"line_end":221,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":17405,"byte_end":17408,"line_start":238,"line_end":238,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":17544,"byte_end":17550,"line_start":244,"line_end":244,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":17880,"byte_end":17883,"line_start":258,"line_end":258,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18267,"byte_end":18273,"line_start":273,"line_end":273,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18475,"byte_end":18481,"line_start":283,"line_end":283,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18696,"byte_end":18700,"line_start":292,"line_end":292,"column_start":59,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18846,"byte_end":18853,"line_start":298,"line_end":298,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":19035,"byte_end":19038,"line_start":305,"line_end":305,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":19481,"byte_end":19484,"line_start":327,"line_end":327,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":19708,"byte_end":19716,"line_start":337,"line_end":337,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":20203,"byte_end":20211,"line_start":354,"line_end":354,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":20461,"byte_end":20468,"line_start":365,"line_end":365,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":21142,"byte_end":21149,"line_start":385,"line_end":385,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":21422,"byte_end":21429,"line_start":399,"line_end":399,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":21600,"byte_end":21607,"line_start":406,"line_end":406,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22049,"byte_end":22056,"line_start":418,"line_end":418,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22354,"byte_end":22362,"line_start":433,"line_end":433,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22699,"byte_end":22707,"line_start":443,"line_end":443,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22999,"byte_end":23007,"line_start":458,"line_end":458,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":23391,"byte_end":23399,"line_start":470,"line_end":470,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":23657,"byte_end":23668,"line_start":484,"line_end":484,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":24225,"byte_end":24228,"line_start":503,"line_end":503,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":24444,"byte_end":24447,"line_start":510,"line_end":510,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":24713,"byte_end":24716,"line_start":521,"line_end":521,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25381,"byte_end":25386,"line_start":540,"line_end":540,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25567,"byte_end":25572,"line_start":547,"line_end":547,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25742,"byte_end":25748,"line_start":554,"line_end":554,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25929,"byte_end":25935,"line_start":561,"line_end":561,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":28368,"byte_end":28378,"line_start":650,"line_end":650,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":28479,"byte_end":28489,"line_start":658,"line_end":658,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":1403,"byte_end":1413,"line_start":47,"line_end":47,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/lib.rs","byte_start":2106,"byte_end":2122,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":185}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7326,"byte_end":7338,"line_start":133,"line_end":133,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7585,"byte_end":7586,"line_start":142,"line_end":142,"column_start":43,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":14}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/allocators.rs","byte_start":7665,"byte_end":7668,"line_start":145,"line_end":145,"column_start":51,"column_end":54},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":12277,"byte_end":12292,"line_start":104,"line_end":104,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":16635,"byte_end":16638,"line_start":215,"line_end":215,"column_start":42,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":16793,"byte_end":16796,"line_start":221,"line_end":221,"column_start":34,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":17405,"byte_end":17408,"line_start":238,"line_end":238,"column_start":47,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":17544,"byte_end":17550,"line_start":244,"line_end":244,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":4732},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":17880,"byte_end":17883,"line_start":258,"line_end":258,"column_start":49,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18267,"byte_end":18273,"line_start":273,"line_end":273,"column_start":40,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":29311},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18475,"byte_end":18481,"line_start":283,"line_end":283,"column_start":57,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":29432},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18696,"byte_end":18700,"line_start":292,"line_end":292,"column_start":59,"column_end":63},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":2757},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":18846,"byte_end":18853,"line_start":298,"line_end":298,"column_start":52,"column_end":59},"kind":{"Impl":{"id":11}},"from":{"krate":2,"index":2814},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":19035,"byte_end":19038,"line_start":305,"line_end":305,"column_start":61,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":326},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":19481,"byte_end":19484,"line_start":327,"line_end":327,"column_start":40,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":19708,"byte_end":19716,"line_start":337,"line_end":337,"column_start":52,"column_end":60},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":2419},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":20203,"byte_end":20211,"line_start":354,"line_end":354,"column_start":59,"column_end":67},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":2419},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":20461,"byte_end":20468,"line_start":365,"line_end":365,"column_start":54,"column_end":61},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":6233},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":21142,"byte_end":21149,"line_start":385,"line_end":385,"column_start":47,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6233},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":21422,"byte_end":21429,"line_start":399,"line_end":399,"column_start":51,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":20121},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":21600,"byte_end":21607,"line_start":406,"line_end":406,"column_start":57,"column_end":64},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":6207},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22049,"byte_end":22056,"line_start":418,"line_end":418,"column_start":50,"column_end":57},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6207},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22354,"byte_end":22362,"line_start":433,"line_end":433,"column_start":55,"column_end":63},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":671},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22699,"byte_end":22707,"line_start":443,"line_end":443,"column_start":48,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":671},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":22999,"byte_end":23007,"line_start":458,"line_end":458,"column_start":52,"column_end":60},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4559},"to":{"krate":0,"index":52}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":23391,"byte_end":23399,"line_start":470,"line_end":470,"column_start":45,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":4559},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":23657,"byte_end":23668,"line_start":484,"line_end":484,"column_start":40,"column_end":51},"kind":{"Impl":{"id":25}},"from":{"krate":2,"index":1901},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":24225,"byte_end":24228,"line_start":503,"line_end":503,"column_start":53,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":24444,"byte_end":24447,"line_start":510,"line_end":510,"column_start":44,"column_end":47},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":24713,"byte_end":24716,"line_start":521,"line_end":521,"column_start":51,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":3769},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25381,"byte_end":25386,"line_start":540,"line_end":540,"column_start":51,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":4972},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25567,"byte_end":25572,"line_start":547,"line_end":547,"column_start":53,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":40,"index":83},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25742,"byte_end":25748,"line_start":554,"line_end":554,"column_start":51,"column_end":57},"kind":{"Impl":{"id":31}},"from":{"krate":1,"index":5106},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":25929,"byte_end":25935,"line_start":561,"line_end":561,"column_start":53,"column_end":59},"kind":{"Impl":{"id":32}},"from":{"krate":40,"index":364},"to":{"krate":0,"index":50}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":28368,"byte_end":28378,"line_start":650,"line_end":650,"column_start":33,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/registry/src/crates.rustcc.com-a21e0f92747beca3/parity-util-mem-0.6.1/src/malloc_size.rs","byte_start":28479,"byte_end":28489,"line_start":658,"line_end":658,"column_start":36,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":2065}}]}