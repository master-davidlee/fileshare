{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sp_storage","--edition=2018","/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"impl-serde\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=b3df17ae196b448d","-C","extra-filename=-b3df17ae196b448d","--out-dir","/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps","--extern","impl_serde=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libimpl_serde-fb1f21ae8e8a3ec6.rmeta","--extern","ref_cast=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libref_cast-cad8235916b2a1e9.rmeta","--extern","serde=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libserde-8e3179877dc95843.rmeta","--extern","sp_debug_derive=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_debug_derive-db633ac930505cf2.so","--extern","sp_std=/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_std-31df6ce51c93d927.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/pallets/fileshare/target/rls/debug/deps/libsp_storage-b3df17ae196b448d.rmeta"},"prelude":{"crate_id":{"name":"sp_storage","disambiguator":[8388726998902642419,5566405698735839699]},"crate_root":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src","external_crates":[{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":15,"id":{"name":"serde","disambiguator":[13481768320746797087,7282555180186658229]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[14214070500933581380,3624999802238555216]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":17,"id":{"name":"sp_debug_derive","disambiguator":[13522996333100151204,9314162219563761913]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":18,"id":{"name":"sp_std","disambiguator":[11276958021017479825,16325732417868216137]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":19,"id":{"name":"ref_cast","disambiguator":[14927837505420523305,6271955165879955941]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":20,"id":{"name":"ref_cast_impl","disambiguator":[4388911118607149955,14232018770742587068]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","num":21,"id":{"name":"impl_serde","disambiguator":[4240565461243128030,16964821940194849107]}}],"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":686,"byte_end":10901,"line_start":18,"line_end":348,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":686,"byte_end":10901,"line_start":18,"line_end":348,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":50},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":109},{"krate":0,"index":95},{"krate":0,"index":66},{"krate":0,"index":63},{"krate":0,"index":57},{"krate":0,"index":55},{"krate":0,"index":53},{"krate":0,"index":118},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":181},{"krate":0,"index":167},{"krate":0,"index":138},{"krate":0,"index":135},{"krate":0,"index":129},{"krate":0,"index":127},{"krate":0,"index":125},{"krate":0,"index":121},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":190},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":249},{"krate":0,"index":235},{"krate":0,"index":206},{"krate":0,"index":203},{"krate":0,"index":197},{"krate":0,"index":195},{"krate":0,"index":193},{"krate":0,"index":22},{"krate":0,"index":258},{"krate":0,"index":270},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":261},{"krate":0,"index":272},{"krate":0,"index":279},{"krate":0,"index":277},{"krate":0,"index":275},{"krate":0,"index":281},{"krate":0,"index":349},{"krate":0,"index":342},{"krate":0,"index":296},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":23},{"krate":0,"index":352},{"krate":0,"index":376},{"krate":0,"index":374},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":364},{"krate":0,"index":358},{"krate":0,"index":356},{"krate":0,"index":31},{"krate":0,"index":378},{"krate":0,"index":388},{"krate":0,"index":387},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":382},{"krate":0,"index":40},{"krate":0,"index":390},{"krate":0,"index":412},{"krate":0,"index":410},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":400},{"krate":0,"index":394},{"krate":0,"index":392},{"krate":0,"index":48}],"decl_id":null,"docs":" Primitive types for storage related stuff.\n","sig":null,"attributes":[{"value":"! Primitive types for storage related stuff.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":686,"byte_end":732,"line_start":18,"line_end":18,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1105,"byte_end":1115,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"StorageKey","qualname":"::StorageKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Storage key.\n","sig":null,"attributes":[{"value":"/ Storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":947,"byte_end":963,"line_start":29,"line_end":29,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1451,"byte_end":1469,"line_start":42,"line_end":42,"column_start":12,"column_end":30},"name":"PrefixedStorageKey","qualname":"::PrefixedStorageKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Storage key of a child trie, it contains the prefix to the key.\n","sig":null,"attributes":[{"value":"/ Storage key of a child trie, it contains the prefix to the key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1202,"byte_end":1269,"line_start":37,"line_end":37,"column_start":1,"column_end":68}},{"value":"repr(transparent)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1400,"byte_end":1420,"line_start":40,"line_end":40,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1872,"byte_end":1875,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"new","qualname":"<PrefixedStorageKey>::new","value":"fn (inner: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a prefixed storage key from its byte array\n representation.\n","sig":null,"attributes":[{"value":"/ Create a prefixed storage key from its byte array","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1789,"byte_end":1842,"line_start":62,"line_end":62,"column_start":2,"column_end":55}},{"value":"/ representation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1844,"byte_end":1863,"line_start":63,"line_end":63,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1988,"byte_end":1995,"line_start":69,"line_end":69,"column_start":9,"column_end":16},"name":"new_ref","qualname":"<PrefixedStorageKey>::new_ref","value":"fn (inner: &Vec<u8>) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Create a prefixed storage key reference.\n","sig":null,"attributes":[{"value":"/ Create a prefixed storage key reference.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1935,"byte_end":1979,"line_start":68,"line_end":68,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2190,"byte_end":2200,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<PrefixedStorageKey>::into_inner","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get inner key, this should\n only be needed when writing\n into parent trie to avoid an\n allocation.\n","sig":null,"attributes":[{"value":"/ Get inner key, this should","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2067,"byte_end":2097,"line_start":73,"line_end":73,"column_start":2,"column_end":32}},{"value":"/ only be needed when writing","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2099,"byte_end":2130,"line_start":74,"line_end":74,"column_start":2,"column_end":33}},{"value":"/ into parent trie to avoid an","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2132,"byte_end":2164,"line_start":75,"line_end":75,"column_start":2,"column_end":34}},{"value":"/ allocation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2166,"byte_end":2181,"line_start":76,"line_end":76,"column_start":2,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2425,"byte_end":2436,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"StorageData","qualname":"::StorageData","value":"","parent":null,"children":[],"decl_id":null,"docs":" Storage data associated to a [`StorageKey`].\n","sig":null,"attributes":[{"value":"/ Storage data associated to a [`StorageKey`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2235,"byte_end":2283,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2640,"byte_end":2650,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"name":"StorageMap","qualname":"::StorageMap","value":"std::collections::BTreeMap<Vec<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Map of data to use in a storage, it is a collection of\n byte key and values.\n","sig":null,"attributes":[{"value":"/ Map of data to use in a storage, it is a collection of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2523,"byte_end":2581,"line_start":90,"line_end":90,"column_start":1,"column_end":59}},{"value":"/ byte key and values.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2582,"byte_end":2606,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2607,"byte_end":2630,"line_start":92,"line_end":92,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2803,"byte_end":2815,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"StorageChild","qualname":"::StorageChild","value":"StorageChild { data, child_info }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" Child trie storage data.\n","sig":null,"attributes":[{"value":"/ Child trie storage data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2700,"byte_end":2728,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2729,"byte_end":2752,"line_start":96,"line_end":96,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":259},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2852,"byte_end":2856,"line_start":100,"line_end":100,"column_start":6,"column_end":10},"name":"data","qualname":"::StorageChild::data","value":"std::collections::BTreeMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Child data for storage.\n","sig":null,"attributes":[{"value":"/ Child data for storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2819,"byte_end":2846,"line_start":99,"line_end":99,"column_start":2,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":260},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2925,"byte_end":2935,"line_start":103,"line_end":103,"column_start":6,"column_end":16},"name":"child_info","qualname":"::StorageChild::child_info","value":"ChildInfo","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Associated child info for a child\n trie.\n","sig":null,"attributes":[{"value":"/ Associated child info for a child","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2871,"byte_end":2908,"line_start":101,"line_end":101,"column_start":2,"column_end":39}},{"value":"/ trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2910,"byte_end":2919,"line_start":102,"line_end":102,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3068,"byte_end":3075,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"Storage","qualname":"::Storage","value":"Storage { top, children_default }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":" Struct containing data needed for a storage.\n","sig":null,"attributes":[{"value":"/ Struct containing data needed for a storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":2951,"byte_end":2999,"line_start":106,"line_end":106,"column_start":1,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3000,"byte_end":3023,"line_start":107,"line_end":107,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3111,"byte_end":3114,"line_start":111,"line_end":111,"column_start":6,"column_end":9},"name":"top","qualname":"::Storage::top","value":"std::collections::BTreeMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Top trie storage data.\n","sig":null,"attributes":[{"value":"/ Top trie storage data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3079,"byte_end":3105,"line_start":110,"line_end":110,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3308,"byte_end":3324,"line_start":116,"line_end":116,"column_start":6,"column_end":22},"name":"children_default","qualname":"::Storage::children_default","value":"std::collections::HashMap<std::vec::Vec<u8>, StorageChild>","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":" Children trie storage data.\n The key does not including prefix, for the `default`\n trie kind, so this is exclusively for the `ChildType::ParentKeyId`\n tries.\n","sig":null,"attributes":[{"value":"/ Children trie storage data.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3129,"byte_end":3160,"line_start":112,"line_end":112,"column_start":2,"column_end":33}},{"value":"/ The key does not including prefix, for the `default`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3162,"byte_end":3218,"line_start":113,"line_end":113,"column_start":2,"column_end":58}},{"value":"/ trie kind, so this is exclusively for the `ChildType::ParentKeyId`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3220,"byte_end":3290,"line_start":114,"line_end":114,"column_start":2,"column_end":72}},{"value":"/ tries.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3292,"byte_end":3302,"line_start":115,"line_end":115,"column_start":2,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3575,"byte_end":3591,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"StorageChangeSet","qualname":"::StorageChangeSet","value":"StorageChangeSet { block, changes }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Storage change set\n","sig":null,"attributes":[{"value":"/ Storage change set","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3379,"byte_end":3401,"line_start":119,"line_end":119,"column_start":1,"column_end":23}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3530,"byte_end":3561,"line_start":122,"line_end":122,"column_start":29,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":283},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3621,"byte_end":3626,"line_start":125,"line_end":125,"column_start":6,"column_end":11},"name":"block","qualname":"::StorageChangeSet::block","value":"Hash","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" Block hash\n","sig":null,"attributes":[{"value":"/ Block hash","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3601,"byte_end":3615,"line_start":124,"line_end":124,"column_start":2,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":284},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3662,"byte_end":3669,"line_start":127,"line_end":127,"column_start":6,"column_end":13},"name":"changes","qualname":"::StorageChangeSet::changes","value":"std::vec::Vec<(StorageKey, std::option::Option<StorageData>)>","parent":{"krate":0,"index":281},"children":[],"decl_id":null,"docs":" A list of changes\n","sig":null,"attributes":[{"value":"/ A list of changes","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3635,"byte_end":3656,"line_start":126,"line_end":126,"column_start":2,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":23},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3779,"byte_end":3794,"line_start":131,"line_end":131,"column_start":9,"column_end":24},"name":"well_known_keys","qualname":"::well_known_keys","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" List of all well known keys and prefixes in storage.\n","sig":null,"attributes":[{"value":"/ List of all well known keys and prefixes in storage.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3714,"byte_end":3770,"line_start":130,"line_end":130,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3901,"byte_end":3905,"line_start":135,"line_end":135,"column_start":12,"column_end":16},"name":"CODE","qualname":"::well_known_keys::CODE","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Wasm code of the runtime.","sig":null,"attributes":[{"value":"/ Wasm code of the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3798,"byte_end":3827,"line_start":132,"line_end":132,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3829,"byte_end":3832,"line_start":133,"line_end":133,"column_start":2,"column_end":5}},{"value":"/ Stored as a raw byte vector. Required by substrate.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3834,"byte_end":3889,"line_start":134,"line_end":134,"column_start":2,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4075,"byte_end":4085,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"HEAP_PAGES","qualname":"::well_known_keys::HEAP_PAGES","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Number of wasm linear memory pages required for execution of the runtime.","sig":null,"attributes":[{"value":"/ Number of wasm linear memory pages required for execution of the runtime.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":3935,"byte_end":4012,"line_start":137,"line_end":137,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4014,"byte_end":4017,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ The type of this value is encoded `u64`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4019,"byte_end":4063,"line_start":139,"line_end":139,"column_start":2,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4191,"byte_end":4206,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"EXTRINSIC_INDEX","qualname":"::well_known_keys::EXTRINSIC_INDEX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Current extrinsic index (u32) is stored under this key.\n","sig":null,"attributes":[{"value":"/ Current extrinsic index (u32) is stored under this key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4120,"byte_end":4179,"line_start":142,"line_end":142,"column_start":2,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4315,"byte_end":4334,"line_start":146,"line_end":146,"column_start":12,"column_end":31},"name":"CHANGES_TRIE_CONFIG","qualname":"::well_known_keys::CHANGES_TRIE_CONFIG","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Changes trie configuration is stored under this key.\n","sig":null,"attributes":[{"value":"/ Changes trie configuration is stored under this key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4247,"byte_end":4303,"line_start":145,"line_end":145,"column_start":2,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4417,"byte_end":4441,"line_start":149,"line_end":149,"column_start":12,"column_end":36},"name":"CHILD_STORAGE_KEY_PREFIX","qualname":"::well_known_keys::CHILD_STORAGE_KEY_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Prefix of child storage keys.\n","sig":null,"attributes":[{"value":"/ Prefix of child storage keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4372,"byte_end":4405,"line_start":148,"line_end":148,"column_start":2,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":29},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4554,"byte_end":4586,"line_start":152,"line_end":152,"column_start":12,"column_end":44},"name":"DEFAULT_CHILD_STORAGE_KEY_PREFIX","qualname":"::well_known_keys::DEFAULT_CHILD_STORAGE_KEY_PREFIX","value":"&'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Prefix of the default child storage keys in the top trie.\n","sig":null,"attributes":[{"value":"/ Prefix of the default child storage keys in the top trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4481,"byte_end":4542,"line_start":151,"line_end":151,"column_start":2,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4850,"byte_end":4870,"line_start":158,"line_end":158,"column_start":9,"column_end":29},"name":"is_child_storage_key","qualname":"::well_known_keys::is_child_storage_key","value":"fn (key: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether a key is a child storage key.","sig":null,"attributes":[{"value":"/ Whether a key is a child storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4634,"byte_end":4675,"line_start":154,"line_end":154,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4677,"byte_end":4680,"line_start":155,"line_end":155,"column_start":2,"column_end":5}},{"value":"/ This is convenience function which basically checks if the given `key` starts","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4682,"byte_end":4763,"line_start":156,"line_end":156,"column_start":2,"column_end":83}},{"value":"/ with `CHILD_STORAGE_KEY_PREFIX` and doesn't do anything apart from that.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":4765,"byte_end":4841,"line_start":157,"line_end":157,"column_start":2,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":353},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5211,"byte_end":5222,"line_start":169,"line_end":169,"column_start":2,"column_end":13},"name":"ParentKeyId","qualname":"::ChildInfo::ParentKeyId","value":"ChildInfo::ParentKeyId(ChildTrieParentKeyId)","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" This is the one used by default.\n","sig":null,"attributes":[{"value":"/ This is the one used by default.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5173,"byte_end":5209,"line_start":168,"line_end":168,"column_start":2,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":352},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5160,"byte_end":5169,"line_start":167,"line_end":167,"column_start":10,"column_end":19},"name":"ChildInfo","qualname":"::ChildInfo","value":"ChildInfo::{ParentKeyId}","parent":null,"children":[{"krate":0,"index":353}],"decl_id":null,"docs":" Information related to a child state.\n","sig":null,"attributes":[{"value":"/ Information related to a child state.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5010,"byte_end":5051,"line_start":164,"line_end":164,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5419,"byte_end":5430,"line_start":176,"line_end":176,"column_start":9,"column_end":20},"name":"new_default","qualname":"<ChildInfo>::new_default","value":"fn (storage_key: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiates child information for a default child trie\n of kind `ChildType::ParentKeyId`, using an unprefixed parent\n storage key.\n","sig":null,"attributes":[{"value":"/ Instantiates child information for a default child trie","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5267,"byte_end":5326,"line_start":173,"line_end":173,"column_start":2,"column_end":61}},{"value":"/ of kind `ChildType::ParentKeyId`, using an unprefixed parent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5328,"byte_end":5392,"line_start":174,"line_end":174,"column_start":2,"column_end":66}},{"value":"/ storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5394,"byte_end":5410,"line_start":175,"line_end":175,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5620,"byte_end":5640,"line_start":182,"line_end":182,"column_start":9,"column_end":29},"name":"new_default_from_vec","qualname":"<ChildInfo>::new_default_from_vec","value":"fn (storage_key: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as `new_default` but with `Vec<u8>` as input.\n","sig":null,"attributes":[{"value":"/ Same as `new_default` but with `Vec<u8>` as input.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5557,"byte_end":5611,"line_start":181,"line_end":181,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5857,"byte_end":5867,"line_start":190,"line_end":190,"column_start":9,"column_end":19},"name":"try_update","qualname":"<ChildInfo>::try_update","value":"fn (&mut self, other: &ChildInfo) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Try to update with another instance, return false if both instance\n are not compatible.\n","sig":null,"attributes":[{"value":"/ Try to update with another instance, return false if both instance","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5753,"byte_end":5823,"line_start":188,"line_end":188,"column_start":2,"column_end":72}},{"value":"/ are not compatible.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5825,"byte_end":5848,"line_start":189,"line_end":189,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6272,"byte_end":6280,"line_start":199,"line_end":199,"column_start":9,"column_end":17},"name":"keyspace","qualname":"<ChildInfo>::keyspace","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns byte sequence (keyspace) that can be use by underlying db to isolate keys.\n This is a unique id of the child trie. The collision resistance of this value\n depends on the type of child info use. For `ChildInfo::Default` it is and need to be.\n","sig":null,"attributes":[{"value":"/ Returns byte sequence (keyspace) that can be use by underlying db to isolate keys.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6003,"byte_end":6089,"line_start":196,"line_end":196,"column_start":2,"column_end":88}},{"value":"/ This is a unique id of the child trie. The collision resistance of this value","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6091,"byte_end":6172,"line_start":197,"line_end":197,"column_start":2,"column_end":83}},{"value":"/ depends on the type of child info use. For `ChildInfo::Default` it is and need to be.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6174,"byte_end":6263,"line_start":198,"line_end":198,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6527,"byte_end":6538,"line_start":208,"line_end":208,"column_start":9,"column_end":20},"name":"storage_key","qualname":"<ChildInfo>::storage_key","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the location in the direct parent of\n this trie but without the common prefix for this kind of\n child trie.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the location in the direct parent of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6376,"byte_end":6439,"line_start":205,"line_end":205,"column_start":2,"column_end":65}},{"value":"/ this trie but without the common prefix for this kind of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6441,"byte_end":6501,"line_start":206,"line_end":206,"column_start":2,"column_end":62}},{"value":"/ child trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6503,"byte_end":6518,"line_start":207,"line_end":207,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6739,"byte_end":6759,"line_start":218,"line_end":218,"column_start":9,"column_end":29},"name":"prefixed_storage_key","qualname":"<ChildInfo>::prefixed_storage_key","value":"fn (&self) -> PrefixedStorageKey","parent":null,"children":[],"decl_id":null,"docs":" Return a the full location in the direct parent of\n this trie.\n","sig":null,"attributes":[{"value":"/ Return a the full location in the direct parent of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6660,"byte_end":6714,"line_start":216,"line_end":216,"column_start":2,"column_end":56}},{"value":"/ this trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6716,"byte_end":6730,"line_start":217,"line_end":217,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7021,"byte_end":7046,"line_start":228,"line_end":228,"column_start":9,"column_end":34},"name":"into_prefixed_storage_key","qualname":"<ChildInfo>::into_prefixed_storage_key","value":"fn (self) -> PrefixedStorageKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a the full location in the direct parent of\n this trie.\n","sig":null,"attributes":[{"value":"/ Returns a the full location in the direct parent of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6941,"byte_end":6996,"line_start":226,"line_end":226,"column_start":2,"column_end":57}},{"value":"/ this trie.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":6998,"byte_end":7012,"line_start":227,"line_end":227,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7313,"byte_end":7323,"line_start":240,"line_end":240,"column_start":9,"column_end":19},"name":"child_type","qualname":"<ChildInfo>::child_type","value":"fn (&self) -> ChildType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type for this child info.\n","sig":null,"attributes":[{"value":"/ Returns the type for this child info.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7263,"byte_end":7304,"line_start":239,"line_end":239,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7833,"byte_end":7844,"line_start":256,"line_end":256,"column_start":2,"column_end":13},"name":"ParentKeyId","qualname":"::ChildType::ParentKeyId","value":"ChildType::ParentKeyId","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" If runtime module ensures that the child key is a unique id that will\n only be used once, its parent key is used as a child trie unique id.\n","sig":null,"attributes":[{"value":"/ If runtime module ensures that the child key is a unique id that will","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7684,"byte_end":7757,"line_start":254,"line_end":254,"column_start":2,"column_end":75}},{"value":"/ only be used once, its parent key is used as a child trie unique id.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7759,"byte_end":7831,"line_start":255,"line_end":255,"column_start":2,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":378},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7671,"byte_end":7680,"line_start":253,"line_end":253,"column_start":10,"column_end":19},"name":"ChildType","qualname":"::ChildType","value":"ChildType::{ParentKeyId}","parent":null,"children":[{"krate":0,"index":379}],"decl_id":null,"docs":" Type of child.\n It does not strictly define different child type, it can also\n be related to technical consideration or api variant.\n","sig":null,"attributes":[{"value":"/ Type of child.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7428,"byte_end":7446,"line_start":247,"line_end":247,"column_start":1,"column_end":19}},{"value":"/ It does not strictly define different child type, it can also","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7447,"byte_end":7512,"line_start":248,"line_end":248,"column_start":1,"column_end":66}},{"value":"/ be related to technical consideration or api variant.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7513,"byte_end":7570,"line_start":249,"line_end":249,"column_start":1,"column_end":58}},{"value":"repr(u32)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7571,"byte_end":7583,"line_start":250,"line_end":250,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7938,"byte_end":7941,"line_start":261,"line_end":261,"column_start":9,"column_end":12},"name":"new","qualname":"<ChildType>::new","value":"fn (repr: u32) -> Option<ChildType>","parent":null,"children":[],"decl_id":null,"docs":" Try to get a child type from its `u32` representation.\n","sig":null,"attributes":[{"value":"/ Try to get a child type from its `u32` representation.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7871,"byte_end":7929,"line_start":260,"line_end":260,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":8216,"byte_end":8233,"line_start":270,"line_end":270,"column_start":9,"column_end":26},"name":"from_prefixed_key","qualname":"<ChildType>::from_prefixed_key","value":"fn <'a> (storage_key: &'a PrefixedStorageKey) -> Option<(Self, &'a [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Transform a prefixed key into a tuple of the child type\n and the unprefixed representation of the key.\n","sig":null,"attributes":[{"value":"/ Transform a prefixed key into a tuple of the child type","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":8097,"byte_end":8156,"line_start":268,"line_end":268,"column_start":2,"column_end":61}},{"value":"/ and the unprefixed representation of the key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":8158,"byte_end":8207,"line_start":269,"line_end":269,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9418,"byte_end":9431,"line_start":304,"line_end":304,"column_start":9,"column_end":22},"name":"parent_prefix","qualname":"<ChildType>::parent_prefix","value":"fn (&self) -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the location reserved for this child trie in their parent trie if there\n is one.\n","sig":null,"attributes":[{"value":"/ Returns the location reserved for this child trie in their parent trie if there","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9313,"byte_end":9396,"line_start":302,"line_end":302,"column_start":2,"column_end":85}},{"value":"/ is one.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9398,"byte_end":9409,"line_start":303,"line_end":303,"column_start":2,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":10179,"byte_end":10199,"line_start":322,"line_end":322,"column_start":12,"column_end":32},"name":"ChildTrieParentKeyId","qualname":"::ChildTrieParentKeyId","value":"ChildTrieParentKeyId {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" A child trie of default type.\n It uses the same default implementation as the top trie,\n top trie being a child trie with no keyspace and no storage key.\n Its keyspace is the variable (unprefixed) part of its storage key.\n It shares its trie nodes backend storage with every other\n child trie, so its storage key needs to be a unique id\n that will be use only once.\n Those unique id also required to be long enough to avoid any\n unique id to be prefixed by an other unique id.\n","sig":null,"attributes":[{"value":"/ A child trie of default type.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9564,"byte_end":9597,"line_start":311,"line_end":311,"column_start":1,"column_end":34}},{"value":"/ It uses the same default implementation as the top trie,","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9598,"byte_end":9658,"line_start":312,"line_end":312,"column_start":1,"column_end":61}},{"value":"/ top trie being a child trie with no keyspace and no storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9659,"byte_end":9727,"line_start":313,"line_end":313,"column_start":1,"column_end":69}},{"value":"/ Its keyspace is the variable (unprefixed) part of its storage key.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9728,"byte_end":9798,"line_start":314,"line_end":314,"column_start":1,"column_end":71}},{"value":"/ It shares its trie nodes backend storage with every other","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9799,"byte_end":9860,"line_start":315,"line_end":315,"column_start":1,"column_end":62}},{"value":"/ child trie, so its storage key needs to be a unique id","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9861,"byte_end":9919,"line_start":316,"line_end":316,"column_start":1,"column_end":59}},{"value":"/ that will be use only once.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9920,"byte_end":9951,"line_start":317,"line_end":317,"column_start":1,"column_end":32}},{"value":"/ Those unique id also required to be long enough to avoid any","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":9952,"byte_end":10016,"line_start":318,"line_end":318,"column_start":1,"column_end":65}},{"value":"/ unique id to be prefixed by an other unique id.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":10017,"byte_end":10068,"line_start":319,"line_end":319,"column_start":1,"column_end":52}}]}],"impls":[{"id":7,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1567,"byte_end":1585,"line_start":47,"line_end":47,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1678,"byte_end":1696,"line_start":55,"line_end":55,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1767,"byte_end":1785,"line_start":61,"line_end":61,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5254,"byte_end":5263,"line_start":172,"line_end":172,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7858,"byte_end":7867,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":10271,"byte_end":10291,"line_start":327,"line_end":327,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1567,"byte_end":1585,"line_start":47,"line_end":47,"column_start":16,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1678,"byte_end":1696,"line_start":55,"line_end":55,"column_start":19,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":1767,"byte_end":1785,"line_start":61,"line_end":61,"column_start":6,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":5254,"byte_end":5263,"line_start":172,"line_end":172,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":7858,"byte_end":7867,"line_start":259,"line_end":259,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/primitives/storage/src/lib.rs","byte_start":10271,"byte_end":10291,"line_start":327,"line_end":327,"column_start":6,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}}]}