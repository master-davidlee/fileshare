{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner","program":"/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","substrate_wasm_builder_runner","--edition=2018","/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=b54192bce25be588","-C","extra-filename=-b54192bce25be588","--out-dir","/home/ipfs/substrate-node-template/runtime/target/rls/debug/deps","-L","dependency=/home/ipfs/substrate-node-template/runtime/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ipfs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ipfs/substrate-node-template/runtime/target/rls/debug/deps/libsubstrate_wasm_builder_runner-b54192bce25be588.rmeta"},"prelude":{"crate_id":{"name":"substrate_wasm_builder_runner","disambiguator":[18416328986977524388,2078215262556884384]},"crate_root":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src","external_crates":[{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}}],"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":686,"byte_end":15673,"line_start":18,"line_end":481,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":686,"byte_end":15673,"line_start":18,"line_end":481,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":37},{"krate":0,"index":42},{"krate":0,"index":53},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" # WASM builder runner","sig":null,"attributes":[{"value":"! # WASM builder runner","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":686,"byte_end":711,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":712,"byte_end":715,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Since cargo contains many bugs when it comes to correct dependency and feature","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":716,"byte_end":798,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"! resolution, we need this little tool. See <https://github.com/rust-lang/cargo/issues/5730> for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":799,"byte_end":897,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"! more information.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":898,"byte_end":919,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":920,"byte_end":923,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! It will create a project that will call `substrate-wasm-builder` to prevent any dependencies","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":924,"byte_end":1020,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"! from `substrate-wasm-builder` influencing the main project's dependencies.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":1021,"byte_end":1099,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":1100,"byte_end":1103,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! For more information see <https://crates.io/substrate-wasm-builder>","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":1104,"byte_end":1175,"line_start":27,"line_end":27,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2294,"byte_end":2318,"line_start":62,"line_end":62,"column_start":12,"column_end":36},"name":"WasmBuilderSelectProject","qualname":"::WasmBuilderSelectProject","value":"WasmBuilderSelectProject {  }","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" First step of the [`WasmBuilder`] to select the project to build.\n","sig":null,"attributes":[{"value":"/ First step of the [`WasmBuilder`] to select the project to build.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2213,"byte_end":2282,"line_start":61,"line_end":61,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2703,"byte_end":2723,"line_start":75,"line_end":75,"column_start":9,"column_end":29},"name":"with_current_project","qualname":"<WasmBuilderSelectProject>::with_current_project","value":"fn (self) -> WasmBuilderSelectSource","parent":null,"children":[],"decl_id":null,"docs":" Use the current project as project for building the WASM binary.","sig":null,"attributes":[{"value":"/ Use the current project as project for building the WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2476,"byte_end":2544,"line_start":69,"line_end":69,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2546,"byte_end":2549,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2551,"byte_end":2563,"line_start":71,"line_end":71,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2565,"byte_end":2568,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ Panics if the `CARGO_MANIFEST_DIR` variable is not set. This variable","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2570,"byte_end":2643,"line_start":73,"line_end":73,"column_start":2,"column_end":75}},{"value":"/ is always set by `Cargo` in `build.rs` files.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2645,"byte_end":2694,"line_start":74,"line_end":74,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2985,"byte_end":2997,"line_start":82,"line_end":82,"column_start":9,"column_end":21},"name":"with_project","qualname":"<WasmBuilderSelectProject>::with_project","value":"fn (self, path: impl Into<PathBuf>) -> Result<WasmBuilderSelectSource, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Use the given `path` as project for building the WASM binary.","sig":null,"attributes":[{"value":"/ Use the given `path` as project for building the WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2829,"byte_end":2894,"line_start":79,"line_end":79,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2896,"byte_end":2899,"line_start":80,"line_end":80,"column_start":2,"column_end":5}},{"value":"/ Returns an error if the given `path` does not points to a `Cargo.toml`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2901,"byte_end":2976,"line_start":81,"line_end":81,"column_start":2,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3370,"byte_end":3393,"line_start":97,"line_end":97,"column_start":12,"column_end":35},"name":"WasmBuilderSelectSource","qualname":"::WasmBuilderSelectSource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Second step of the [`WasmBuilder`] to set the source of the `wasm-builder`.\n","sig":null,"attributes":[{"value":"/ Second step of the [`WasmBuilder`] to set the source of the `wasm-builder`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3279,"byte_end":3358,"line_start":96,"line_end":96,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3621,"byte_end":3648,"line_start":104,"line_end":104,"column_start":9,"column_end":36},"name":"with_wasm_builder_from_path","qualname":"<WasmBuilderSelectSource>::with_wasm_builder_from_path","value":"fn (self, path: &'static str) -> WasmBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use the given `path` as source for `wasm-builder`.","sig":null,"attributes":[{"value":"/ Use the given `path` as source for `wasm-builder`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3437,"byte_end":3491,"line_start":100,"line_end":100,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3493,"byte_end":3496,"line_start":101,"line_end":101,"column_start":2,"column_end":5}},{"value":"/ The `path` must be relative and point to the directory that contains the `Cargo.toml` for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3498,"byte_end":3591,"line_start":102,"line_end":102,"column_start":2,"column_end":95}},{"value":"/ `wasm-builder`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3593,"byte_end":3612,"line_start":103,"line_end":103,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3910,"byte_end":3936,"line_start":114,"line_end":114,"column_start":9,"column_end":35},"name":"with_wasm_builder_from_git","qualname":"<WasmBuilderSelectSource>::with_wasm_builder_from_git","value":"fn (self, repo: &'static str, rev: &'static str) -> WasmBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use the given `repo` and `rev` as source for `wasm-builder`.\n","sig":null,"attributes":[{"value":"/ Use the given `repo` and `rev` as source for `wasm-builder`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3837,"byte_end":3901,"line_start":113,"line_end":113,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4234,"byte_end":4263,"line_start":124,"line_end":124,"column_start":9,"column_end":38},"name":"with_wasm_builder_from_crates","qualname":"<WasmBuilderSelectSource>::with_wasm_builder_from_crates","value":"fn (self, version: &'static str) -> WasmBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use the given `version` to fetch `wasm-builder` source from crates.io.\n","sig":null,"attributes":[{"value":"/ Use the given `version` to fetch `wasm-builder` source from crates.io.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4151,"byte_end":4225,"line_start":123,"line_end":123,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4703,"byte_end":4740,"line_start":138,"line_end":138,"column_start":9,"column_end":46},"name":"with_wasm_builder_from_crates_or_path","qualname":"<WasmBuilderSelectSource>::with_wasm_builder_from_crates_or_path","value":"fn (self, version: &'static str, path: &'static str) -> WasmBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use the given `version` to fetch `wasm-builder` source from crates.io or use\n the given `path` as source.","sig":null,"attributes":[{"value":"/ Use the given `version` to fetch `wasm-builder` source from crates.io or use","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4460,"byte_end":4540,"line_start":133,"line_end":133,"column_start":2,"column_end":82}},{"value":"/ the given `path` as source.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4542,"byte_end":4573,"line_start":134,"line_end":134,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4575,"byte_end":4578,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ The `path` must be relative and point to the directory that contains the `Cargo.toml` for","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4580,"byte_end":4673,"line_start":136,"line_end":136,"column_start":2,"column_end":95}},{"value":"/ `wasm-builder`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4675,"byte_end":4694,"line_start":137,"line_end":137,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5047,"byte_end":5071,"line_start":152,"line_end":152,"column_start":9,"column_end":33},"name":"with_wasm_builder_source","qualname":"<WasmBuilderSelectSource>::with_wasm_builder_source","value":"fn (self, source: WasmBuilderSource) -> WasmBuilder","parent":null,"children":[],"decl_id":null,"docs":" Use the given `source` as source for `wasm-builder`.\n","sig":null,"attributes":[{"value":"/ Use the given `source` as source for `wasm-builder`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":4982,"byte_end":5038,"line_start":151,"line_end":151,"column_start":2,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5859,"byte_end":5870,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"WasmBuilder","qualname":"::WasmBuilder","value":"WasmBuilder {  }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" The builder for building a wasm binary.","sig":null,"attributes":[{"value":"/ The builder for building a wasm binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5237,"byte_end":5280,"line_start":162,"line_end":162,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5281,"byte_end":5284,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ The builder itself is seperated into multiple structs to make the setup type safe.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5285,"byte_end":5371,"line_start":164,"line_end":164,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5372,"byte_end":5375,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Building a wasm binary:","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5376,"byte_end":5403,"line_start":166,"line_end":166,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5404,"byte_end":5407,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ 1. Call [`WasmBuilder::new`] to create a new builder.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5408,"byte_end":5465,"line_start":168,"line_end":168,"column_start":1,"column_end":58}},{"value":"/ 2. Select the project to build using the methods of [`WasmBuilderSelectProject`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5466,"byte_end":5551,"line_start":169,"line_end":169,"column_start":1,"column_end":86}},{"value":"/ 3. Select the source of the `wasm-builder` crate using the methods of","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5552,"byte_end":5625,"line_start":170,"line_end":170,"column_start":1,"column_end":74}},{"value":"/    [`WasmBuilderSelectSource`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5626,"byte_end":5661,"line_start":171,"line_end":171,"column_start":1,"column_end":36}},{"value":"/ 4. Set additional `RUST_FLAGS` or a different name for the file containing the WASM code","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5662,"byte_end":5754,"line_start":172,"line_end":172,"column_start":1,"column_end":93}},{"value":"/    using methods of [`WasmBuilder`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5755,"byte_end":5795,"line_start":173,"line_end":173,"column_start":1,"column_end":41}},{"value":"/ 5. Build the WASM binary using [`Self::build`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":5796,"byte_end":5847,"line_start":174,"line_end":174,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6369,"byte_end":6372,"line_start":191,"line_end":191,"column_start":9,"column_end":12},"name":"new","qualname":"<WasmBuilder>::new","value":"fn () -> WasmBuilderSelectProject","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of the builder.\n","sig":null,"attributes":[{"value":"/ Create a new instance of the builder.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6319,"byte_end":6360,"line_start":190,"line_end":190,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6612,"byte_end":6628,"line_start":200,"line_end":200,"column_start":9,"column_end":25},"name":"export_heap_base","qualname":"<WasmBuilder>::export_heap_base","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable exporting `__heap_base` as global variable in the WASM binary.","sig":null,"attributes":[{"value":"/ Enable exporting `__heap_base` as global variable in the WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6459,"byte_end":6532,"line_start":197,"line_end":197,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6534,"byte_end":6537,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ This adds `-Clink-arg=--export=__heap_base` to `RUST_FLAGS`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6539,"byte_end":6603,"line_start":199,"line_end":199,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6965,"byte_end":6978,"line_start":210,"line_end":210,"column_start":9,"column_end":22},"name":"set_file_name","qualname":"<WasmBuilder>::set_file_name","value":"fn (mut self, file_name: impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the name of the file that will be generated in `OUT_DIR`.","sig":null,"attributes":[{"value":"/ Set the name of the file that will be generated in `OUT_DIR`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6727,"byte_end":6792,"line_start":205,"line_end":205,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6794,"byte_end":6797,"line_start":206,"line_end":206,"column_start":2,"column_end":5}},{"value":"/ This file needs to be included to get access to the build WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6799,"byte_end":6873,"line_start":207,"line_end":207,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6875,"byte_end":6878,"line_start":208,"line_end":208,"column_start":2,"column_end":5}},{"value":"/ If this function is not called, `file_name` defaults to `wasm_binary.rs`","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6880,"byte_end":6956,"line_start":209,"line_end":209,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7226,"byte_end":7239,"line_start":218,"line_end":218,"column_start":9,"column_end":22},"name":"import_memory","qualname":"<WasmBuilder>::import_memory","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instruct the linker to import the memory into the WASM binary.","sig":null,"attributes":[{"value":"/ Instruct the linker to import the memory into the WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7084,"byte_end":7150,"line_start":215,"line_end":215,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7152,"byte_end":7155,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ This adds `-C link-arg=--import-memory` to `RUST_FLAGS`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7157,"byte_end":7217,"line_start":217,"line_end":217,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7455,"byte_end":7475,"line_start":226,"line_end":226,"column_start":9,"column_end":29},"name":"append_to_rust_flags","qualname":"<WasmBuilder>::append_to_rust_flags","value":"fn (mut self, flag: impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Append the given `flag` to `RUST_FLAGS`.","sig":null,"attributes":[{"value":"/ Append the given `flag` to `RUST_FLAGS`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7334,"byte_end":7378,"line_start":223,"line_end":223,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7380,"byte_end":7383,"line_start":224,"line_end":224,"column_start":2,"column_end":5}},{"value":"/ `flag` is appended as is, so it needs to be a valid flag.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7385,"byte_end":7446,"line_start":225,"line_end":225,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7605,"byte_end":7610,"line_start":232,"line_end":232,"column_start":9,"column_end":14},"name":"build","qualname":"<WasmBuilder>::build","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Build the WASM binary.\n","sig":null,"attributes":[{"value":"/ Build the WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":7570,"byte_end":7596,"line_start":231,"line_end":231,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":54},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9183,"byte_end":9187,"line_start":276,"line_end":276,"column_start":2,"column_end":6},"name":"Path","qualname":"::WasmBuilderSource::Path","value":"WasmBuilderSource::Path(&'static str)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The relative path to the source code from the current manifest dir.\n","sig":null,"attributes":[{"value":"/ The relative path to the source code from the current manifest dir.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9110,"byte_end":9181,"line_start":275,"line_end":275,"column_start":2,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":57},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9259,"byte_end":9262,"line_start":278,"line_end":278,"column_start":2,"column_end":5},"name":"Git","qualname":"::WasmBuilderSource::Git","value":"WasmBuilderSource::Git { repo, rev }","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The git repository that contains the source code.\n","sig":null,"attributes":[{"value":"/ The git repository that contains the source code.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9204,"byte_end":9257,"line_start":277,"line_end":277,"column_start":2,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":60},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9363,"byte_end":9369,"line_start":283,"line_end":283,"column_start":2,"column_end":8},"name":"Crates","qualname":"::WasmBuilderSource::Crates","value":"WasmBuilderSource::Crates(&'static str)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Use the given version released on crates.io.\n","sig":null,"attributes":[{"value":"/ Use the given version released on crates.io.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9313,"byte_end":9361,"line_start":282,"line_end":282,"column_start":2,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":63},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9459,"byte_end":9471,"line_start":285,"line_end":285,"column_start":2,"column_end":14},"name":"CratesOrPath","qualname":"::WasmBuilderSource::CratesOrPath","value":"WasmBuilderSource::CratesOrPath { version, path }","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Use the given version released on crates.io or from the given path.\n","sig":null,"attributes":[{"value":"/ Use the given version released on crates.io or from the given path.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9386,"byte_end":9457,"line_start":284,"line_end":284,"column_start":2,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":53},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9089,"byte_end":9106,"line_start":274,"line_end":274,"column_start":10,"column_end":27},"name":"WasmBuilderSource","qualname":"::WasmBuilderSource","value":"WasmBuilderSource::{Path, Git, Crates, CratesOrPath}","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":63}],"decl_id":null,"docs":" The `wasm-builder` dependency source.\n","sig":null,"attributes":[{"value":"/ The `wasm-builder` dependency source.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9038,"byte_end":9079,"line_start":273,"line_end":273,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10513,"byte_end":10549,"line_start":326,"line_end":326,"column_start":8,"column_end":44},"name":"build_current_project_with_rustflags","qualname":"::build_current_project_with_rustflags","value":"fn (file_name: &str, wasm_builder_source: WasmBuilderSource, default_rust_flags: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Build the currently built project as WASM binary and extend `RUSTFLAGS` with the given rustflags.","sig":null,"attributes":[{"value":"/ Build the currently built project as WASM binary and extend `RUSTFLAGS` with the given rustflags.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10264,"byte_end":10365,"line_start":319,"line_end":319,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10366,"byte_end":10369,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ For more information, see [`build_current_project`].","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10370,"byte_end":10426,"line_start":321,"line_end":321,"column_start":1,"column_end":57}},{"value":"deprecated(since = \"1.0.5\", note = \"Please switch to [`WasmBuilder`]\",)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10427,"byte_end":10505,"line_start":322,"line_end":325,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":11329,"byte_end":11350,"line_start":350,"line_end":350,"column_start":8,"column_end":29},"name":"build_current_project","qualname":"::build_current_project","value":"fn (file_name: &str, wasm_builder_source: WasmBuilderSource) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Build the currently built project as WASM binary.","sig":null,"attributes":[{"value":"/ Build the currently built project as WASM binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10822,"byte_end":10875,"line_start":339,"line_end":339,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10876,"byte_end":10879,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ The current project is determined using the `CARGO_MANIFEST_DIR` environment variable.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10880,"byte_end":10970,"line_start":341,"line_end":341,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10971,"byte_end":10974,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ `file_name` - The name of the file being generated in the `OUT_DIR`. The file contains the","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":10975,"byte_end":11069,"line_start":343,"line_end":343,"column_start":1,"column_end":95}},{"value":"/               constant `WASM_BINARY` which contains the build wasm binary.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":11070,"byte_end":11148,"line_start":344,"line_end":344,"column_start":1,"column_end":79}},{"value":"/ `wasm_builder_path` - Path to the wasm-builder project, relative to `CARGO_MANIFEST_DIR`.","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":11149,"byte_end":11242,"line_start":345,"line_end":345,"column_start":1,"column_end":94}},{"value":"deprecated(since = \"1.0.5\", note = \"Please switch to [`WasmBuilder`]\",)","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":11243,"byte_end":11321,"line_start":346,"line_end":349,"column_start":1,"column_end":3}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2448,"byte_end":2472,"line_start":68,"line_end":68,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3410,"byte_end":3433,"line_start":99,"line_end":99,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6304,"byte_end":6315,"line_start":189,"line_end":189,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9532,"byte_end":9549,"line_start":291,"line_end":291,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":2448,"byte_end":2472,"line_start":68,"line_end":68,"column_start":6,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":3410,"byte_end":3433,"line_start":99,"line_end":99,"column_start":6,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":6304,"byte_end":6315,"line_start":189,"line_end":189,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ipfs/.cargo/git/checkouts/substrate-7e08433d4c370a21/45b9f0a/utils/wasm-builder-runner/src/lib.rs","byte_start":9532,"byte_end":9549,"line_start":291,"line_end":291,"column_start":6,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}}]}